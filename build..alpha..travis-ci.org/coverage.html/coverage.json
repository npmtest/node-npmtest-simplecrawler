{"/home/travis/build/npmtest/node-npmtest-simplecrawler/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_simplecrawler */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/lib.npmtest_simplecrawler.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/lib.npmtest_simplecrawler.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_simplecrawler */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_simplecrawler = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_simplecrawler = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-simplecrawler && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_simplecrawler */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_simplecrawler","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_simplecrawler.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_simplecrawler.rollup.js'] =","            local.assetsDict['/assets.npmtest_simplecrawler.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_simplecrawler.__dirname + '/lib.npmtest_simplecrawler.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":23},"end":{"line":14,"column":35}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"4":{"start":{"line":14,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":15,"column":4},"end":{"line":19,"column":6}}},"branchMap":{},"code":["/*"," * Simplecrawler - Export interfaces"," * https://github.com/cgiffard/node-simplecrawler"," *"," * Copyright (c) 2011-2015, Christopher Giffard"," *"," */","","module.exports = require(\"./crawler.js\");","","module.exports.queue = require(\"./queue.js\");","module.exports.cache = require(\"./cache.js\");","","module.exports.crawl = function () {","    throw new Error(","        \"Crawler.crawl is deprecated as of version 1.0.0! \" +","        \"You can now pass a single URL directly to the constructor. \" +","        \"See the documentation for more details!\"","    );","};",""],"l":{"9":1,"11":1,"12":1,"14":1,"15":0}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/crawler.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/crawler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":1,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":1,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":1,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":1,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":1,"513":0,"514":0,"515":0,"516":0,"517":1,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":1,"526":0,"527":0,"528":0,"529":0,"530":1,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0,0,0,0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":35}}},"2":{"name":"(anonymous_2)","line":333,"loc":{"start":{"line":333,"column":8},"end":{"line":333,"column":25}}},"3":{"name":"(anonymous_3)","line":335,"loc":{"start":{"line":335,"column":76},"end":{"line":335,"column":93}}},"4":{"name":"(anonymous_4)","line":344,"loc":{"start":{"line":344,"column":8},"end":{"line":344,"column":25}}},"5":{"name":"(anonymous_5)","line":348,"loc":{"start":{"line":348,"column":8},"end":{"line":348,"column":25}}},"6":{"name":"(anonymous_6)","line":410,"loc":{"start":{"line":410,"column":37},"end":{"line":410,"column":51}}},"7":{"name":"(anonymous_7)","line":428,"loc":{"start":{"line":428,"column":26},"end":{"line":428,"column":37}}},"8":{"name":"(anonymous_8)","line":441,"loc":{"start":{"line":441,"column":40},"end":{"line":441,"column":56}}},"9":{"name":"(anonymous_9)","line":446,"loc":{"start":{"line":446,"column":25},"end":{"line":446,"column":36}}},"10":{"name":"(anonymous_10)","line":471,"loc":{"start":{"line":471,"column":33},"end":{"line":471,"column":47}}},"11":{"name":"(anonymous_11)","line":480,"loc":{"start":{"line":480,"column":45},"end":{"line":480,"column":70}}},"12":{"name":"(anonymous_12)","line":496,"loc":{"start":{"line":496,"column":38},"end":{"line":496,"column":58}}},"13":{"name":"(anonymous_13)","line":587,"loc":{"start":{"line":587,"column":33},"end":{"line":587,"column":57}}},"14":{"name":"(anonymous_14)","line":603,"loc":{"start":{"line":603,"column":55},"end":{"line":603,"column":74}}},"15":{"name":"(anonymous_15)","line":611,"loc":{"start":{"line":611,"column":32},"end":{"line":611,"column":48}}},"16":{"name":"(anonymous_16)","line":621,"loc":{"start":{"line":621,"column":42},"end":{"line":621,"column":74}}},"17":{"name":"(anonymous_17)","line":632,"loc":{"start":{"line":632,"column":31},"end":{"line":632,"column":42}}},"18":{"name":"(anonymous_18)","line":666,"loc":{"start":{"line":666,"column":46},"end":{"line":666,"column":57}}},"19":{"name":"(anonymous_19)","line":671,"loc":{"start":{"line":671,"column":30},"end":{"line":671,"column":50}}},"20":{"name":"(anonymous_20)","line":685,"loc":{"start":{"line":685,"column":38},"end":{"line":685,"column":52}}},"21":{"name":"(anonymous_21)","line":702,"loc":{"start":{"line":702,"column":41},"end":{"line":702,"column":65}}},"22":{"name":"(anonymous_22)","line":712,"loc":{"start":{"line":712,"column":38},"end":{"line":712,"column":57}}},"23":{"name":"(anonymous_23)","line":715,"loc":{"start":{"line":715,"column":43},"end":{"line":715,"column":63}}},"24":{"name":"(anonymous_24)","line":730,"loc":{"start":{"line":730,"column":31},"end":{"line":730,"column":55}}},"25":{"name":"cleanURL","line":791,"loc":{"start":{"line":791,"column":0},"end":{"line":791,"column":35}}},"26":{"name":"(anonymous_26)","line":817,"loc":{"start":{"line":817,"column":41},"end":{"line":817,"column":71}}},"27":{"name":"(anonymous_27)","line":826,"loc":{"start":{"line":826,"column":13},"end":{"line":826,"column":27}}},"28":{"name":"(anonymous_28)","line":829,"loc":{"start":{"line":829,"column":16},"end":{"line":829,"column":36}}},"29":{"name":"(anonymous_29)","line":853,"loc":{"start":{"line":853,"column":35},"end":{"line":853,"column":51}}},"30":{"name":"(anonymous_30)","line":870,"loc":{"start":{"line":870,"column":38},"end":{"line":870,"column":61}}},"31":{"name":"(anonymous_31)","line":890,"loc":{"start":{"line":890,"column":40},"end":{"line":890,"column":66}}},"32":{"name":"(anonymous_32)","line":909,"loc":{"start":{"line":909,"column":32},"end":{"line":909,"column":47}}},"33":{"name":"domainInWhitelist","line":917,"loc":{"start":{"line":917,"column":4},"end":{"line":917,"column":37}}},"34":{"name":"(anonymous_34)","line":926,"loc":{"start":{"line":926,"column":44},"end":{"line":926,"column":60}}},"35":{"name":"isSubdomainOf","line":941,"loc":{"start":{"line":941,"column":4},"end":{"line":941,"column":44}}},"36":{"name":"(anonymous_36)","line":987,"loc":{"start":{"line":987,"column":37},"end":{"line":987,"column":71}}},"37":{"name":"(anonymous_37)","line":1001,"loc":{"start":{"line":1001,"column":22},"end":{"line":1001,"column":36}}},"38":{"name":"(anonymous_38)","line":1026,"loc":{"start":{"line":1026,"column":29},"end":{"line":1026,"column":60}}},"39":{"name":"(anonymous_39)","line":1057,"loc":{"start":{"line":1057,"column":42},"end":{"line":1057,"column":77}}},"40":{"name":"(anonymous_40)","line":1067,"loc":{"start":{"line":1067,"column":7},"end":{"line":1067,"column":31}}},"41":{"name":"(anonymous_41)","line":1090,"loc":{"start":{"line":1090,"column":44},"end":{"line":1090,"column":60}}},"42":{"name":"(anonymous_42)","line":1134,"loc":{"start":{"line":1134,"column":35},"end":{"line":1134,"column":55}}},"43":{"name":"(anonymous_43)","line":1139,"loc":{"start":{"line":1139,"column":7},"end":{"line":1139,"column":34}}},"44":{"name":"(anonymous_44)","line":1159,"loc":{"start":{"line":1159,"column":59},"end":{"line":1159,"column":78}}},"45":{"name":"(anonymous_45)","line":1170,"loc":{"start":{"line":1170,"column":34},"end":{"line":1170,"column":45}}},"46":{"name":"(anonymous_46)","line":1177,"loc":{"start":{"line":1177,"column":50},"end":{"line":1177,"column":61}}},"47":{"name":"(anonymous_47)","line":1191,"loc":{"start":{"line":1191,"column":15},"end":{"line":1191,"column":42}}},"48":{"name":"(anonymous_48)","line":1207,"loc":{"start":{"line":1207,"column":34},"end":{"line":1207,"column":54}}},"49":{"name":"(anonymous_49)","line":1227,"loc":{"start":{"line":1227,"column":15},"end":{"line":1227,"column":42}}},"50":{"name":"(anonymous_50)","line":1263,"loc":{"start":{"line":1263,"column":33},"end":{"line":1263,"column":69}}},"51":{"name":"(anonymous_51)","line":1289,"loc":{"start":{"line":1289,"column":35},"end":{"line":1289,"column":80}}},"52":{"name":"(anonymous_52)","line":1313,"loc":{"start":{"line":1313,"column":7},"end":{"line":1313,"column":34}}},"53":{"name":"(anonymous_53)","line":1348,"loc":{"start":{"line":1348,"column":15},"end":{"line":1348,"column":42}}},"54":{"name":"(anonymous_54)","line":1364,"loc":{"start":{"line":1364,"column":53},"end":{"line":1364,"column":91}}},"55":{"name":"(anonymous_55)","line":1374,"loc":{"start":{"line":1374,"column":15},"end":{"line":1374,"column":39}}},"56":{"name":"(anonymous_56)","line":1391,"loc":{"start":{"line":1391,"column":23},"end":{"line":1391,"column":50}}},"57":{"name":"(anonymous_57)","line":1409,"loc":{"start":{"line":1409,"column":23},"end":{"line":1409,"column":50}}},"58":{"name":"(anonymous_58)","line":1424,"loc":{"start":{"line":1424,"column":31},"end":{"line":1424,"column":42}}},"59":{"name":"(anonymous_59)","line":1443,"loc":{"start":{"line":1443,"column":54},"end":{"line":1443,"column":76}}},"60":{"name":"(anonymous_60)","line":1470,"loc":{"start":{"line":1470,"column":15},"end":{"line":1470,"column":42}}},"61":{"name":"(anonymous_61)","line":1506,"loc":{"start":{"line":1506,"column":15},"end":{"line":1506,"column":42}}},"62":{"name":"(anonymous_62)","line":1535,"loc":{"start":{"line":1535,"column":15},"end":{"line":1535,"column":42}}},"63":{"name":"emitFetchComplete","line":1555,"loc":{"start":{"line":1555,"column":8},"end":{"line":1555,"column":69}}},"64":{"name":"(anonymous_64)","line":1559,"loc":{"start":{"line":1559,"column":15},"end":{"line":1559,"column":42}}},"65":{"name":"processReceivedData","line":1590,"loc":{"start":{"line":1590,"column":8},"end":{"line":1590,"column":39}}},"66":{"name":"(anonymous_66)","line":1606,"loc":{"start":{"line":1606,"column":15},"end":{"line":1606,"column":43}}},"67":{"name":"(anonymous_67)","line":1625,"loc":{"start":{"line":1625,"column":47},"end":{"line":1625,"column":83}}},"68":{"name":"receiveData","line":1647,"loc":{"start":{"line":1647,"column":8},"end":{"line":1647,"column":36}}},"69":{"name":"(anonymous_69)","line":1702,"loc":{"start":{"line":1702,"column":26},"end":{"line":1702,"column":37}}},"70":{"name":"(anonymous_70)","line":1710,"loc":{"start":{"line":1710,"column":38},"end":{"line":1710,"column":65}}},"71":{"name":"(anonymous_71)","line":1728,"loc":{"start":{"line":1728,"column":51},"end":{"line":1728,"column":96}}},"72":{"name":"(anonymous_72)","line":1751,"loc":{"start":{"line":1751,"column":27},"end":{"line":1751,"column":54}}},"73":{"name":"(anonymous_73)","line":1762,"loc":{"start":{"line":1762,"column":56},"end":{"line":1762,"column":85}}},"74":{"name":"(anonymous_74)","line":1767,"loc":{"start":{"line":1767,"column":40},"end":{"line":1767,"column":62}}},"75":{"name":"(anonymous_75)","line":1793,"loc":{"start":{"line":1793,"column":25},"end":{"line":1793,"column":57}}},"76":{"name":"(anonymous_76)","line":1800,"loc":{"start":{"line":1800,"column":38},"end":{"line":1800,"column":56}}},"77":{"name":"(anonymous_77)","line":1814,"loc":{"start":{"line":1814,"column":25},"end":{"line":1814,"column":36}}},"78":{"name":"(anonymous_78)","line":1818,"loc":{"start":{"line":1818,"column":23},"end":{"line":1818,"column":34}}},"79":{"name":"(anonymous_79)","line":1828,"loc":{"start":{"line":1828,"column":11},"end":{"line":1828,"column":22}}},"80":{"name":"(anonymous_80)","line":1846,"loc":{"start":{"line":1846,"column":41},"end":{"line":1846,"column":60}}},"81":{"name":"(anonymous_81)","line":1860,"loc":{"start":{"line":1860,"column":44},"end":{"line":1860,"column":60}}},"82":{"name":"(anonymous_82)","line":1880,"loc":{"start":{"line":1880,"column":38},"end":{"line":1880,"column":57}}},"83":{"name":"(anonymous_83)","line":1894,"loc":{"start":{"line":1894,"column":41},"end":{"line":1894,"column":57}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":45}},"2":{"start":{"line":11,"column":0},"end":{"line":19,"column":47}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"4":{"start":{"line":29,"column":0},"end":{"line":417,"column":2}},"5":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"6":{"start":{"line":33,"column":8},"end":{"line":33,"column":39}},"7":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":37,"column":8},"end":{"line":37,"column":158}},"9":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":90}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"12":{"start":{"line":46,"column":4},"end":{"line":47,"column":48}},"13":{"start":{"line":53,"column":4},"end":{"line":53,"column":33}},"14":{"start":{"line":60,"column":4},"end":{"line":60,"column":37}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":24}},"16":{"start":{"line":75,"column":4},"end":{"line":75,"column":28}},"17":{"start":{"line":81,"column":4},"end":{"line":81,"column":26}},"18":{"start":{"line":87,"column":4},"end":{"line":87,"column":29}},"19":{"start":{"line":94,"column":4},"end":{"line":96,"column":48}},"20":{"start":{"line":103,"column":4},"end":{"line":103,"column":34}},"21":{"start":{"line":112,"column":4},"end":{"line":112,"column":33}},"22":{"start":{"line":120,"column":4},"end":{"line":120,"column":42}},"23":{"start":{"line":128,"column":4},"end":{"line":128,"column":36}},"24":{"start":{"line":138,"column":4},"end":{"line":138,"column":33}},"25":{"start":{"line":146,"column":4},"end":{"line":146,"column":31}},"26":{"start":{"line":153,"column":4},"end":{"line":153,"column":32}},"27":{"start":{"line":162,"column":4},"end":{"line":162,"column":32}},"28":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"29":{"start":{"line":180,"column":4},"end":{"line":180,"column":22}},"30":{"start":{"line":186,"column":4},"end":{"line":186,"column":26}},"31":{"start":{"line":193,"column":4},"end":{"line":193,"column":37}},"32":{"start":{"line":200,"column":4},"end":{"line":200,"column":26}},"33":{"start":{"line":207,"column":4},"end":{"line":207,"column":26}},"34":{"start":{"line":214,"column":4},"end":{"line":214,"column":26}},"35":{"start":{"line":220,"column":4},"end":{"line":220,"column":27}},"36":{"start":{"line":227,"column":4},"end":{"line":227,"column":25}},"37":{"start":{"line":234,"column":4},"end":{"line":234,"column":25}},"38":{"start":{"line":240,"column":4},"end":{"line":240,"column":30}},"39":{"start":{"line":246,"column":4},"end":{"line":246,"column":35}},"40":{"start":{"line":253,"column":4},"end":{"line":253,"column":28}},"41":{"start":{"line":260,"column":4},"end":{"line":260,"column":30}},"42":{"start":{"line":266,"column":4},"end":{"line":269,"column":6}},"43":{"start":{"line":276,"column":4},"end":{"line":276,"column":44}},"44":{"start":{"line":284,"column":4},"end":{"line":289,"column":6}},"45":{"start":{"line":296,"column":4},"end":{"line":296,"column":36}},"46":{"start":{"line":302,"column":4},"end":{"line":302,"column":33}},"47":{"start":{"line":309,"column":4},"end":{"line":309,"column":34}},"48":{"start":{"line":316,"column":4},"end":{"line":352,"column":6}},"49":{"start":{"line":334,"column":12},"end":{"line":334,"column":68}},"50":{"start":{"line":335,"column":12},"end":{"line":337,"column":20}},"51":{"start":{"line":336,"column":16},"end":{"line":336,"column":53}},"52":{"start":{"line":345,"column":12},"end":{"line":345,"column":142}},"53":{"start":{"line":346,"column":12},"end":{"line":346,"column":65}},"54":{"start":{"line":349,"column":12},"end":{"line":349,"column":141}},"55":{"start":{"line":350,"column":12},"end":{"line":350,"column":65}},"56":{"start":{"line":359,"column":4},"end":{"line":359,"column":34}},"57":{"start":{"line":366,"column":4},"end":{"line":366,"column":32}},"58":{"start":{"line":375,"column":4},"end":{"line":375,"column":22}},"59":{"start":{"line":382,"column":4},"end":{"line":382,"column":34}},"60":{"start":{"line":389,"column":4},"end":{"line":389,"column":38}},"61":{"start":{"line":396,"column":4},"end":{"line":396,"column":40}},"62":{"start":{"line":399,"column":4},"end":{"line":407,"column":6}},"63":{"start":{"line":410,"column":4},"end":{"line":416,"column":7}},"64":{"start":{"line":411,"column":8},"end":{"line":415,"column":11}},"65":{"start":{"line":419,"column":0},"end":{"line":419,"column":37}},"66":{"start":{"line":428,"column":0},"end":{"line":463,"column":2}},"67":{"start":{"line":429,"column":4},"end":{"line":429,"column":23}},"68":{"start":{"line":431,"column":4},"end":{"line":433,"column":5}},"69":{"start":{"line":432,"column":8},"end":{"line":432,"column":23}},"70":{"start":{"line":435,"column":4},"end":{"line":435,"column":27}},"71":{"start":{"line":437,"column":4},"end":{"line":437,"column":59}},"72":{"start":{"line":438,"column":4},"end":{"line":438,"column":35}},"73":{"start":{"line":439,"column":4},"end":{"line":439,"column":47}},"74":{"start":{"line":441,"column":4},"end":{"line":460,"column":7}},"75":{"start":{"line":442,"column":8},"end":{"line":444,"column":9}},"76":{"start":{"line":443,"column":12},"end":{"line":443,"column":24}},"77":{"start":{"line":446,"column":8},"end":{"line":451,"column":11}},"78":{"start":{"line":447,"column":12},"end":{"line":448,"column":34}},"79":{"start":{"line":450,"column":12},"end":{"line":450,"column":28}},"80":{"start":{"line":459,"column":8},"end":{"line":459,"column":35}},"81":{"start":{"line":462,"column":4},"end":{"line":462,"column":19}},"82":{"start":{"line":471,"column":0},"end":{"line":489,"column":2}},"83":{"start":{"line":472,"column":4},"end":{"line":472,"column":23}},"84":{"start":{"line":474,"column":4},"end":{"line":475,"column":24}},"85":{"start":{"line":479,"column":4},"end":{"line":486,"column":5}},"86":{"start":{"line":480,"column":8},"end":{"line":483,"column":22}},"87":{"start":{"line":481,"column":12},"end":{"line":481,"column":76}},"88":{"start":{"line":482,"column":12},"end":{"line":482,"column":59}},"89":{"start":{"line":488,"column":4},"end":{"line":488,"column":50}},"90":{"start":{"line":496,"column":0},"end":{"line":579,"column":2}},"91":{"start":{"line":497,"column":4},"end":{"line":497,"column":23}},"92":{"start":{"line":499,"column":4},"end":{"line":499,"column":88}},"93":{"start":{"line":502,"column":4},"end":{"line":504,"column":37}},"94":{"start":{"line":507,"column":4},"end":{"line":511,"column":5}},"95":{"start":{"line":508,"column":8},"end":{"line":508,"column":44}},"96":{"start":{"line":509,"column":8},"end":{"line":509,"column":40}},"97":{"start":{"line":510,"column":8},"end":{"line":510,"column":36}},"98":{"start":{"line":513,"column":4},"end":{"line":515,"column":67}},"99":{"start":{"line":518,"column":4},"end":{"line":529,"column":6}},"100":{"start":{"line":531,"column":4},"end":{"line":533,"column":5}},"101":{"start":{"line":532,"column":8},"end":{"line":532,"column":68}},"102":{"start":{"line":535,"column":4},"end":{"line":537,"column":5}},"103":{"start":{"line":536,"column":8},"end":{"line":536,"column":60}},"104":{"start":{"line":540,"column":4},"end":{"line":542,"column":5}},"105":{"start":{"line":541,"column":8},"end":{"line":541,"column":35}},"106":{"start":{"line":546,"column":4},"end":{"line":549,"column":5}},"107":{"start":{"line":547,"column":8},"end":{"line":548,"column":72}},"108":{"start":{"line":552,"column":4},"end":{"line":558,"column":5}},"109":{"start":{"line":553,"column":8},"end":{"line":553,"column":61}},"110":{"start":{"line":556,"column":8},"end":{"line":556,"column":62}},"111":{"start":{"line":557,"column":8},"end":{"line":557,"column":52}},"112":{"start":{"line":561,"column":4},"end":{"line":567,"column":5}},"113":{"start":{"line":562,"column":8},"end":{"line":562,"column":68}},"114":{"start":{"line":565,"column":8},"end":{"line":565,"column":72}},"115":{"start":{"line":566,"column":8},"end":{"line":566,"column":66}},"116":{"start":{"line":570,"column":4},"end":{"line":576,"column":5}},"117":{"start":{"line":571,"column":8},"end":{"line":575,"column":9}},"118":{"start":{"line":572,"column":12},"end":{"line":574,"column":13}},"119":{"start":{"line":573,"column":16},"end":{"line":573,"column":79}},"120":{"start":{"line":578,"column":4},"end":{"line":578,"column":26}},"121":{"start":{"line":587,"column":0},"end":{"line":678,"column":2}},"122":{"start":{"line":588,"column":4},"end":{"line":589,"column":17}},"123":{"start":{"line":591,"column":4},"end":{"line":591,"column":32}},"124":{"start":{"line":592,"column":4},"end":{"line":592,"column":68}},"125":{"start":{"line":595,"column":4},"end":{"line":598,"column":5}},"126":{"start":{"line":596,"column":8},"end":{"line":596,"column":42}},"127":{"start":{"line":597,"column":8},"end":{"line":597,"column":33}},"128":{"start":{"line":600,"column":4},"end":{"line":600,"column":92}},"129":{"start":{"line":603,"column":4},"end":{"line":662,"column":7}},"130":{"start":{"line":604,"column":8},"end":{"line":661,"column":9}},"131":{"start":{"line":605,"column":12},"end":{"line":609,"column":43}},"132":{"start":{"line":611,"column":12},"end":{"line":619,"column":15}},"133":{"start":{"line":612,"column":16},"end":{"line":618,"column":17}},"134":{"start":{"line":613,"column":20},"end":{"line":613,"column":88}},"135":{"start":{"line":614,"column":20},"end":{"line":614,"column":59}},"136":{"start":{"line":616,"column":20},"end":{"line":616,"column":39}},"137":{"start":{"line":617,"column":20},"end":{"line":617,"column":79}},"138":{"start":{"line":621,"column":12},"end":{"line":630,"column":14}},"139":{"start":{"line":622,"column":16},"end":{"line":624,"column":17}},"140":{"start":{"line":623,"column":20},"end":{"line":623,"column":90}},"141":{"start":{"line":626,"column":16},"end":{"line":627,"column":85}},"142":{"start":{"line":629,"column":16},"end":{"line":629,"column":71}},"143":{"start":{"line":632,"column":12},"end":{"line":640,"column":15}},"144":{"start":{"line":633,"column":16},"end":{"line":633,"column":75}},"145":{"start":{"line":635,"column":16},"end":{"line":639,"column":17}},"146":{"start":{"line":636,"column":20},"end":{"line":636,"column":72}},"147":{"start":{"line":638,"column":20},"end":{"line":638,"column":71}},"148":{"start":{"line":641,"column":15},"end":{"line":661,"column":9}},"149":{"start":{"line":644,"column":12},"end":{"line":644,"column":31}},"150":{"start":{"line":646,"column":12},"end":{"line":648,"column":29}},"151":{"start":{"line":650,"column":12},"end":{"line":655,"column":13}},"152":{"start":{"line":651,"column":16},"end":{"line":651,"column":70}},"153":{"start":{"line":653,"column":16},"end":{"line":653,"column":132}},"154":{"start":{"line":654,"column":16},"end":{"line":654,"column":46}},"155":{"start":{"line":657,"column":12},"end":{"line":657,"column":31}},"156":{"start":{"line":659,"column":12},"end":{"line":659,"column":116}},"157":{"start":{"line":660,"column":12},"end":{"line":660,"column":42}},"158":{"start":{"line":664,"column":4},"end":{"line":664,"column":24}},"159":{"start":{"line":666,"column":4},"end":{"line":669,"column":7}},"160":{"start":{"line":667,"column":8},"end":{"line":667,"column":30}},"161":{"start":{"line":668,"column":8},"end":{"line":668,"column":60}},"162":{"start":{"line":671,"column":4},"end":{"line":675,"column":7}},"163":{"start":{"line":672,"column":8},"end":{"line":674,"column":9}},"164":{"start":{"line":673,"column":12},"end":{"line":673,"column":32}},"165":{"start":{"line":677,"column":4},"end":{"line":677,"column":19}},"166":{"start":{"line":685,"column":0},"end":{"line":705,"column":2}},"167":{"start":{"line":686,"column":4},"end":{"line":687,"column":23}},"168":{"start":{"line":689,"column":4},"end":{"line":700,"column":5}},"169":{"start":{"line":690,"column":8},"end":{"line":690,"column":39}},"170":{"start":{"line":693,"column":8},"end":{"line":695,"column":9}},"171":{"start":{"line":694,"column":12},"end":{"line":694,"column":30}},"172":{"start":{"line":699,"column":8},"end":{"line":699,"column":21}},"173":{"start":{"line":702,"column":4},"end":{"line":704,"column":7}},"174":{"start":{"line":703,"column":8},"end":{"line":703,"column":44}},"175":{"start":{"line":712,"column":0},"end":{"line":722,"column":2}},"176":{"start":{"line":713,"column":4},"end":{"line":713,"column":23}},"177":{"start":{"line":715,"column":4},"end":{"line":721,"column":7}},"178":{"start":{"line":716,"column":8},"end":{"line":718,"column":9}},"179":{"start":{"line":717,"column":12},"end":{"line":717,"column":42}},"180":{"start":{"line":720,"column":8},"end":{"line":720,"column":40}},"181":{"start":{"line":730,"column":0},"end":{"line":780,"column":2}},"182":{"start":{"line":731,"column":4},"end":{"line":732,"column":23}},"183":{"start":{"line":734,"column":4},"end":{"line":739,"column":5}},"184":{"start":{"line":735,"column":8},"end":{"line":738,"column":10}},"185":{"start":{"line":742,"column":4},"end":{"line":744,"column":5}},"186":{"start":{"line":743,"column":8},"end":{"line":743,"column":21}},"187":{"start":{"line":747,"column":4},"end":{"line":749,"column":5}},"188":{"start":{"line":748,"column":8},"end":{"line":748,"column":41}},"189":{"start":{"line":751,"column":4},"end":{"line":753,"column":5}},"190":{"start":{"line":752,"column":8},"end":{"line":752,"column":38}},"191":{"start":{"line":755,"column":4},"end":{"line":764,"column":5}},"192":{"start":{"line":756,"column":8},"end":{"line":756,"column":63}},"193":{"start":{"line":758,"column":8},"end":{"line":760,"column":9}},"194":{"start":{"line":759,"column":12},"end":{"line":759,"column":38}},"195":{"start":{"line":763,"column":8},"end":{"line":763,"column":21}},"196":{"start":{"line":767,"column":4},"end":{"line":779,"column":6}},"197":{"start":{"line":791,"column":0},"end":{"line":807,"column":1}},"198":{"start":{"line":792,"column":4},"end":{"line":806,"column":16}},"199":{"start":{"line":817,"column":0},"end":{"line":863,"column":2}},"200":{"start":{"line":818,"column":4},"end":{"line":818,"column":23}},"201":{"start":{"line":820,"column":4},"end":{"line":822,"column":5}},"202":{"start":{"line":821,"column":8},"end":{"line":821,"column":18}},"203":{"start":{"line":824,"column":4},"end":{"line":862,"column":15}},"204":{"start":{"line":827,"column":12},"end":{"line":827,"column":44}},"205":{"start":{"line":832,"column":12},"end":{"line":840,"column":13}},"206":{"start":{"line":833,"column":16},"end":{"line":836,"column":28}},"207":{"start":{"line":839,"column":16},"end":{"line":839,"column":28}},"208":{"start":{"line":843,"column":12},"end":{"line":845,"column":13}},"209":{"start":{"line":844,"column":16},"end":{"line":844,"column":28}},"210":{"start":{"line":848,"column":12},"end":{"line":850,"column":13}},"211":{"start":{"line":849,"column":16},"end":{"line":849,"column":28}},"212":{"start":{"line":853,"column":12},"end":{"line":855,"column":15}},"213":{"start":{"line":854,"column":16},"end":{"line":854,"column":37}},"214":{"start":{"line":857,"column":12},"end":{"line":859,"column":13}},"215":{"start":{"line":858,"column":16},"end":{"line":858,"column":28}},"216":{"start":{"line":861,"column":12},"end":{"line":861,"column":36}},"217":{"start":{"line":870,"column":0},"end":{"line":901,"column":2}},"218":{"start":{"line":871,"column":4},"end":{"line":871,"column":23}},"219":{"start":{"line":873,"column":4},"end":{"line":875,"column":5}},"220":{"start":{"line":874,"column":8},"end":{"line":874,"column":70}},"221":{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},"222":{"start":{"line":878,"column":8},"end":{"line":878,"column":87}},"223":{"start":{"line":881,"column":4},"end":{"line":887,"column":5}},"224":{"start":{"line":882,"column":8},"end":{"line":882,"column":120}},"225":{"start":{"line":884,"column":8},"end":{"line":886,"column":9}},"226":{"start":{"line":885,"column":12},"end":{"line":885,"column":22}},"227":{"start":{"line":890,"column":4},"end":{"line":900,"column":11}},"228":{"start":{"line":891,"column":8},"end":{"line":891,"column":22}},"229":{"start":{"line":893,"column":8},"end":{"line":897,"column":9}},"230":{"start":{"line":894,"column":12},"end":{"line":894,"column":48}},"231":{"start":{"line":896,"column":12},"end":{"line":896,"column":54}},"232":{"start":{"line":899,"column":8},"end":{"line":899,"column":57}},"233":{"start":{"line":909,"column":0},"end":{"line":974,"column":2}},"234":{"start":{"line":910,"column":4},"end":{"line":910,"column":23}},"235":{"start":{"line":913,"column":4},"end":{"line":915,"column":5}},"236":{"start":{"line":914,"column":8},"end":{"line":914,"column":43}},"237":{"start":{"line":917,"column":4},"end":{"line":938,"column":5}},"238":{"start":{"line":921,"column":8},"end":{"line":923,"column":9}},"239":{"start":{"line":922,"column":12},"end":{"line":922,"column":25}},"240":{"start":{"line":926,"column":8},"end":{"line":937,"column":11}},"241":{"start":{"line":928,"column":12},"end":{"line":930,"column":13}},"242":{"start":{"line":929,"column":16},"end":{"line":929,"column":28}},"243":{"start":{"line":933,"column":12},"end":{"line":935,"column":13}},"244":{"start":{"line":934,"column":16},"end":{"line":934,"column":28}},"245":{"start":{"line":936,"column":12},"end":{"line":936,"column":25}},"246":{"start":{"line":941,"column":4},"end":{"line":957,"column":5}},"247":{"start":{"line":944,"column":8},"end":{"line":944,"column":46}},"248":{"start":{"line":945,"column":8},"end":{"line":945,"column":41}},"249":{"start":{"line":949,"column":8},"end":{"line":952,"column":9}},"250":{"start":{"line":950,"column":12},"end":{"line":950,"column":57}},"251":{"start":{"line":951,"column":12},"end":{"line":951,"column":47}},"252":{"start":{"line":955,"column":8},"end":{"line":956,"column":50}},"253":{"start":{"line":960,"column":4},"end":{"line":973,"column":71}},"254":{"start":{"line":987,"column":0},"end":{"line":1008,"column":2}},"255":{"start":{"line":988,"column":4},"end":{"line":988,"column":23}},"256":{"start":{"line":990,"column":4},"end":{"line":990,"column":82}},"257":{"start":{"line":991,"column":4},"end":{"line":991,"column":67}},"258":{"start":{"line":999,"column":4},"end":{"line":999,"column":60}},"259":{"start":{"line":1001,"column":4},"end":{"line":1005,"column":7}},"260":{"start":{"line":1002,"column":8},"end":{"line":1004,"column":9}},"261":{"start":{"line":1003,"column":12},"end":{"line":1003,"column":45}},"262":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":19}},"263":{"start":{"line":1026,"column":0},"end":{"line":1122,"column":2}},"264":{"start":{"line":1027,"column":4},"end":{"line":1028,"column":86}},"265":{"start":{"line":1031,"column":4},"end":{"line":1033,"column":5}},"266":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":21}},"267":{"start":{"line":1036,"column":4},"end":{"line":1044,"column":5}},"268":{"start":{"line":1042,"column":8},"end":{"line":1042,"column":49}},"269":{"start":{"line":1043,"column":8},"end":{"line":1043,"column":21}},"270":{"start":{"line":1046,"column":4},"end":{"line":1055,"column":5}},"271":{"start":{"line":1053,"column":8},"end":{"line":1053,"column":51}},"272":{"start":{"line":1054,"column":8},"end":{"line":1054,"column":21}},"273":{"start":{"line":1057,"column":4},"end":{"line":1119,"column":7}},"274":{"start":{"line":1058,"column":8},"end":{"line":1066,"column":9}},"275":{"start":{"line":1059,"column":12},"end":{"line":1063,"column":13}},"276":{"start":{"line":1060,"column":16},"end":{"line":1060,"column":68}},"277":{"start":{"line":1062,"column":16},"end":{"line":1062,"column":32}},"278":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":58}},"279":{"start":{"line":1068,"column":8},"end":{"line":1077,"column":9}},"280":{"start":{"line":1075,"column":12},"end":{"line":1075,"column":66}},"281":{"start":{"line":1076,"column":12},"end":{"line":1076,"column":25}},"282":{"start":{"line":1079,"column":8},"end":{"line":1088,"column":9}},"283":{"start":{"line":1086,"column":12},"end":{"line":1086,"column":54}},"284":{"start":{"line":1087,"column":12},"end":{"line":1087,"column":25}},"285":{"start":{"line":1090,"column":8},"end":{"line":1118,"column":11}},"286":{"start":{"line":1091,"column":12},"end":{"line":1109,"column":13}},"287":{"start":{"line":1092,"column":16},"end":{"line":1100,"column":17}},"288":{"start":{"line":1099,"column":20},"end":{"line":1099,"column":69}},"289":{"start":{"line":1108,"column":16},"end":{"line":1108,"column":68}},"290":{"start":{"line":1117,"column":12},"end":{"line":1117,"column":58}},"291":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":16}},"292":{"start":{"line":1134,"column":0},"end":{"line":1252,"column":2}},"293":{"start":{"line":1135,"column":4},"end":{"line":1135,"column":23}},"294":{"start":{"line":1137,"column":4},"end":{"line":1249,"column":7}},"295":{"start":{"line":1140,"column":8},"end":{"line":1142,"column":9}},"296":{"start":{"line":1141,"column":12},"end":{"line":1141,"column":64}},"297":{"start":{"line":1144,"column":8},"end":{"line":1145,"column":93}},"298":{"start":{"line":1147,"column":8},"end":{"line":1149,"column":9}},"299":{"start":{"line":1148,"column":12},"end":{"line":1148,"column":54}},"300":{"start":{"line":1151,"column":8},"end":{"line":1154,"column":9}},"301":{"start":{"line":1152,"column":12},"end":{"line":1152,"column":46}},"302":{"start":{"line":1153,"column":12},"end":{"line":1153,"column":37}},"303":{"start":{"line":1156,"column":8},"end":{"line":1157,"column":39}},"304":{"start":{"line":1159,"column":8},"end":{"line":1161,"column":11}},"305":{"start":{"line":1160,"column":12},"end":{"line":1160,"column":71}},"306":{"start":{"line":1163,"column":8},"end":{"line":1163,"column":28}},"307":{"start":{"line":1166,"column":8},"end":{"line":1166,"column":50}},"308":{"start":{"line":1170,"column":8},"end":{"line":1175,"column":11}},"309":{"start":{"line":1171,"column":12},"end":{"line":1174,"column":13}},"310":{"start":{"line":1172,"column":16},"end":{"line":1173,"column":69}},"311":{"start":{"line":1177,"column":8},"end":{"line":1205,"column":11}},"312":{"start":{"line":1178,"column":12},"end":{"line":1180,"column":13}},"313":{"start":{"line":1179,"column":16},"end":{"line":1179,"column":23}},"314":{"start":{"line":1182,"column":12},"end":{"line":1186,"column":13}},"315":{"start":{"line":1184,"column":16},"end":{"line":1185,"column":69}},"316":{"start":{"line":1188,"column":12},"end":{"line":1204,"column":15}},"317":{"start":{"line":1192,"column":16},"end":{"line":1194,"column":17}},"318":{"start":{"line":1193,"column":20},"end":{"line":1193,"column":72}},"319":{"start":{"line":1202,"column":16},"end":{"line":1202,"column":73}},"320":{"start":{"line":1203,"column":16},"end":{"line":1203,"column":38}},"321":{"start":{"line":1207,"column":8},"end":{"line":1240,"column":11}},"322":{"start":{"line":1211,"column":12},"end":{"line":1213,"column":13}},"323":{"start":{"line":1212,"column":16},"end":{"line":1212,"column":23}},"324":{"start":{"line":1215,"column":12},"end":{"line":1219,"column":13}},"325":{"start":{"line":1217,"column":16},"end":{"line":1218,"column":69}},"326":{"start":{"line":1221,"column":12},"end":{"line":1239,"column":15}},"327":{"start":{"line":1228,"column":16},"end":{"line":1230,"column":17}},"328":{"start":{"line":1229,"column":20},"end":{"line":1229,"column":72}},"329":{"start":{"line":1238,"column":16},"end":{"line":1238,"column":71}},"330":{"start":{"line":1248,"column":8},"end":{"line":1248,"column":62}},"331":{"start":{"line":1251,"column":4},"end":{"line":1251,"column":19}},"332":{"start":{"line":1263,"column":0},"end":{"line":1272,"column":2}},"333":{"start":{"line":1264,"column":4},"end":{"line":1264,"column":48}},"334":{"start":{"line":1266,"column":4},"end":{"line":1267,"column":102}},"335":{"start":{"line":1269,"column":4},"end":{"line":1269,"column":66}},"336":{"start":{"line":1271,"column":4},"end":{"line":1271,"column":42}},"337":{"start":{"line":1289,"column":0},"end":{"line":1690,"column":2}},"338":{"start":{"line":1290,"column":4},"end":{"line":1298,"column":55}},"339":{"start":{"line":1300,"column":4},"end":{"line":1300,"column":48}},"340":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":70}},"341":{"start":{"line":1302,"column":4},"end":{"line":1302,"column":65}},"342":{"start":{"line":1304,"column":4},"end":{"line":1686,"column":7}},"343":{"start":{"line":1314,"column":8},"end":{"line":1316,"column":9}},"344":{"start":{"line":1315,"column":12},"end":{"line":1315,"column":64}},"345":{"start":{"line":1319,"column":8},"end":{"line":1333,"column":9}},"346":{"start":{"line":1320,"column":12},"end":{"line":1332,"column":13}},"347":{"start":{"line":1321,"column":16},"end":{"line":1321,"column":79}},"348":{"start":{"line":1331,"column":16},"end":{"line":1331,"column":94}},"349":{"start":{"line":1341,"column":8},"end":{"line":1341,"column":58}},"350":{"start":{"line":1344,"column":8},"end":{"line":1552,"column":9}},"351":{"start":{"line":1346,"column":12},"end":{"line":1359,"column":15}},"352":{"start":{"line":1349,"column":16},"end":{"line":1351,"column":17}},"353":{"start":{"line":1350,"column":20},"end":{"line":1350,"column":72}},"354":{"start":{"line":1354,"column":16},"end":{"line":1355,"column":68}},"355":{"start":{"line":1357,"column":16},"end":{"line":1357,"column":35}},"356":{"start":{"line":1358,"column":16},"end":{"line":1358,"column":68}},"357":{"start":{"line":1362,"column":15},"end":{"line":1552,"column":9}},"358":{"start":{"line":1364,"column":12},"end":{"line":1436,"column":15}},"359":{"start":{"line":1365,"column":16},"end":{"line":1373,"column":17}},"360":{"start":{"line":1366,"column":20},"end":{"line":1370,"column":21}},"361":{"start":{"line":1367,"column":24},"end":{"line":1367,"column":79}},"362":{"start":{"line":1369,"column":24},"end":{"line":1369,"column":40}},"363":{"start":{"line":1372,"column":20},"end":{"line":1372,"column":69}},"364":{"start":{"line":1376,"column":16},"end":{"line":1385,"column":17}},"365":{"start":{"line":1383,"column":20},"end":{"line":1383,"column":77}},"366":{"start":{"line":1384,"column":20},"end":{"line":1384,"column":33}},"367":{"start":{"line":1387,"column":16},"end":{"line":1435,"column":17}},"368":{"start":{"line":1388,"column":20},"end":{"line":1404,"column":23}},"369":{"start":{"line":1392,"column":24},"end":{"line":1393,"column":76}},"370":{"start":{"line":1395,"column":24},"end":{"line":1395,"column":43}},"371":{"start":{"line":1403,"column":24},"end":{"line":1403,"column":79}},"372":{"start":{"line":1407,"column":20},"end":{"line":1434,"column":23}},"373":{"start":{"line":1410,"column":24},"end":{"line":1412,"column":25}},"374":{"start":{"line":1411,"column":28},"end":{"line":1411,"column":80}},"375":{"start":{"line":1415,"column":24},"end":{"line":1415,"column":68}},"376":{"start":{"line":1418,"column":24},"end":{"line":1431,"column":25}},"377":{"start":{"line":1419,"column":28},"end":{"line":1419,"column":61}},"378":{"start":{"line":1420,"column":28},"end":{"line":1420,"column":68}},"379":{"start":{"line":1422,"column":28},"end":{"line":1430,"column":31}},"380":{"start":{"line":1426,"column":32},"end":{"line":1427,"column":84}},"381":{"start":{"line":1429,"column":32},"end":{"line":1429,"column":51}},"382":{"start":{"line":1433,"column":24},"end":{"line":1433,"column":56}},"383":{"start":{"line":1439,"column":15},"end":{"line":1552,"column":9}},"384":{"start":{"line":1441,"column":12},"end":{"line":1455,"column":13}},"385":{"start":{"line":1443,"column":16},"end":{"line":1445,"column":19}},"386":{"start":{"line":1444,"column":20},"end":{"line":1444,"column":82}},"387":{"start":{"line":1454,"column":16},"end":{"line":1454,"column":65}},"388":{"start":{"line":1457,"column":12},"end":{"line":1457,"column":31}},"389":{"start":{"line":1459,"column":12},"end":{"line":1460,"column":64}},"390":{"start":{"line":1462,"column":12},"end":{"line":1462,"column":44}},"391":{"start":{"line":1465,"column":15},"end":{"line":1552,"column":9}},"392":{"start":{"line":1467,"column":12},"end":{"line":1498,"column":15}},"393":{"start":{"line":1473,"column":16},"end":{"line":1473,"column":93}},"394":{"start":{"line":1482,"column":16},"end":{"line":1482,"column":86}},"395":{"start":{"line":1484,"column":16},"end":{"line":1486,"column":17}},"396":{"start":{"line":1485,"column":20},"end":{"line":1485,"column":48}},"397":{"start":{"line":1488,"column":16},"end":{"line":1490,"column":17}},"398":{"start":{"line":1489,"column":20},"end":{"line":1489,"column":58}},"399":{"start":{"line":1492,"column":16},"end":{"line":1492,"column":63}},"400":{"start":{"line":1493,"column":16},"end":{"line":1493,"column":35}},"401":{"start":{"line":1496,"column":16},"end":{"line":1497,"column":68}},"402":{"start":{"line":1501,"column":15},"end":{"line":1552,"column":9}},"403":{"start":{"line":1503,"column":12},"end":{"line":1527,"column":15}},"404":{"start":{"line":1519,"column":16},"end":{"line":1519,"column":81}},"405":{"start":{"line":1520,"column":16},"end":{"line":1520,"column":35}},"406":{"start":{"line":1523,"column":16},"end":{"line":1524,"column":68}},"407":{"start":{"line":1526,"column":16},"end":{"line":1526,"column":48}},"408":{"start":{"line":1532,"column":12},"end":{"line":1550,"column":15}},"409":{"start":{"line":1542,"column":16},"end":{"line":1542,"column":64}},"410":{"start":{"line":1543,"column":16},"end":{"line":1543,"column":35}},"411":{"start":{"line":1546,"column":16},"end":{"line":1547,"column":68}},"412":{"start":{"line":1549,"column":16},"end":{"line":1549,"column":48}},"413":{"start":{"line":1555,"column":8},"end":{"line":1587,"column":9}},"414":{"start":{"line":1556,"column":12},"end":{"line":1586,"column":15}},"415":{"start":{"line":1561,"column":16},"end":{"line":1562,"column":68}},"416":{"start":{"line":1564,"column":16},"end":{"line":1566,"column":17}},"417":{"start":{"line":1565,"column":20},"end":{"line":1565,"column":72}},"418":{"start":{"line":1568,"column":16},"end":{"line":1570,"column":17}},"419":{"start":{"line":1569,"column":20},"end":{"line":1569,"column":103}},"420":{"start":{"line":1579,"column":16},"end":{"line":1579,"column":81}},"421":{"start":{"line":1583,"column":16},"end":{"line":1585,"column":17}},"422":{"start":{"line":1584,"column":20},"end":{"line":1584,"column":92}},"423":{"start":{"line":1590,"column":8},"end":{"line":1645,"column":9}},"424":{"start":{"line":1591,"column":12},"end":{"line":1593,"column":13}},"425":{"start":{"line":1592,"column":16},"end":{"line":1592,"column":23}},"426":{"start":{"line":1595,"column":12},"end":{"line":1595,"column":77}},"427":{"start":{"line":1596,"column":12},"end":{"line":1596,"column":32}},"428":{"start":{"line":1597,"column":12},"end":{"line":1597,"column":42}},"429":{"start":{"line":1599,"column":12},"end":{"line":1644,"column":15}},"430":{"start":{"line":1607,"column":16},"end":{"line":1613,"column":17}},"431":{"start":{"line":1609,"column":20},"end":{"line":1610,"column":72}},"432":{"start":{"line":1612,"column":20},"end":{"line":1612,"column":72}},"433":{"start":{"line":1616,"column":16},"end":{"line":1618,"column":17}},"434":{"start":{"line":1617,"column":20},"end":{"line":1617,"column":74}},"435":{"start":{"line":1624,"column":16},"end":{"line":1643,"column":17}},"436":{"start":{"line":1625,"column":20},"end":{"line":1640,"column":23}},"437":{"start":{"line":1626,"column":24},"end":{"line":1639,"column":25}},"438":{"start":{"line":1634,"column":28},"end":{"line":1634,"column":88}},"439":{"start":{"line":1635,"column":28},"end":{"line":1635,"column":62}},"440":{"start":{"line":1637,"column":28},"end":{"line":1637,"column":113}},"441":{"start":{"line":1638,"column":28},"end":{"line":1638,"column":80}},"442":{"start":{"line":1642,"column":20},"end":{"line":1642,"column":54}},"443":{"start":{"line":1647,"column":8},"end":{"line":1685,"column":9}},"444":{"start":{"line":1648,"column":12},"end":{"line":1650,"column":13}},"445":{"start":{"line":1649,"column":16},"end":{"line":1649,"column":23}},"446":{"start":{"line":1652,"column":12},"end":{"line":1682,"column":13}},"447":{"start":{"line":1658,"column":16},"end":{"line":1679,"column":17}},"448":{"start":{"line":1662,"column":20},"end":{"line":1662,"column":89}},"449":{"start":{"line":1663,"column":20},"end":{"line":1663,"column":83}},"450":{"start":{"line":1664,"column":20},"end":{"line":1664,"column":85}},"451":{"start":{"line":1665,"column":20},"end":{"line":1665,"column":50}},"452":{"start":{"line":1670,"column":20},"end":{"line":1670,"column":39}},"453":{"start":{"line":1678,"column":20},"end":{"line":1678,"column":72}},"454":{"start":{"line":1681,"column":16},"end":{"line":1681,"column":84}},"455":{"start":{"line":1684,"column":12},"end":{"line":1684,"column":51}},"456":{"start":{"line":1689,"column":4},"end":{"line":1689,"column":19}},"457":{"start":{"line":1702,"column":0},"end":{"line":1786,"column":2}},"458":{"start":{"line":1703,"column":4},"end":{"line":1703,"column":23}},"459":{"start":{"line":1705,"column":4},"end":{"line":1708,"column":5}},"460":{"start":{"line":1707,"column":8},"end":{"line":1707,"column":23}},"461":{"start":{"line":1710,"column":4},"end":{"line":1783,"column":7}},"462":{"start":{"line":1711,"column":8},"end":{"line":1782,"column":9}},"463":{"start":{"line":1713,"column":15},"end":{"line":1782,"column":9}},"464":{"start":{"line":1715,"column":12},"end":{"line":1715,"column":53}},"465":{"start":{"line":1716,"column":12},"end":{"line":1720,"column":22}},"466":{"start":{"line":1722,"column":12},"end":{"line":1759,"column":13}},"467":{"start":{"line":1723,"column":16},"end":{"line":1723,"column":49}},"468":{"start":{"line":1724,"column":16},"end":{"line":1724,"column":49}},"469":{"start":{"line":1726,"column":16},"end":{"line":1726,"column":76}},"470":{"start":{"line":1728,"column":16},"end":{"line":1755,"column":19}},"471":{"start":{"line":1729,"column":20},"end":{"line":1738,"column":21}},"472":{"start":{"line":1735,"column":24},"end":{"line":1735,"column":62}},"473":{"start":{"line":1737,"column":24},"end":{"line":1737,"column":95}},"474":{"start":{"line":1740,"column":20},"end":{"line":1740,"column":54}},"475":{"start":{"line":1745,"column":20},"end":{"line":1754,"column":21}},"476":{"start":{"line":1746,"column":24},"end":{"line":1746,"column":58}},"477":{"start":{"line":1748,"column":24},"end":{"line":1753,"column":27}},"478":{"start":{"line":1752,"column":28},"end":{"line":1752,"column":71}},"479":{"start":{"line":1758,"column":16},"end":{"line":1758,"column":50}},"480":{"start":{"line":1760,"column":15},"end":{"line":1782,"column":9}},"481":{"start":{"line":1762,"column":12},"end":{"line":1781,"column":15}},"482":{"start":{"line":1763,"column":16},"end":{"line":1765,"column":17}},"483":{"start":{"line":1764,"column":20},"end":{"line":1764,"column":30}},"484":{"start":{"line":1767,"column":16},"end":{"line":1780,"column":19}},"485":{"start":{"line":1768,"column":20},"end":{"line":1770,"column":21}},"486":{"start":{"line":1769,"column":24},"end":{"line":1769,"column":34}},"487":{"start":{"line":1772,"column":20},"end":{"line":1779,"column":21}},"488":{"start":{"line":1777,"column":24},"end":{"line":1777,"column":49}},"489":{"start":{"line":1778,"column":24},"end":{"line":1778,"column":39}},"490":{"start":{"line":1785,"column":4},"end":{"line":1785,"column":19}},"491":{"start":{"line":1793,"column":0},"end":{"line":1806,"column":2}},"492":{"start":{"line":1794,"column":4},"end":{"line":1794,"column":23}},"493":{"start":{"line":1795,"column":4},"end":{"line":1795,"column":43}},"494":{"start":{"line":1796,"column":4},"end":{"line":1796,"column":28}},"495":{"start":{"line":1799,"column":4},"end":{"line":1803,"column":5}},"496":{"start":{"line":1800,"column":8},"end":{"line":1802,"column":11}},"497":{"start":{"line":1801,"column":12},"end":{"line":1801,"column":28}},"498":{"start":{"line":1805,"column":4},"end":{"line":1805,"column":19}},"499":{"start":{"line":1814,"column":0},"end":{"line":1836,"column":2}},"500":{"start":{"line":1815,"column":4},"end":{"line":1824,"column":36}},"501":{"start":{"line":1819,"column":16},"end":{"line":1821,"column":17}},"502":{"start":{"line":1820,"column":20},"end":{"line":1820,"column":27}},"503":{"start":{"line":1822,"column":16},"end":{"line":1822,"column":31}},"504":{"start":{"line":1823,"column":16},"end":{"line":1823,"column":41}},"505":{"start":{"line":1826,"column":4},"end":{"line":1826,"column":29}},"506":{"start":{"line":1828,"column":4},"end":{"line":1835,"column":6}},"507":{"start":{"line":1829,"column":8},"end":{"line":1831,"column":9}},"508":{"start":{"line":1830,"column":12},"end":{"line":1830,"column":19}},"509":{"start":{"line":1832,"column":8},"end":{"line":1832,"column":23}},"510":{"start":{"line":1833,"column":8},"end":{"line":1833,"column":33}},"511":{"start":{"line":1834,"column":8},"end":{"line":1834,"column":30}},"512":{"start":{"line":1846,"column":0},"end":{"line":1853,"column":2}},"513":{"start":{"line":1847,"column":4},"end":{"line":1849,"column":5}},"514":{"start":{"line":1848,"column":8},"end":{"line":1848,"column":65}},"515":{"start":{"line":1851,"column":4},"end":{"line":1851,"column":44}},"516":{"start":{"line":1852,"column":4},"end":{"line":1852,"column":47}},"517":{"start":{"line":1860,"column":0},"end":{"line":1871,"column":2}},"518":{"start":{"line":1861,"column":4},"end":{"line":1861,"column":23}},"519":{"start":{"line":1863,"column":4},"end":{"line":1868,"column":5}},"520":{"start":{"line":1864,"column":8},"end":{"line":1864,"column":67}},"521":{"start":{"line":1865,"column":8},"end":{"line":1865,"column":73}},"522":{"start":{"line":1866,"column":11},"end":{"line":1868,"column":5}},"523":{"start":{"line":1867,"column":8},"end":{"line":1867,"column":69}},"524":{"start":{"line":1870,"column":4},"end":{"line":1870,"column":65}},"525":{"start":{"line":1880,"column":0},"end":{"line":1887,"column":2}},"526":{"start":{"line":1881,"column":4},"end":{"line":1883,"column":5}},"527":{"start":{"line":1882,"column":8},"end":{"line":1882,"column":62}},"528":{"start":{"line":1885,"column":4},"end":{"line":1885,"column":41}},"529":{"start":{"line":1886,"column":4},"end":{"line":1886,"column":44}},"530":{"start":{"line":1894,"column":0},"end":{"line":1905,"column":2}},"531":{"start":{"line":1895,"column":4},"end":{"line":1895,"column":23}},"532":{"start":{"line":1897,"column":4},"end":{"line":1902,"column":5}},"533":{"start":{"line":1898,"column":8},"end":{"line":1898,"column":67}},"534":{"start":{"line":1899,"column":8},"end":{"line":1899,"column":70}},"535":{"start":{"line":1900,"column":11},"end":{"line":1902,"column":5}},"536":{"start":{"line":1901,"column":8},"end":{"line":1901,"column":66}},"537":{"start":{"line":1904,"column":4},"end":{"line":1904,"column":62}},"538":{"start":{"line":1907,"column":0},"end":{"line":1907,"column":25}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"4":{"line":335,"type":"cond-expr","locations":[{"start":{"line":335,"column":43},"end":{"line":337,"column":14}},{"start":{"line":337,"column":17},"end":{"line":337,"column":19}}]},"5":{"line":346,"type":"cond-expr","locations":[{"start":{"line":346,"column":42},"end":{"line":346,"column":52}},{"start":{"line":346,"column":55},"end":{"line":346,"column":64}}]},"6":{"line":350,"type":"cond-expr","locations":[{"start":{"line":350,"column":42},"end":{"line":350,"column":52}},{"start":{"line":350,"column":55},"end":{"line":350,"column":64}}]},"7":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":4},"end":{"line":431,"column":4}},{"start":{"line":431,"column":4},"end":{"line":431,"column":4}}]},"8":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":8},"end":{"line":442,"column":8}},{"start":{"line":442,"column":8},"end":{"line":442,"column":8}}]},"9":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":12},"end":{"line":442,"column":17}},{"start":{"line":442,"column":21},"end":{"line":442,"column":47}}]},"10":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":42},"end":{"line":482,"column":48}},{"start":{"line":482,"column":51},"end":{"line":482,"column":58}}]},"11":{"line":488,"type":"cond-expr","locations":[{"start":{"line":488,"column":35},"end":{"line":488,"column":39}},{"start":{"line":488,"column":42},"end":{"line":488,"column":49}}]},"12":{"line":499,"type":"cond-expr","locations":[{"start":{"line":499,"column":49},"end":{"line":499,"column":67}},{"start":{"line":499,"column":70},"end":{"line":499,"column":87}}]},"13":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":4},"end":{"line":507,"column":4}},{"start":{"line":507,"column":4},"end":{"line":507,"column":4}}]},"14":{"line":513,"type":"binary-expr","locations":[{"start":{"line":513,"column":29},"end":{"line":513,"column":58}},{"start":{"line":513,"column":62},"end":{"line":513,"column":83}}]},"15":{"line":514,"type":"binary-expr","locations":[{"start":{"line":514,"column":30},"end":{"line":514,"column":60}},{"start":{"line":514,"column":64},"end":{"line":514,"column":86}}]},"16":{"line":515,"type":"binary-expr","locations":[{"start":{"line":515,"column":25},"end":{"line":515,"column":43}},{"start":{"line":515,"column":47},"end":{"line":515,"column":66}}]},"17":{"line":527,"type":"cond-expr","locations":[{"start":{"line":527,"column":73},"end":{"line":527,"column":93}},{"start":{"line":527,"column":96},"end":{"line":527,"column":98}}]},"18":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":38},"end":{"line":527,"column":52}},{"start":{"line":527,"column":56},"end":{"line":527,"column":70}}]},"19":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":4},"end":{"line":531,"column":4}},{"start":{"line":531,"column":4},"end":{"line":531,"column":4}}]},"20":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":4},"end":{"line":535,"column":4}},{"start":{"line":535,"column":4},"end":{"line":535,"column":4}}]},"21":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"22":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":8},"end":{"line":540,"column":26}},{"start":{"line":540,"column":30},"end":{"line":540,"column":49}},{"start":{"line":540,"column":53},"end":{"line":540,"column":65}}]},"23":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":4},"end":{"line":546,"column":4}},{"start":{"line":546,"column":4},"end":{"line":546,"column":4}}]},"24":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":8},"end":{"line":546,"column":29}},{"start":{"line":546,"column":33},"end":{"line":546,"column":62}}]},"25":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":552,"column":4}},{"start":{"line":552,"column":4},"end":{"line":552,"column":4}}]},"26":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":4},"end":{"line":561,"column":4}},{"start":{"line":561,"column":4},"end":{"line":561,"column":4}}]},"27":{"line":561,"type":"binary-expr","locations":[{"start":{"line":561,"column":8},"end":{"line":561,"column":34}},{"start":{"line":561,"column":38},"end":{"line":561,"column":64}}]},"28":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":570,"column":4}},{"start":{"line":570,"column":4},"end":{"line":570,"column":4}}]},"29":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":12},"end":{"line":572,"column":12}},{"start":{"line":572,"column":12},"end":{"line":572,"column":12}}]},"30":{"line":592,"type":"cond-expr","locations":[{"start":{"line":592,"column":55},"end":{"line":592,"column":60}},{"start":{"line":592,"column":63},"end":{"line":592,"column":67}}]},"31":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":4},"end":{"line":595,"column":4}},{"start":{"line":595,"column":4},"end":{"line":595,"column":4}}]},"32":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":8},"end":{"line":595,"column":24}},{"start":{"line":595,"column":28},"end":{"line":595,"column":61}}]},"33":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":8},"end":{"line":604,"column":8}},{"start":{"line":604,"column":8},"end":{"line":604,"column":8}}]},"34":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":12},"end":{"line":604,"column":38}},{"start":{"line":604,"column":42},"end":{"line":604,"column":67}}]},"35":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":20},"end":{"line":606,"column":68}},{"start":{"line":607,"column":20},"end":{"line":607,"column":43}}]},"36":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":16},"end":{"line":612,"column":16}},{"start":{"line":612,"column":16},"end":{"line":612,"column":16}}]},"37":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":16},"end":{"line":622,"column":16}},{"start":{"line":622,"column":16},"end":{"line":622,"column":16}}]},"38":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":16},"end":{"line":635,"column":16}},{"start":{"line":635,"column":16},"end":{"line":635,"column":16}}]},"39":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":20},"end":{"line":635,"column":35}},{"start":{"line":635,"column":39},"end":{"line":635,"column":77}}]},"40":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":15},"end":{"line":641,"column":15}},{"start":{"line":641,"column":15},"end":{"line":641,"column":15}}]},"41":{"line":641,"type":"binary-expr","locations":[{"start":{"line":641,"column":19},"end":{"line":641,"column":45}},{"start":{"line":641,"column":49},"end":{"line":641,"column":74}},{"start":{"line":642,"column":12},"end":{"line":642,"column":37}}]},"42":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":12},"end":{"line":650,"column":12}},{"start":{"line":650,"column":12},"end":{"line":650,"column":12}}]},"43":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":8},"end":{"line":672,"column":8}},{"start":{"line":672,"column":8},"end":{"line":672,"column":8}}]},"44":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":8},"end":{"line":693,"column":8}},{"start":{"line":693,"column":8},"end":{"line":693,"column":8}}]},"45":{"line":716,"type":"if","locations":[{"start":{"line":716,"column":8},"end":{"line":716,"column":8}},{"start":{"line":716,"column":8},"end":{"line":716,"column":8}}]},"46":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":4},"end":{"line":734,"column":4}},{"start":{"line":734,"column":4},"end":{"line":734,"column":4}}]},"47":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":4},"end":{"line":742,"column":4}},{"start":{"line":742,"column":4},"end":{"line":742,"column":4}}]},"48":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":10},"end":{"line":742,"column":13}},{"start":{"line":742,"column":17},"end":{"line":742,"column":34}}]},"49":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":4},"end":{"line":747,"column":4}},{"start":{"line":747,"column":4},"end":{"line":747,"column":4}}]},"50":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":4},"end":{"line":751,"column":4}},{"start":{"line":751,"column":4},"end":{"line":751,"column":4}}]},"51":{"line":751,"type":"binary-expr","locations":[{"start":{"line":751,"column":8},"end":{"line":751,"column":30}},{"start":{"line":751,"column":34},"end":{"line":751,"column":68}}]},"52":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":8},"end":{"line":758,"column":8}},{"start":{"line":758,"column":8},"end":{"line":758,"column":8}}]},"53":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":19},"end":{"line":771,"column":36}},{"start":{"line":771,"column":40},"end":{"line":771,"column":46}}]},"54":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":4},"end":{"line":820,"column":4}},{"start":{"line":820,"column":4},"end":{"line":820,"column":4}}]},"55":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":32},"end":{"line":834,"column":45}},{"start":{"line":834,"column":49},"end":{"line":834,"column":51}}]},"56":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":12},"end":{"line":843,"column":12}},{"start":{"line":843,"column":12},"end":{"line":843,"column":12}}]},"57":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":12},"end":{"line":848,"column":12}},{"start":{"line":848,"column":12},"end":{"line":848,"column":12}}]},"58":{"line":857,"type":"if","locations":[{"start":{"line":857,"column":12},"end":{"line":857,"column":12}},{"start":{"line":857,"column":12},"end":{"line":857,"column":12}}]},"59":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":4},"end":{"line":873,"column":4}},{"start":{"line":873,"column":4},"end":{"line":873,"column":4}}]},"60":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":4},"end":{"line":877,"column":4}},{"start":{"line":877,"column":4},"end":{"line":877,"column":4}}]},"61":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":4},"end":{"line":881,"column":4}},{"start":{"line":881,"column":4},"end":{"line":881,"column":4}}]},"62":{"line":881,"type":"binary-expr","locations":[{"start":{"line":881,"column":8},"end":{"line":881,"column":32}},{"start":{"line":881,"column":36},"end":{"line":881,"column":110}}]},"63":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":8}},{"start":{"line":884,"column":8},"end":{"line":884,"column":8}}]},"64":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":12},"end":{"line":884,"column":38}},{"start":{"line":884,"column":42},"end":{"line":884,"column":74}}]},"65":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":8},"end":{"line":893,"column":8}},{"start":{"line":893,"column":8},"end":{"line":893,"column":8}}]},"66":{"line":899,"type":"cond-expr","locations":[{"start":{"line":899,"column":27},"end":{"line":899,"column":49}},{"start":{"line":899,"column":52},"end":{"line":899,"column":56}}]},"67":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":4},"end":{"line":913,"column":4}},{"start":{"line":913,"column":4},"end":{"line":913,"column":4}}]},"68":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":8},"end":{"line":921,"column":8}},{"start":{"line":921,"column":8},"end":{"line":921,"column":8}}]},"69":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":12},"end":{"line":921,"column":36}},{"start":{"line":921,"column":40},"end":{"line":921,"column":71}}]},"70":{"line":928,"type":"if","locations":[{"start":{"line":928,"column":12},"end":{"line":928,"column":12}},{"start":{"line":928,"column":12},"end":{"line":928,"column":12}}]},"71":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":12},"end":{"line":933,"column":12}},{"start":{"line":933,"column":12},"end":{"line":933,"column":12}}]},"72":{"line":933,"type":"binary-expr","locations":[{"start":{"line":933,"column":16},"end":{"line":933,"column":39}},{"start":{"line":933,"column":43},"end":{"line":933,"column":80}}]},"73":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":8},"end":{"line":949,"column":8}},{"start":{"line":949,"column":8},"end":{"line":949,"column":8}}]},"74":{"line":960,"type":"binary-expr","locations":[{"start":{"line":960,"column":11},"end":{"line":960,"column":34}},{"start":{"line":962,"column":11},"end":{"line":962,"column":32}},{"start":{"line":965,"column":11},"end":{"line":965,"column":34}},{"start":{"line":966,"column":15},"end":{"line":967,"column":46}},{"start":{"line":970,"column":11},"end":{"line":970,"column":34}},{"start":{"line":973,"column":11},"end":{"line":973,"column":33}},{"start":{"line":973,"column":37},"end":{"line":973,"column":70}}]},"75":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":8},"end":{"line":1002,"column":8}},{"start":{"line":1002,"column":8},"end":{"line":1002,"column":8}}]},"76":{"line":1002,"type":"binary-expr","locations":[{"start":{"line":1002,"column":12},"end":{"line":1002,"column":34}},{"start":{"line":1002,"column":38},"end":{"line":1002,"column":77}}]},"77":{"line":1028,"type":"cond-expr","locations":[{"start":{"line":1028,"column":46},"end":{"line":1028,"column":49}},{"start":{"line":1028,"column":52},"end":{"line":1028,"column":85}}]},"78":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":4},"end":{"line":1031,"column":4}},{"start":{"line":1031,"column":4},"end":{"line":1031,"column":4}}]},"79":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":4},"end":{"line":1036,"column":4}},{"start":{"line":1036,"column":4},"end":{"line":1036,"column":4}}]},"80":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}},{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}}]},"81":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":8},"end":{"line":1058,"column":8}},{"start":{"line":1058,"column":8},"end":{"line":1058,"column":8}}]},"82":{"line":1068,"type":"if","locations":[{"start":{"line":1068,"column":8},"end":{"line":1068,"column":8}},{"start":{"line":1068,"column":8},"end":{"line":1068,"column":8}}]},"83":{"line":1079,"type":"if","locations":[{"start":{"line":1079,"column":8},"end":{"line":1079,"column":8}},{"start":{"line":1079,"column":8},"end":{"line":1079,"column":8}}]},"84":{"line":1091,"type":"if","locations":[{"start":{"line":1091,"column":12},"end":{"line":1091,"column":12}},{"start":{"line":1091,"column":12},"end":{"line":1091,"column":12}}]},"85":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":16},"end":{"line":1092,"column":16}},{"start":{"line":1092,"column":16},"end":{"line":1092,"column":16}}]},"86":{"line":1092,"type":"binary-expr","locations":[{"start":{"line":1092,"column":20},"end":{"line":1092,"column":30}},{"start":{"line":1092,"column":34},"end":{"line":1092,"column":60}}]},"87":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}},{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}}]},"88":{"line":1144,"type":"cond-expr","locations":[{"start":{"line":1144,"column":54},"end":{"line":1144,"column":59}},{"start":{"line":1144,"column":62},"end":{"line":1144,"column":66}}]},"89":{"line":1145,"type":"cond-expr","locations":[{"start":{"line":1145,"column":54},"end":{"line":1145,"column":72}},{"start":{"line":1145,"column":75},"end":{"line":1145,"column":92}}]},"90":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}},{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}}]},"91":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":8},"end":{"line":1151,"column":8}},{"start":{"line":1151,"column":8},"end":{"line":1151,"column":8}}]},"92":{"line":1151,"type":"binary-expr","locations":[{"start":{"line":1151,"column":12},"end":{"line":1151,"column":28}},{"start":{"line":1151,"column":32},"end":{"line":1151,"column":65}}]},"93":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":12},"end":{"line":1171,"column":12}},{"start":{"line":1171,"column":12},"end":{"line":1171,"column":12}}]},"94":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":12},"end":{"line":1178,"column":12}},{"start":{"line":1178,"column":12},"end":{"line":1178,"column":12}}]},"95":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":12},"end":{"line":1182,"column":12}},{"start":{"line":1182,"column":12},"end":{"line":1182,"column":12}}]},"96":{"line":1182,"type":"binary-expr","locations":[{"start":{"line":1182,"column":16},"end":{"line":1182,"column":31}},{"start":{"line":1182,"column":35},"end":{"line":1182,"column":53}}]},"97":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":16},"end":{"line":1192,"column":16}},{"start":{"line":1192,"column":16},"end":{"line":1192,"column":16}}]},"98":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":12},"end":{"line":1211,"column":12}},{"start":{"line":1211,"column":12},"end":{"line":1211,"column":12}}]},"99":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":12},"end":{"line":1215,"column":12}},{"start":{"line":1215,"column":12},"end":{"line":1215,"column":12}}]},"100":{"line":1215,"type":"binary-expr","locations":[{"start":{"line":1215,"column":16},"end":{"line":1215,"column":31}},{"start":{"line":1215,"column":35},"end":{"line":1215,"column":53}}]},"101":{"line":1228,"type":"if","locations":[{"start":{"line":1228,"column":16},"end":{"line":1228,"column":16}},{"start":{"line":1228,"column":16},"end":{"line":1228,"column":16}}]},"102":{"line":1264,"type":"binary-expr","locations":[{"start":{"line":1264,"column":24},"end":{"line":1264,"column":41}},{"start":{"line":1264,"column":45},"end":{"line":1264,"column":47}}]},"103":{"line":1266,"type":"binary-expr","locations":[{"start":{"line":1266,"column":27},"end":{"line":1266,"column":109}},{"start":{"line":1266,"column":113},"end":{"line":1266,"column":115}}]},"104":{"line":1267,"type":"binary-expr","locations":[{"start":{"line":1267,"column":19},"end":{"line":1267,"column":57}},{"start":{"line":1267,"column":61},"end":{"line":1267,"column":80}},{"start":{"line":1267,"column":84},"end":{"line":1267,"column":101}}]},"105":{"line":1269,"type":"cond-expr","locations":[{"start":{"line":1269,"column":48},"end":{"line":1269,"column":56}},{"start":{"line":1269,"column":59},"end":{"line":1269,"column":65}}]},"106":{"line":1300,"type":"binary-expr","locations":[{"start":{"line":1300,"column":20},"end":{"line":1300,"column":33}},{"start":{"line":1300,"column":37},"end":{"line":1300,"column":47}}]},"107":{"line":1302,"type":"cond-expr","locations":[{"start":{"line":1302,"column":46},"end":{"line":1302,"column":60}},{"start":{"line":1302,"column":63},"end":{"line":1302,"column":64}}]},"108":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":8},"end":{"line":1314,"column":8}},{"start":{"line":1314,"column":8},"end":{"line":1314,"column":8}}]},"109":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":8},"end":{"line":1319,"column":8}},{"start":{"line":1319,"column":8},"end":{"line":1319,"column":8}}]},"110":{"line":1319,"type":"binary-expr","locations":[{"start":{"line":1319,"column":12},"end":{"line":1319,"column":33}},{"start":{"line":1319,"column":37},"end":{"line":1319,"column":82}}]},"111":{"line":1344,"type":"if","locations":[{"start":{"line":1344,"column":8},"end":{"line":1344,"column":8}},{"start":{"line":1344,"column":8},"end":{"line":1344,"column":8}}]},"112":{"line":1349,"type":"if","locations":[{"start":{"line":1349,"column":16},"end":{"line":1349,"column":16}},{"start":{"line":1349,"column":16},"end":{"line":1349,"column":16}}]},"113":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":15},"end":{"line":1362,"column":15}},{"start":{"line":1362,"column":15},"end":{"line":1362,"column":15}}]},"114":{"line":1362,"type":"binary-expr","locations":[{"start":{"line":1362,"column":19},"end":{"line":1362,"column":45}},{"start":{"line":1362,"column":49},"end":{"line":1362,"column":74}}]},"115":{"line":1365,"type":"if","locations":[{"start":{"line":1365,"column":16},"end":{"line":1365,"column":16}},{"start":{"line":1365,"column":16},"end":{"line":1365,"column":16}}]},"116":{"line":1376,"type":"if","locations":[{"start":{"line":1376,"column":16},"end":{"line":1376,"column":16}},{"start":{"line":1376,"column":16},"end":{"line":1376,"column":16}}]},"117":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":16},"end":{"line":1387,"column":16}},{"start":{"line":1387,"column":16},"end":{"line":1387,"column":16}}]},"118":{"line":1410,"type":"if","locations":[{"start":{"line":1410,"column":24},"end":{"line":1410,"column":24}},{"start":{"line":1410,"column":24},"end":{"line":1410,"column":24}}]},"119":{"line":1418,"type":"if","locations":[{"start":{"line":1418,"column":24},"end":{"line":1418,"column":24}},{"start":{"line":1418,"column":24},"end":{"line":1418,"column":24}}]},"120":{"line":1418,"type":"binary-expr","locations":[{"start":{"line":1418,"column":28},"end":{"line":1418,"column":55}},{"start":{"line":1418,"column":59},"end":{"line":1418,"column":97}}]},"121":{"line":1439,"type":"if","locations":[{"start":{"line":1439,"column":15},"end":{"line":1439,"column":15}},{"start":{"line":1439,"column":15},"end":{"line":1439,"column":15}}]},"122":{"line":1441,"type":"if","locations":[{"start":{"line":1441,"column":12},"end":{"line":1441,"column":12}},{"start":{"line":1441,"column":12},"end":{"line":1441,"column":12}}]},"123":{"line":1441,"type":"binary-expr","locations":[{"start":{"line":1441,"column":16},"end":{"line":1441,"column":38}},{"start":{"line":1441,"column":42},"end":{"line":1441,"column":68}}]},"124":{"line":1465,"type":"if","locations":[{"start":{"line":1465,"column":15},"end":{"line":1465,"column":15}},{"start":{"line":1465,"column":15},"end":{"line":1465,"column":15}}]},"125":{"line":1465,"type":"binary-expr","locations":[{"start":{"line":1465,"column":19},"end":{"line":1465,"column":45}},{"start":{"line":1465,"column":49},"end":{"line":1465,"column":74}},{"start":{"line":1465,"column":78},"end":{"line":1465,"column":103}}]},"126":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":16},"end":{"line":1484,"column":16}},{"start":{"line":1484,"column":16},"end":{"line":1484,"column":16}}]},"127":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":16},"end":{"line":1488,"column":16}},{"start":{"line":1488,"column":16},"end":{"line":1488,"column":16}}]},"128":{"line":1488,"type":"binary-expr","locations":[{"start":{"line":1488,"column":20},"end":{"line":1488,"column":52}},{"start":{"line":1488,"column":56},"end":{"line":1488,"column":79}}]},"129":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":15},"end":{"line":1501,"column":15}},{"start":{"line":1501,"column":15},"end":{"line":1501,"column":15}}]},"130":{"line":1501,"type":"binary-expr","locations":[{"start":{"line":1501,"column":19},"end":{"line":1501,"column":46}},{"start":{"line":1501,"column":50},"end":{"line":1501,"column":77}}]},"131":{"line":1564,"type":"if","locations":[{"start":{"line":1564,"column":16},"end":{"line":1564,"column":16}},{"start":{"line":1564,"column":16},"end":{"line":1564,"column":16}}]},"132":{"line":1568,"type":"if","locations":[{"start":{"line":1568,"column":16},"end":{"line":1568,"column":16}},{"start":{"line":1568,"column":16},"end":{"line":1568,"column":16}}]},"133":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":16},"end":{"line":1583,"column":16}},{"start":{"line":1583,"column":16},"end":{"line":1583,"column":16}}]},"134":{"line":1583,"type":"binary-expr","locations":[{"start":{"line":1583,"column":20},"end":{"line":1583,"column":58}},{"start":{"line":1583,"column":62},"end":{"line":1583,"column":87}}]},"135":{"line":1584,"type":"binary-expr","locations":[{"start":{"line":1584,"column":45},"end":{"line":1584,"column":63}},{"start":{"line":1584,"column":67},"end":{"line":1584,"column":79}}]},"136":{"line":1591,"type":"if","locations":[{"start":{"line":1591,"column":12},"end":{"line":1591,"column":12}},{"start":{"line":1591,"column":12},"end":{"line":1591,"column":12}}]},"137":{"line":1591,"type":"binary-expr","locations":[{"start":{"line":1591,"column":16},"end":{"line":1591,"column":28}},{"start":{"line":1591,"column":32},"end":{"line":1591,"column":49}}]},"138":{"line":1607,"type":"if","locations":[{"start":{"line":1607,"column":16},"end":{"line":1607,"column":16}},{"start":{"line":1607,"column":16},"end":{"line":1607,"column":16}}]},"139":{"line":1616,"type":"if","locations":[{"start":{"line":1616,"column":16},"end":{"line":1616,"column":16}},{"start":{"line":1616,"column":16},"end":{"line":1616,"column":16}}]},"140":{"line":1616,"type":"binary-expr","locations":[{"start":{"line":1616,"column":20},"end":{"line":1616,"column":33}},{"start":{"line":1616,"column":37},"end":{"line":1616,"column":83}}]},"141":{"line":1624,"type":"if","locations":[{"start":{"line":1624,"column":16},"end":{"line":1624,"column":16}},{"start":{"line":1624,"column":16},"end":{"line":1624,"column":16}}]},"142":{"line":1626,"type":"if","locations":[{"start":{"line":1626,"column":24},"end":{"line":1626,"column":24}},{"start":{"line":1626,"column":24},"end":{"line":1626,"column":24}}]},"143":{"line":1637,"type":"cond-expr","locations":[{"start":{"line":1637,"column":77},"end":{"line":1637,"column":95}},{"start":{"line":1637,"column":98},"end":{"line":1637,"column":112}}]},"144":{"line":1648,"type":"if","locations":[{"start":{"line":1648,"column":12},"end":{"line":1648,"column":12}},{"start":{"line":1648,"column":12},"end":{"line":1648,"column":12}}]},"145":{"line":1648,"type":"binary-expr","locations":[{"start":{"line":1648,"column":16},"end":{"line":1648,"column":29}},{"start":{"line":1648,"column":33},"end":{"line":1648,"column":45}}]},"146":{"line":1652,"type":"if","locations":[{"start":{"line":1652,"column":12},"end":{"line":1652,"column":12}},{"start":{"line":1652,"column":12},"end":{"line":1652,"column":12}}]},"147":{"line":1658,"type":"if","locations":[{"start":{"line":1658,"column":16},"end":{"line":1658,"column":16}},{"start":{"line":1658,"column":16},"end":{"line":1658,"column":16}}]},"148":{"line":1705,"type":"if","locations":[{"start":{"line":1705,"column":4},"end":{"line":1705,"column":4}},{"start":{"line":1705,"column":4},"end":{"line":1705,"column":4}}]},"149":{"line":1705,"type":"binary-expr","locations":[{"start":{"line":1705,"column":8},"end":{"line":1705,"column":62}},{"start":{"line":1706,"column":8},"end":{"line":1706,"column":33}}]},"150":{"line":1711,"type":"if","locations":[{"start":{"line":1711,"column":8},"end":{"line":1711,"column":8}},{"start":{"line":1711,"column":8},"end":{"line":1711,"column":8}}]},"151":{"line":1713,"type":"if","locations":[{"start":{"line":1713,"column":15},"end":{"line":1713,"column":15}},{"start":{"line":1713,"column":15},"end":{"line":1713,"column":15}}]},"152":{"line":1722,"type":"if","locations":[{"start":{"line":1722,"column":12},"end":{"line":1722,"column":12}},{"start":{"line":1722,"column":12},"end":{"line":1722,"column":12}}]},"153":{"line":1722,"type":"binary-expr","locations":[{"start":{"line":1722,"column":16},"end":{"line":1722,"column":40}},{"start":{"line":1722,"column":44},"end":{"line":1722,"column":86}}]},"154":{"line":1729,"type":"if","locations":[{"start":{"line":1729,"column":20},"end":{"line":1729,"column":20}},{"start":{"line":1729,"column":20},"end":{"line":1729,"column":20}}]},"155":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":20},"end":{"line":1745,"column":20}},{"start":{"line":1745,"column":20},"end":{"line":1745,"column":20}}]},"156":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":15},"end":{"line":1760,"column":15}},{"start":{"line":1760,"column":15},"end":{"line":1760,"column":15}}]},"157":{"line":1760,"type":"binary-expr","locations":[{"start":{"line":1760,"column":19},"end":{"line":1760,"column":48}},{"start":{"line":1760,"column":52},"end":{"line":1760,"column":75}}]},"158":{"line":1763,"type":"if","locations":[{"start":{"line":1763,"column":16},"end":{"line":1763,"column":16}},{"start":{"line":1763,"column":16},"end":{"line":1763,"column":16}}]},"159":{"line":1768,"type":"if","locations":[{"start":{"line":1768,"column":20},"end":{"line":1768,"column":20}},{"start":{"line":1768,"column":20},"end":{"line":1768,"column":20}}]},"160":{"line":1772,"type":"if","locations":[{"start":{"line":1772,"column":20},"end":{"line":1772,"column":20}},{"start":{"line":1772,"column":20},"end":{"line":1772,"column":20}}]},"161":{"line":1799,"type":"if","locations":[{"start":{"line":1799,"column":4},"end":{"line":1799,"column":4}},{"start":{"line":1799,"column":4},"end":{"line":1799,"column":4}}]},"162":{"line":1819,"type":"if","locations":[{"start":{"line":1819,"column":16},"end":{"line":1819,"column":16}},{"start":{"line":1819,"column":16},"end":{"line":1819,"column":16}}]},"163":{"line":1829,"type":"if","locations":[{"start":{"line":1829,"column":8},"end":{"line":1829,"column":8}},{"start":{"line":1829,"column":8},"end":{"line":1829,"column":8}}]},"164":{"line":1847,"type":"if","locations":[{"start":{"line":1847,"column":4},"end":{"line":1847,"column":4}},{"start":{"line":1847,"column":4},"end":{"line":1847,"column":4}}]},"165":{"line":1863,"type":"if","locations":[{"start":{"line":1863,"column":4},"end":{"line":1863,"column":4}},{"start":{"line":1863,"column":4},"end":{"line":1863,"column":4}}]},"166":{"line":1866,"type":"if","locations":[{"start":{"line":1866,"column":11},"end":{"line":1866,"column":11}},{"start":{"line":1866,"column":11},"end":{"line":1866,"column":11}}]},"167":{"line":1881,"type":"if","locations":[{"start":{"line":1881,"column":4},"end":{"line":1881,"column":4}},{"start":{"line":1881,"column":4},"end":{"line":1881,"column":4}}]},"168":{"line":1897,"type":"if","locations":[{"start":{"line":1897,"column":4},"end":{"line":1897,"column":4}},{"start":{"line":1897,"column":4},"end":{"line":1897,"column":4}}]},"169":{"line":1900,"type":"if","locations":[{"start":{"line":1900,"column":11},"end":{"line":1900,"column":11}},{"start":{"line":1900,"column":11},"end":{"line":1900,"column":11}}]}},"code":["/**"," * @file simplecrawler is a straightforward, event driven web crawler"," * @author Christopher Giffard <christopher.giffard@cgiffard.com>"," * @author Fredrik Ekelund <fredrik@fredrik.computer>"," */","","var FetchQueue  = require(\"./queue.js\"),","    CookieJar   = require(\"./cookies.js\"),","    packageJson = require(\"../package.json\");","","var http            = require(\"http\"),","    https           = require(\"https\"),","    EventEmitter    = require(\"events\").EventEmitter,","    uri             = require(\"urijs\"),","    async           = require(\"async\"),","    zlib            = require(\"zlib\"),","    util            = require(\"util\"),","    iconv           = require(\"iconv-lite\"),","    robotsTxtParser = require(\"robots-parser\");","","var QUEUE_ITEM_INITIAL_DEPTH = 1;","","/**"," * Creates a new crawler"," * @class"," * @param  {String} initialURL The initial URL to fetch. The hostname that the crawler will confine requests to by default is inferred from this URL."," * @return {Crawler}           Returns the crawler instance to enable chained API calls"," */","var Crawler = function(initialURL) {","    // Allow the crawler to be initialized without the `new` operator. This is","    // handy for chaining API calls","    if (!(this instanceof Crawler)) {","        return new Crawler(initialURL);","    }","","    if (arguments.length > 1) {","        throw new Error(\"Since 1.0.0, simplecrawler takes a single URL when initialized. Protocol, hostname, port and path are inferred from that argument.\");","    }","","    if (typeof initialURL !== \"string\") {","        throw new Error(\"The crawler needs a URL string to know where to start crawling\");","    }","","    EventEmitter.call(this);","","    var crawler = this,","        parsedURL = uri(initialURL).normalize();","","    /**","     * Controls which URL to request first","     * @type {String}","     */","    this.initialURL = initialURL;","","    /**","     * Determines what hostname the crawler should limit requests to (so long as","     * {@link Crawler#filterByDomain} is true)","     * @type {String}","     */","    this.host = parsedURL.hostname();","","    /**","     * Determines the interval at which new requests are spawned by the crawler,","     * as long as the number of open requests is under the","     * {@link Crawler#maxConcurrency} cap.","     * @type {Number}","     */","    this.interval = 250;","","    /**","     * Maximum request concurrency. If necessary, simplecrawler will increase","     * node's http agent maxSockets value to match this setting.","     * @type {Number}","     */","    this.maxConcurrency = 5;","","    /**","     * Maximum time we'll wait for headers","     * @type {Number}","     */","    this.timeout = 300000; // 5 minutes","","    /**","     * Maximum time we'll wait for async listeners","     * @type {Number}","     */","    this.listenerTTL = 10000; // 10 seconds","","    /**","     * Crawler's user agent string","     * @type {String}","     * @default \"Node/simplecrawler <version> (https://github.com/cgiffard/node-simplecrawler)\"","     */","    this.userAgent =","        \"Node/\" + packageJson.name + \" \" + packageJson.version +","        \" (\" + packageJson.repository.url + \")\";","","    /**","     * Queue for requests. The crawler can use any implementation so long as it","     * uses the same interface. The default queue is simply backed by an array.","     * @type {FetchQueue}","     */","    this.queue = new FetchQueue();","","    /**","     * Controls whether the crawler respects the robots.txt rules of any domain.","     * This is done both with regards to the robots.txt file, and `<meta>` tags","     * that specify a `nofollow` value for robots. The latter only applies if","     * the default {@link Crawler#discoverResources} method is used, though.","     * @type {Boolean}","     */","    this.respectRobotsTxt = true;","","    /**","     * Controls whether the crawler is allowed to change the","     * {@link Crawler#host} setting if the first response is a redirect to","     * another domain.","     * @type {Boolean}","     */","    this.allowInitialDomainChange = false;","","    /**","     * Controls whether HTTP responses are automatically decompressed based on","     * their Content-Encoding header. If true, it will also assign the","     * appropriate Accept-Encoding header to requests.","     * @type {Boolean}","     */","    this.decompressResponses = true;","","    /**","     * Controls whether HTTP responses are automatically character converted to","     * standard JavaScript strings using the {@link https://www.npmjs.com/package/iconv-lite|iconv-lite}","     * module before emitted in the {@link Crawler#event:fetchcomplete} event.","     * The character encoding is interpreted from the Content-Type header","     * firstly, and secondly from any `<meta charset=\"xxx\" />` tags.","     * @type {Boolean}","     */","    this.decodeResponses = false;","","    /**","     * Controls whether the crawler fetches only URL's where the hostname","     * matches {@link Crawler#host}. Unless you want to be crawling the entire","     * internet, I would recommend leaving this on!","     * @type {Boolean}","     */","    this.filterByDomain = true;","","    /**","     * Controls whether URL's that points to a subdomain of {@link Crawler#host}","     * should also be fetched.","     * @type {Boolean}","     */","    this.scanSubdomains = false;","","    /**","     * Controls whether to treat the www subdomain as the same domain as","     * {@link Crawler#host}. So if {@link http://example.com/example} has","     * already been fetched, {@link http://www.example.com/example} won't be","     * fetched also.","     * @type {Boolean}","     */","    this.ignoreWWWDomain = true;","","    /**","     * Controls whether to strip the www subdomain entirely from URL's at queue","     * item construction time.","     * @type {Boolean}","     */","    this.stripWWWDomain = false;","","    /**","     * Internal cache store. Must implement `SimpleCache` interface. You can","     * save the site to disk using the built in file system cache like this:","     *","     * ```js","     * crawler.cache = new Crawler.cache('pathToCacheDirectory');","     * ```","     * @type {SimpleCache}","     */","    this.cache = null;","","    /**","     * Controls whether an HTTP proxy should be used for requests","     * @type {Boolean}","     */","    this.useProxy = false;","","    /**","     * If {@link Crawler#useProxy} is true, this setting controls what hostname","     * to use for the proxy","     * @type {String}","     */","    this.proxyHostname = \"127.0.0.1\";","","    /**","     * If {@link Crawler#useProxy} is true, this setting controls what port to","     * use for the proxy","     * @type {Number}","     */","    this.proxyPort = 8123;","","    /**","     * If {@link Crawler#useProxy} is true, this setting controls what username","     * to use for the proxy","     * @type {String}","     */","    this.proxyUser = null;","","    /**","     * If {@link Crawler#useProxy} is true, this setting controls what password","     * to use for the proxy","     * @type {String}","     */","    this.proxyPass = null;","","    /**","     * Controls whether to use HTTP Basic Auth","     * @type {Boolean}","     */","    this.needsAuth = false;","","    /**","     * If {@link Crawler#needsAuth} is true, this setting controls what username","     * to send with HTTP Basic Auth","     * @type {String}","     */","    this.authUser = null;","","    /**","     * If {@link Crawler#needsAuth} is true, this setting controls what password","     * to send with HTTP Basic Auth","     * @type {String}","     */","    this.authPass = null;","","    /**","     * Controls whether to save and send cookies or not","     * @type {Boolean}","     */","    this.acceptCookies = true;","","    /**","     * The module used to store cookies","     * @type {CookieJar}","     */","    this.cookies = new CookieJar();","","    /**","     * Controls what headers (besides the default ones) to include with every","     * request.","     * @type {Object}","     */","    this.customHeaders = {};","","    /**","     * Controls what domains the crawler is allowed to fetch from, regardless of","     * {@link Crawler#host} or {@link Crawler#filterByDomain} settings.","     * @type {Array}","     */","    this.domainWhitelist = [];","","    /**","     * Controls what protocols the crawler is allowed to fetch from","     * @type {RegExp[]}","     */","    this.allowedProtocols = [","        /^http(s)?$/i,                  // HTTP & HTTPS","        /^(rss|atom|feed)(\\+xml)?$/i    // RSS / XML","    ];","","    /**","     * Controls the maximum allowed size in bytes of resources to be fetched","     * @default 16777216","     * @type {Number}","     */","    this.maxResourceSize = 1024 * 1024 * 16; // 16mb","","    /**","     * Controls what mimetypes the crawler will scan for new resources. If","     * {@link Crawler#downloadUnsupported} is false, this setting will also","     * restrict what resources are downloaded.","     * @type {Array.<RegExp|string>}","     */","    this.supportedMimeTypes = [","        /^text\\//i,","        /^application\\/(rss|html|xhtml)?[\\+\\/\\-]?xml/i,","        /^application\\/javascript/i,","        /^xml/i","    ];","","    /**","     * Controls whether to download resources with unsupported mimetypes (as","     * specified by {@link Crawler#supportedMimeTypes})","     * @type {Boolean}","     */","    this.downloadUnsupported = true;","","    /**","     * Controls what URL encoding to use. Can be either \"unicode\" or \"iso8859\"","     * @type {String}","     */","    this.urlEncoding = \"unicode\";","","    /**","     * Controls whether to strip query string parameters from URL's at queue","     * item construction time.","     * @type {Boolean}","     */","    this.stripQuerystring = false;","","    /**","     * Collection of regular expressions and functions that are applied in the","     * default {@link Crawler#discoverResources} method.","     * @type {Array.<RegExp|Function>}","     */","    this.discoverRegex = [","        /\\s(?:href|src)\\s?=\\s?([\"']).*?\\1/ig,","        /\\s(?:href|src)\\s?=\\s?[^\"'\\s][^\\s>]+/ig,","        /\\s?url\\(([\"']).*?\\1\\)/ig,","        /\\s?url\\([^\"'].*?\\)/ig,","","        // This could easily duplicate matches above, e.g. in the case of","        // href=\"http://example.com\"","        /https?:\\/\\/[^?\\s><'\"]+/ig,","","        // This might be a bit of a gamble... but get hard-coded","        // strings out of javacript: URLs. They're often popup-image","        // or preview windows, which would otherwise be unavailable to us.","        // Worst case scenario is we make some junky requests.","        /^javascript:\\s*[\\w$.]+\\(['\"][^'\"\\s]+/ig,","","        // Find srcset links","        function(string) {","            var result = /\\ssrcset\\s*=\\s*([\"'])(.*)\\1/.exec(string);","            return Array.isArray(result) ? String(result[2]).split(\",\").map(function(string) {","                return string.trim().split(/\\s+/)[0];","            }) : \"\";","        },","","        // Find resources in <meta> redirects. We need to wrap these RegExp's in","        // functions because we only want to return the first capture group, not","        // the entire match. And we need two RegExp's because the necessary","        // attributes on the <meta> tag can appear in any order","        function(string) {","            var match = string.match(/<meta[^>]*http-equiv\\s*=\\s*[\"']?refresh[\"']?[^>]*content\\s*=\\s*[\"'] ?[^\"'>]*url=([^\"'>]*)[\"']?[^>]*>/i);","            return Array.isArray(match) ? [match[1]] : undefined;","        },","        function(string) {","            var match = string.match(/<meta[^>]*content\\s*=\\s*[\"']?[^\"'>]*url=([^\"'>]*)[\"']?[^>]*http-equiv\\s*=\\s*[\"']?refresh[\"']?[^>]*>/i);","            return Array.isArray(match) ? [match[1]] : undefined;","        }","    ];","","    /**","     * Controls whether the default {@link Crawler#discoverResources} should","     * scan for new resources inside of HTML comments.","     * @type {Boolean}","     */","    this.parseHTMLComments = true;","","    /**","     * Controls whether the default {@link Crawler#discoverResources} should","     * scan for new resources inside of `<script>` tags.","     * @type {Boolean}","     */","    this.parseScriptTags = true;","","    /**","     * Controls the max depth of resources that the crawler fetches. 0 means","     * that the crawler won't restrict requests based on depth. The initial","     * resource, as well as manually queued resources, are at depth 1. From","     * there, every discovered resource adds 1 to its referrer's depth.","     * @type {Number}","     */","    this.maxDepth = 0;","","    /**","     * Controls whether to proceed anyway when the crawler encounters an invalid","     * SSL certificate.","     * @type {Boolean}","     */","    this.ignoreInvalidSSL = false;","","    /**","     * Controls what HTTP agent to use. This is useful if you want to configure","     * eg. a SOCKS client.","     * @type {HTTPAgent}","     */","    this.httpAgent = http.globalAgent;","","    /**","     * Controls what HTTPS agent to use. This is useful if you want to configure","     * eg. a SOCKS client.","     * @type {HTTPAgent}","     */","    this.httpsAgent = https.globalAgent;","","    // STATE (AND OTHER) VARIABLES NOT TO STUFF WITH","    var hiddenProps = {","        _downloadConditions: [],","        _fetchConditions: [],","        _isFirstRequest: true,","        _openListeners: 0,","        _openRequests: [],","        _robotsTxts: [],","        _touchedHosts: []","    };","","    // Apply all the hidden props","    Object.keys(hiddenProps).forEach(function(key) {","        Object.defineProperty(crawler, key, {","            writable: true,","            enumerable: false,","            value: hiddenProps[key]","        });","    });","};","","util.inherits(Crawler, EventEmitter);","","/**"," * Starts or resumes the crawl. It adds a queue item constructed from"," * {@link Crawler#initialURL} to the queue. The crawler waits for"," * process.nextTick to begin, so handlers and other properties can be altered or"," * addressed before the crawl commences."," * @return {Crawler} Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.start = function() {","    var crawler = this;","","    if (crawler.running) {","        return crawler;","    }","","    crawler.running = true;","","    var queueItem = crawler.processURL(crawler.initialURL);","    queueItem.referrer = undefined;","    queueItem.depth = QUEUE_ITEM_INITIAL_DEPTH;","","    crawler.queue.add(queueItem, false, function(error) {","        if (error && error.code !== \"DUPLICATE\") {","            throw error;","        }","","        process.nextTick(function() {","            crawler.crawlIntervalID = setInterval(crawler.crawl.bind(crawler),","                crawler.interval);","","            crawler.crawl();","        });","","        /**","         * Fired when the crawl starts. This event gives you the opportunity to","         * adjust the crawler's configuration, since the crawl won't actually start","         * until the next processor tick.","         * @event Crawler#fetchstart","         */","        crawler.emit(\"crawlstart\");","    });","","    return crawler;","};","","/**"," * Determines whether robots.txt rules allows the fetching of a particular URL"," * or not"," * @param  {String} url The full URL of the resource that is to be fetched (or not)"," * @return {Boolean}    Returns true if the URL is allowed to be fetched, otherwise false"," */","Crawler.prototype.urlIsAllowed = function(url) {","    var crawler = this;","","    var formattedURL = uri(url).normalize().href(),","        allowed = false;","","    // The punycode module sometimes chokes on really weird domain","    // names. Catching those errors to prevent crawler from crashing","    try {","        allowed = crawler._robotsTxts.reduce(function(result, robots) {","            var allowed = robots.isAllowed(formattedURL, crawler.userAgent);","            return result !== undefined ? result : allowed;","        }, undefined);","    } catch (error) {","        // URL will be avoided","    }","","    return allowed === undefined ? true : allowed;","};","","/**"," * Generates a configuration object for http[s].request"," * @param  {QueueItem} queueItem The queue item for which a request option object should be generated"," * @return {Object}              Returns an object that can be passed directly to http[s].request"," */","Crawler.prototype.getRequestOptions = function(queueItem) {","    var crawler = this;","","    var agent = queueItem.protocol === \"https\" ? crawler.httpsAgent : crawler.httpAgent;","","    // Extract request options from queue;","    var requestHost = queueItem.host,","        requestPort = queueItem.port,","        requestPath = queueItem.path;","","    // Are we passing through an HTTP proxy?","    if (crawler.useProxy) {","        requestHost = crawler.proxyHostname;","        requestPort = crawler.proxyPort;","        requestPath = queueItem.url;","    }","","    var isStandardHTTPPort = queueItem.protocol === \"http\" && queueItem.port !== 80,","        isStandardHTTPSPort = queueItem.protocol === \"https\" && queueItem.port !== 443,","        isStandardPort = isStandardHTTPPort || isStandardHTTPSPort;","","    // Load in request options","    var requestOptions = {","        method: \"GET\",","        host: requestHost,","        port: requestPort,","        path: requestPath,","        agent: agent,","        headers: {","            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",","            \"User-Agent\": crawler.userAgent,","            \"Host\": queueItem.host + (queueItem.port && isStandardPort ? \":\" + queueItem.port : \"\")","        }","    };","","    if (crawler.decompressResponses) {","        requestOptions.headers[\"Accept-Encoding\"] = \"gzip, deflate\";","    }","","    if (queueItem.referrer) {","        requestOptions.headers.Referer = queueItem.referrer;","    }","","    // If port is one of the HTTP/HTTPS defaults, delete the option to avoid conflicts","    if (requestPort === 80 || requestPort === 443 || !requestPort) {","        delete requestOptions.port;","    }","","    // Add cookie header from cookie jar if we're configured to","    // send/accept cookies","    if (crawler.acceptCookies && crawler.cookies.getAsHeader()) {","        requestOptions.headers.cookie =","            crawler.cookies.getAsHeader(queueItem.host, queueItem.path);","    }","","    // Add auth headers if we need them","    if (crawler.needsAuth) {","        var auth = crawler.authUser + \":\" + crawler.authPass;","","        // Generate auth header","        auth = \"Basic \" + new Buffer(auth).toString(\"base64\");","        requestOptions.headers.Authorization = auth;","    }","","    // Add proxy auth if we need it","    if (crawler.proxyUser !== null && crawler.proxyPass !== null) {","        var proxyAuth = crawler.proxyUser + \":\" + crawler.proxyPass;","","        // Generate auth header","        proxyAuth = \"Basic \" + new Buffer(proxyAuth).toString(\"base64\");","        requestOptions.headers[\"Proxy-Authorization\"] = proxyAuth;","    }","","    // And if we've got any custom headers available","    if (crawler.customHeaders) {","        for (var header in crawler.customHeaders) {","            if (crawler.customHeaders.hasOwnProperty(header)) {","                requestOptions.headers[header] = crawler.customHeaders[header];","            }","        }","    }","","    return requestOptions;","};","","/**"," * Performs an HTTP request for the robots.txt resource on any domain"," * @param  {String} url                            The full URL to the robots.txt file, eg. \"http://example.com/robots.txt\""," * @param  {Crawler~getRobotsTxtCallback} callback The callback called with the server's response, or an error"," * @return {Crawler}                               Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.getRobotsTxt = function(url, callback) {","    var crawler = this,","        errorMsg;","","    var robotsTxtUrl = uri(url);","    var client = robotsTxtUrl.protocol() === \"https\" ? https : http;","","    // Apply the ignoreInvalidSSL setting to https connections","    if (client === https && crawler.ignoreInvalidSSL === true) {","        client.rejectUnauthorized = false;","        client.strictSSL = false;","    }","","    var requestOptions = crawler.getRequestOptions(crawler.processURL(robotsTxtUrl.href()));","","    // Get the resource!","    var clientRequest = client.request(requestOptions, function(response) {","        if (response.statusCode >= 200 && response.statusCode < 300) {","            var responseLength =","                    parseInt(response.headers[\"content-length\"], 10) ||","                    crawler.maxResourceSize,","                responseBuffer = new Buffer(responseLength),","                responseLengthReceived = 0;","","            response.on(\"data\", function(chunk) {","                if (responseLengthReceived + chunk.length <= crawler.maxResourceSize) {","                    chunk.copy(responseBuffer, responseLengthReceived, 0, chunk.length);","                    responseLengthReceived += chunk.length;","                } else {","                    response.destroy();","                    callback(new Error(\"robots.txt exceeded maxResourceSize\"));","                }","            });","","            var decodeAndReturnResponse = function(error, responseBuffer) {","                if (error) {","                    return callback(new Error(\"Couldn't unzip robots.txt response body\"));","                }","","                var contentType = response.headers[\"content-type\"],","                    responseBody = crawler.decodeBuffer(responseBuffer, contentType);","","                callback(undefined, robotsTxtUrl.href(), responseBody);","            };","","            response.on(\"end\", function() {","                var contentEncoding = response.headers[\"content-encoding\"];","","                if (contentEncoding && /(gzip|deflate)/.test(contentEncoding)) {","                    zlib.unzip(responseBuffer, decodeAndReturnResponse);","                } else {","                    decodeAndReturnResponse(undefined, responseBuffer);","                }","            });","        } else if (response.statusCode >= 300 && response.statusCode < 400 &&","            response.headers.location) {","","            response.destroy();","","            var redirectTarget = uri(response.headers.location)","                .absoluteTo(robotsTxtUrl)","                .normalize();","","            if (crawler.domainValid(redirectTarget.hostname())) {","                crawler.getRobotsTxt(redirectTarget.href(), callback);","            } else {","                errorMsg = util.format(\"%s redirected to a disallowed domain (%s)\", robotsTxtUrl.href(), redirectTarget.hostname());","                callback(new Error(errorMsg));","            }","        } else {","            response.destroy();","","            errorMsg = util.format(\"Server responded with status %d when fetching robots.txt\", response.statusCode);","            callback(new Error(errorMsg));","        }","    });","","    clientRequest.end();","","    clientRequest.setTimeout(crawler.timeout, function() {","        clientRequest.abort();","        callback(new Error(\"robots.txt request timed out\"));","    });","","    clientRequest.on(\"error\", function(errorData) {","        if (!clientRequest.aborted) {","            callback(errorData);","        }","    });","","    return crawler;","};","","/**"," * Determines whether the crawler supports a protocol"," * @param  {String} URL A full URL, eg. \"http://example.com\""," * @return {Boolean}    Returns true if the protocol of the URL is supported, false if not"," */","Crawler.prototype.protocolSupported = function(URL) {","    var protocol,","        crawler = this;","","    try {","        protocol = uri(URL).protocol();","","        // Unspecified protocol. Assume http","        if (!protocol) {","            protocol = \"http\";","        }","","    } catch (e) {","        // If URIjs died, we definitely /do not/ support the protocol.","        return false;","    }","","    return crawler.allowedProtocols.some(function(protocolCheck) {","        return protocolCheck.test(protocol);","    });","};","","/**"," * Determines whether the crawler supports a mimetype"," * @param  {String} mimetype Eg. \"text/html\" or \"application/octet-stream\""," * @return {Boolean}         Returns true if the mimetype is supported, false if not"," */","Crawler.prototype.mimeTypeSupported = function(mimetype) {","    var crawler = this;","","    return crawler.supportedMimeTypes.some(function(mimeCheck) {","        if (typeof mimeCheck === \"string\") {","            return mimeCheck === mimetype;","        }","","        return mimeCheck.test(mimetype);","    });","};","","/**"," * Constructs a queue item from a URL and a referrer queue item."," * @param  {String} url           An absolute or relative URL to construct a queue item from"," * @param  {QueueItem} [referrer] The queue item representing the resource where this URL was discovered"," * @return {QueueItem}            Returns a new queue item"," */","Crawler.prototype.processURL = function(url, referrer) {","    var newUrl,","        crawler = this;","","    if (typeof referrer !== \"object\") {","        referrer = {","            url: crawler.initialURL,","            depth: QUEUE_ITEM_INITIAL_DEPTH - 1","        };","    }","","    // If the URL didn't contain anything, don't fetch it.","    if (!(url && url.trim().length)) {","        return false;","    }","","    // Check if querystring should be ignored","    if (crawler.stripQuerystring === true) {","        url = uri(url).search(\"\").href();","    }","","    if (crawler.stripWWWDomain && url.match(/https?:\\/\\/(www\\.).*/i)) {","        url = url.replace(\"www.\", \"\");","    }","","    try {","        newUrl = uri(url).absoluteTo(referrer.url).normalize();","","        if (crawler.urlEncoding === \"iso8859\") {","            newUrl = newUrl.iso8859();","        }","    } catch (e) {","        // Couldn't process the URL, since URIjs choked on it.","        return false;","    }","","    // simplecrawler uses slightly different terminology to URIjs. Sorry!","    return {","        host:      newUrl.hostname(),","        path:      newUrl.resource(),","        port:      newUrl.port(),","        protocol:  newUrl.protocol() || \"http\",","        uriPath:   newUrl.path(),","        url:       newUrl.href(),","        depth:     referrer.depth + 1,","        referrer:  referrer.url,","        fetched:   false,","        status:    \"created\",","        stateData: {}","    };","};","","/**"," * Performs string replace operations on a URL string. Eg. removes HTML"," * attribute fluff around actual URL, replaces leading \"//\" with absolute"," * protocol etc."," * @private"," * @param  {String} URL          The URL to be cleaned"," * @param  {QueueItem} queueItem The queue item representing the resource where this URL was discovered"," * @return {String}              Returns the cleaned URL"," */","function cleanURL (URL, queueItem) {","    return URL","        .replace(/^(?:\\s*href|\\s*src)\\s*=+\\s*/i, \"\")","        .replace(/^\\s*/, \"\")","        .replace(/^(['\"])(.*)\\1$/, \"$2\")","        .replace(/^url\\((.*)\\)/i, \"$1\")","        .replace(/^javascript:\\s*(\\w*\\(['\"](.*)['\"]\\))*.*/i, \"$2\")","        .replace(/^(['\"])(.*)\\1$/, \"$2\")","        .replace(/^\\((.*)\\)$/, \"$1\")","        .replace(/^\\/\\//, queueItem.protocol + \"://\")","        .replace(/&amp;/gi, \"&\")","        .replace(/&#38;/gi, \"&\")","        .replace(/&#x00026;/gi, \"&\")","        .split(\"#\")","        .shift()","        .trim();","}","","/**"," * Cleans a list of resources, usually provided by"," * {@link Crawler#discoverResources}. Also makes relative URL's absolute to the"," * URL of the queueItem argument."," * @param  {Array} urlMatch      An array of URL's"," * @param  {QueueItem} queueItem The queue item representing the resource where the URL's were discovered"," * @return {Array}               Returns an array of unique and absolute URL's"," */","Crawler.prototype.cleanExpandResources = function(urlMatch, queueItem) {","    var crawler = this;","","    if (!urlMatch) {","        return [];","    }","","    return urlMatch","        .filter(Boolean)","        .map(function(url) {","            return cleanURL(url, queueItem);","        })","        .reduce(function(list, URL) {","","            // Ensure URL is whole and complete","            try {","                URL = uri(URL)","                    .absoluteTo(queueItem.url || \"\")","                    .normalize()","                    .href();","            } catch (e) {","                // But if URI.js couldn't parse it - nobody can!","                return list;","            }","","            // If we hit an empty item, don't return it","            if (!URL.length) {","                return list;","            }","","            // If we don't support the protocol in question","            if (!crawler.protocolSupported(URL)) {","                return list;","            }","","            // Does the item already exist in the list?","            var exists = list.some(function(entry) {","                return entry === URL;","            });","","            if (exists) {","                return list;","            }","","            return list.concat(URL);","        }, []);","};","","/**"," * Discovers linked resources in an HTML, XML or text document."," * @param  {String} resourceText The body of the text document that is to be searched for resources"," * @return {Array}               Returns the array of discovered URL's. It is not the responsibility of this method to clean this array of duplicates etc. That's what {@link Crawler#cleanExpandResources} is for."," */","Crawler.prototype.discoverResources = function(resourceText) {","    var crawler = this;","","    if (!crawler.parseHTMLComments) {","        resourceText = resourceText.replace(/<!--([\\s\\S]+?)-->/g, \"\");","    }","","    if (!crawler.parseScriptTags) {","        resourceText = resourceText.replace(/<script(.*?)>([\\s\\S]*?)<\\/script>/gi, \"\");","    }","","    if (crawler.respectRobotsTxt && /<meta(?:\\s[^>]*)?\\sname\\s*=\\s*[\"']?robots[\"']?[^>]*>/i.test(resourceText)) {","        var robotsValue = /<meta(?:\\s[^>]*)?\\svalue\\s*=\\s*[\"']?([\\w\\s,]+)[\"']?[^>]*>/i.exec(resourceText.toLowerCase());","","        if (Array.isArray(robotsValue) && /nofollow/i.test(robotsValue[1])) {","            return [];","        }","    }","","    // Rough scan for URLs","    return crawler.discoverRegex.reduce(function(list, extracter) {","        var resources;","","        if (extracter instanceof Function) {","            resources = extracter(resourceText);","        } else {","            resources = resourceText.match(extracter);","        }","","        return resources ? list.concat(resources) : list;","    }, []);","};","","/**"," * Determines whether a domain is valid for crawling based on configurable"," * rules."," * @param  {String} host The domain name that's a candidate for fetching"," * @return {Boolean}     Returns true if the crawler if allowed to fetch resources from the domain, false if not."," */","Crawler.prototype.domainValid = function(host) {","    var crawler = this;","","    // If we're ignoring the WWW domain, remove the WWW for comparisons...","    if (crawler.ignoreWWWDomain) {","        host = host.replace(/^www\\./i, \"\");","    }","","    function domainInWhitelist(host) {","","        // If there's no whitelist, or the whitelist is of zero length,","        // just return false.","        if (!crawler.domainWhitelist || !crawler.domainWhitelist.length) {","            return false;","        }","","        // Otherwise, scan through it.","        return crawler.domainWhitelist.some(function(entry) {","            // If the domain is just equal, return true.","            if (host === entry) {","                return true;","            }","            // If we're ignoring WWW subdomains, and both domains,","            // less www. are the same, return true.","            if (crawler.ignoreWWWDomain && host === entry.replace(/^www\\./i, \"\")) {","                return true;","            }","            return false;","        });","    }","","    // Checks if the first domain is a subdomain of the second","    function isSubdomainOf(subdomain, host) {","","        // Comparisons must be case-insensitive","        subdomain   = subdomain.toLowerCase();","        host        = host.toLowerCase();","","        // If we're ignoring www, remove it from both","        // (if www is the first domain component...)","        if (crawler.ignoreWWWDomain) {","            subdomain = subdomain.replace(/^www./ig, \"\");","            host = host.replace(/^www./ig, \"\");","        }","","        // They should be the same flipped around!","        return subdomain.split(\"\").reverse().join(\"\").substr(0, host.length) ===","                host.split(\"\").reverse().join(\"\");","    }","","           // If we're not filtering by domain, just return true.","    return !crawler.filterByDomain ||","           // Or if the domain is just the right one, return true.","           host === crawler.host ||","           // Or if we're ignoring WWW subdomains, and both domains,","           // less www. are the same, return true.","           crawler.ignoreWWWDomain &&","               crawler.host.replace(/^www\\./i, \"\") ===","                   host.replace(/^www\\./i, \"\") ||","           // Or if the domain in question exists in the domain whitelist,","           // return true.","           domainInWhitelist(host) ||","           // Or if we're scanning subdomains, and this domain is a subdomain","           // of the crawler's set domain, return true.","           crawler.scanSubdomains && isSubdomainOf(host, crawler.host);","};","","/**"," * Initiates discovery of linked resources in an HTML or text document, and"," * queues the resources if applicable. Not to be confused with"," * {@link Crawler#discoverResources}, despite that method being the main"," * component of this one, since this method queues the resources in addition to"," * discovering them."," * @fires  Crawler#discoverycomplete"," * @param  {String|Buffer} resourceData The document body to search for URL's"," * @param  {QueueItem} queueItem        The queue item that represents the fetched document body"," * @return {Crawler}                    Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.queueLinkedItems = function(resourceData, queueItem) {","    var crawler = this;","","    var resources = crawler.discoverResources(resourceData.toString(), queueItem);","    resources = crawler.cleanExpandResources(resources, queueItem);","","    /**","     * Fired when a request times out","     * @event Crawler#fetchtimeout","     * @param {QueueItem} queueItem The queue item for which the request timed out","     * @param {Number} timeout      The delay in milliseconds after which the request timed out","     */","    crawler.emit(\"discoverycomplete\", queueItem, resources);","","    resources.forEach(function(url) {","        if (crawler.maxDepth === 0 || queueItem.depth + 1 <= crawler.maxDepth) {","            crawler.queueURL(url, queueItem);","        }","    });","","    return crawler;","};","","/**"," * Queues a URL for fetching after cleaning, validating and constructing a queue"," * item from it. If you're queueing a URL manually, use this method rather than"," * {@link Crawler#queue#add}"," * @fires Crawler#invaliddomain"," * @fires Crawler#fetchdisallowed"," * @fires Crawler#fetchconditionerror"," * @fires Crawler#fetchprevented"," * @fires Crawler#queueduplicate"," * @fires Crawler#queueerror"," * @fires Crawler#queueadd"," * @param {String} url            An absolute or relative URL. If relative, {@link Crawler#processURL} will make it absolute to the referrer queue item."," * @param {QueueItem} [referrer]  The queue item representing the resource where this URL was discovered."," * @param {Boolean} [force]       If true, the URL will be queued regardless of whether it already exists in the queue or not."," * @return {Boolean}              The return value used to indicate whether the URL passed all fetch conditions and robots.txt rules. With the advent of async fetch conditions, the return value will no longer take fetch conditions into account."," */","Crawler.prototype.queueURL = function(url, referrer, force) {","    var crawler = this,","        queueItem = typeof url === \"object\" ? url : crawler.processURL(url, referrer);","","    // URL Parser decided this URL was junky. Next please!","    if (!queueItem) {","        return false;","    }","","    // Check that the domain is valid before adding it to the queue","    if (!crawler.domainValid(queueItem.host)) {","        /**","         * Fired when a resource wasn't queued because of an invalid domain name","         * @event Crawler#invaliddomain","         * @param {QueueItem} queueItem The queue item representing the disallowed URL","         */","        crawler.emit(\"invaliddomain\", queueItem);","        return false;","    }","","    if (!crawler.urlIsAllowed(queueItem.url)) {","        /**","         * Fired when a resource wasn't queued because it was disallowed by the","         * site's robots.txt rules","         * @event Crawler#fetchdisallowed","         * @param {QueueItem} queueItem The queue item representing the disallowed URL","         */","        crawler.emit(\"fetchdisallowed\", queueItem);","        return false;","    }","","    async.every(crawler._fetchConditions, function(fetchCondition, callback) {","        if (fetchCondition.length < 3) {","            try {","                callback(null, fetchCondition(queueItem, referrer));","            } catch (error) {","                callback(error);","            }","        } else {","            fetchCondition(queueItem, referrer, callback);","        }","    }, function(error, result) {","        if (error) {","            /**","             * Fired when a fetch condition returns an error","             * @event Crawler#fetchconditionerror","             * @param {QueueItem} queueItem The queue item that was processed when the error was encountered","             * @param {*}         error","             */","            crawler.emit(\"fetchconditionerror\", queueItem, error);","            return false;","        }","","        if (!result) {","            /**","             * Fired when a fetch condition prevented the queueing of a URL","             * @event Crawler#fetchprevented","             * @param {QueueItem} queueItem      The queue item that didn't pass the fetch conditions","             * @param {Function}  fetchCondition The first fetch condition that returned false","             */","            crawler.emit(\"fetchprevented\", queueItem);","            return false;","        }","","        crawler.queue.add(queueItem, force, function(error) {","            if (error) {","                if (error.code && error.code === \"DUPLICATE\") {","                    /**","                     * Fired when a new queue item was rejected because another","                     * queue item with the same URL was already in the queue","                     * @event Crawler#queueduplicate","                     * @param {QueueItem} queueItem The queue item that was rejected","                     */","                    return crawler.emit(\"queueduplicate\", queueItem);","                }","","                /**","                 * Fired when an error was encountered while updating a queue item","                 * @event Crawler#queueerror","                 * @param {QueueItem} error     The error that was returned by the queue","                 * @param {QueueItem} queueItem The queue item that the crawler tried to update when it encountered the error","                 */","                return crawler.emit(\"queueerror\", error, queueItem);","            }","","            /**","             * Fired when an item was added to the crawler's queue","             * @event Crawler#queueadd","             * @param {QueueItem} queueItem The queue item that was added to the queue","             * @param {QueueItem} referrer  The queue item representing the resource where the new queue item was found","             */","            crawler.emit(\"queueadd\", queueItem, referrer);","        });","    });","","    return true;","};","","/**"," * Handles the initial fetching of a queue item. Once an initial response has"," * been received, {@link Crawler#handleResponse} will handle the downloading of"," * the resource data"," * @fires  Crawler#fetchstart"," * @fires  Crawler#fetchtimeout"," * @fires  Crawler#fetchclienterror"," * @param  {QueueItem} queueItem The queue item that will be fetched"," * @return {Crawler}             Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.fetchQueueItem = function(queueItem) {","    var crawler = this;","","    crawler.queue.update(queueItem.id, {","        status: \"spooled\"","    }, function(error, queueItem) {","        if (error) {","            return crawler.emit(\"queueerror\", error, queueItem);","        }","","        var client = queueItem.protocol === \"https\" ? https : http,","            agent  = queueItem.protocol === \"https\" ? crawler.httpsAgent : crawler.httpAgent;","","        if (agent.maxSockets < crawler.maxConcurrency) {","            agent.maxSockets = crawler.maxConcurrency;","        }","","        if (client === https && crawler.ignoreInvalidSSL === true) {","            client.rejectUnauthorized = false;","            client.strictSSL = false;","        }","","        var requestOptions = crawler.getRequestOptions(queueItem),","            timeCommenced = Date.now();","","        var clientRequest = client.request(requestOptions, function(response) {","            crawler.handleResponse(queueItem, response, timeCommenced);","        });","","        clientRequest.end();","","        // Enable central tracking of this request","        crawler._openRequests.push(clientRequest);","","        // Ensure the request is removed from the tracking array if it is","        // forcibly aborted","        clientRequest.on(\"abort\", function() {","            if (crawler._openRequests.indexOf(clientRequest) > -1) {","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(clientRequest), 1);","            }","        });","","        clientRequest.setTimeout(crawler.timeout, function() {","            if (queueItem.fetched) {","                return;","            }","","            if (crawler.running && !queueItem.fetched) {","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(clientRequest), 1);","            }","","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"timeout\"","            }, function(error, queueItem) {","                if (error) {","                    return crawler.emit(\"queueerror\", error, queueItem);","                }","","                /**","                 * Fired when a request times out","                 * @event Crawler#fetchtimeout","                 * @param {QueueItem} queueItem The queue item for which the request timed out","                 * @param {Number} timeout      The delay in milliseconds after which the request timed out","                 */","                crawler.emit(\"fetchtimeout\", queueItem, crawler.timeout);","                clientRequest.abort();","            });","        });","","        clientRequest.on(\"error\", function(errorData) {","","            // This event will be thrown if we manually aborted the request,","            // but we don't want to do anything in that case.","            if (clientRequest.aborted) {","                return;","            }","","            if (crawler.running && !queueItem.fetched) {","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(clientRequest), 1);","            }","","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"failed\",","                stateData: {","                    code: 600","                }","            }, function(error, queueItem) {","                if (error) {","                    return crawler.emit(\"queueerror\", error, queueItem);","                }","","                /**","                 * Fired when a request encounters an unknown error","                 * @event Crawler#fetchclienterror","                 * @param {QueueItem} queueItem The queue item for which the request has errored","                 * @param {Object} error        The error supplied to the `error` event on the request","                 */","                crawler.emit(\"fetchclienterror\", queueItem, errorData);","            });","        });","","        /**","         * Fired just after a request has been initiated","         * @event Crawler#fetchstart","         * @param {QueueItem} queueItem   The queue item for which the request has been initiated","         * @param {Object} requestOptions The options generated for the HTTP request","         */","        crawler.emit(\"fetchstart\", queueItem, requestOptions);","    });","","    return crawler;","};","","/**"," * Decodes a string buffer based on a complete Content-Type header. Will also"," * look for an embedded <meta> tag with a charset definition, but the"," * Content-Type header is prioritized, see the [MDN documentation]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset}"," * for more details."," * @param  {Buffer} buffer              A response buffer"," * @param  {String} [contentTypeHeader] ContentType header received from HTTP request"," * @return {String}                     The decoded buffer contents"," */","Crawler.prototype.decodeBuffer = function(buffer, contentTypeHeader) {","    contentTypeHeader = contentTypeHeader || \"\";","","    var embeddedEncoding = /<meta[^>]*charset\\s*=\\s*[\"']?([\\w\\-]*)/i.exec(buffer.toString(undefined, 0, 512)) || [],","        encoding = contentTypeHeader.split(\"charset=\")[1] || embeddedEncoding[1] || contentTypeHeader;","","    encoding = iconv.encodingExists(encoding) ? encoding : \"utf8\";","","    return iconv.decode(buffer, encoding);","};","","/**"," * Handles downloading of a resource after an initial HTTP response has been"," * received."," * @fires  Crawler#fetchheaders"," * @fires  Crawler#fetchcomplete"," * @fires  Crawler#fetchdataerror"," * @fires  Crawler#notmodified"," * @fires  Crawler#fetchredirect"," * @fires  Crawler#fetch404"," * @fires  Crawler#fetcherror"," * @param  {QueueItem} queueItem             A queue item representing the resource to be fetched"," * @param  {http.IncomingMessage} response   An instace of [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage}"," * @param  {Date} [timeCommenced=Date.now()] Specifies at what time the request was initiated"," * @return {Crawler}                         Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.handleResponse = function(queueItem, response, timeCommenced) {","    var crawler = this,","        dataReceived = false,","        timeHeadersReceived = Date.now(),","        timeDataReceived,","        redirectQueueItem,","        responseBuffer,","        responseLength,","        responseLengthReceived = 0,","        contentType = response.headers[\"content-type\"];","","    timeCommenced = timeCommenced || Date.now();","    responseLength = parseInt(response.headers[\"content-length\"], 10);","    responseLength = !isNaN(responseLength) ? responseLength : 0;","","    crawler.queue.update(queueItem.id, {","        stateData: {","            requestLatency: timeHeadersReceived - timeCommenced,","            requestTime: timeHeadersReceived - timeCommenced,","            contentLength: responseLength,","            contentType: contentType,","            code: response.statusCode,","            headers: response.headers","        }","    }, function(error, queueItem) {","        if (error) {","            return crawler.emit(\"queueerror\", error, queueItem);","        }","","        // Do we need to save cookies? Were we sent any?","        if (crawler.acceptCookies && response.headers.hasOwnProperty(\"set-cookie\")) {","            try {","                crawler.cookies.addFromHeaders(response.headers[\"set-cookie\"]);","            } catch (error) {","                /**","                 * Fired when an error was encountered while trying to add a","                 * cookie to the cookie jar","                 * @event Crawler#cookieerror","                 * @param {QueueItem} queueItem The queue item representing the resource that returned the cookie","                 * @param {Error} error         The error that was encountered","                 * @param {String} cookie       The Set-Cookie header value that was returned from the request","                 */","                crawler.emit(\"cookieerror\", queueItem, error, response.headers[\"set-cookie\"]);","            }","        }","","        /**","         * Fired when the headers for a request have been received","         * @event Crawler#fetchheaders","         * @param {QueueItem} queueItem           The queue item for which the headers have been received","         * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","         */","        crawler.emit(\"fetchheaders\", queueItem, response);","","        // We already know that the response will be too big","        if (responseLength > crawler.maxResourceSize) {","","            crawler.queue.update(queueItem.id, {","                fetched: true","            }, function(error, queueItem) {","                if (error) {","                    return crawler.emit(\"queueerror\", error, queueItem);","                }","","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(response.req), 1);","","                response.destroy();","                crawler.emit(\"fetchdataerror\", queueItem, response);","            });","","        // We should just go ahead and get the data","        } else if (response.statusCode >= 200 && response.statusCode < 300) {","","            async.every(crawler._downloadConditions, function(downloadCondition, callback) {","                if (downloadCondition.length < 3) {","                    try {","                        callback(null, downloadCondition(queueItem, response));","                    } catch (error) {","                        callback(error);","                    }","                } else {","                    downloadCondition(queueItem, response, callback);","                }","            }, function(error, result) {","","                if (error) {","                    /**","                     * Fired when a download condition returns an error","                     * @event Crawler#downloadconditionerror","                     * @param {QueueItem} queueItem The queue item that was processed when the error was encountered","                     * @param {*}         error","                     */","                    crawler.emit(\"downloadconditionerror\", queueItem, error);","                    return false;","                }","","                if (!result) {","                    crawler.queue.update(queueItem.id, {","                        fetched: true,","                        status: \"downloadprevented\"","                    }, function(error, queueItem) {","                        crawler._openRequests.splice(","                            crawler._openRequests.indexOf(response.req), 1);","","                        response.destroy();","                        /**","                         * Fired when the downloading of a resource was prevented","                         * by a download condition","                         * @event Crawler#downloadprevented","                         * @param {QueueItem} queueItem           The queue item representing the resource that was halfway fetched","                         * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                         */","                        crawler.emit(\"downloadprevented\", queueItem, response);","                    });","","                } else {","                    crawler.queue.update(queueItem.id, {","                        status: \"headers\"","                    }, function(error, queueItem) {","                        if (error) {","                            return crawler.emit(\"queueerror\", error, queueItem);","                        }","","                        // Create a buffer with our response length","                        responseBuffer = new Buffer(responseLength);","","                        // Only if we're prepared to download non-text resources...","                        if (crawler.downloadUnsupported || crawler.mimeTypeSupported(contentType)) {","                            response.on(\"data\", receiveData);","                            response.on(\"end\", processReceivedData);","                        } else {","                            crawler.queue.update(queueItem.id, {","                                fetched: true","                            }, function() {","                                // Remove this request from the open request map","                                crawler._openRequests.splice(","                                    crawler._openRequests.indexOf(response.req), 1);","","                                response.destroy();","                            });","                        }","","                        crawler._isFirstRequest = false;","                    });","                }","            });","","        // We've got a not-modified response back","        } else if (response.statusCode === 304) {","","            if (crawler.cache !== null && crawler.cache.getCacheData) {","                // We've got access to a cache","                crawler.cache.getCacheData(queueItem, function(cacheObject) {","                    crawler.emit(\"notmodified\", queueItem, response, cacheObject);","                });","            } else {","                /**","                 * Fired when the crawler's cache was enabled and the server responded with a 304 Not Modified status for the request","                 * @event Crawler#notmodified","                 * @param {QueueItem} queueItem           The queue item for which the request returned a 304 status","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 * @param {CacheObject} cacheObject       The CacheObject returned from the cache backend","                 */","                crawler.emit(\"notmodified\", queueItem, response);","            }","","            response.destroy();","            // Remove this request from the open request map","            crawler._openRequests.splice(","                crawler._openRequests.indexOf(response.req), 1);","","            crawler._isFirstRequest = false;","","        // If we should queue a redirect","        } else if (response.statusCode >= 300 && response.statusCode < 400 && response.headers.location) {","","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"redirected\"","            }, function(error, queueItem) {","","                // Parse the redirect URL ready for adding to the queue...","                redirectQueueItem = crawler.processURL(response.headers.location, queueItem);","","                /**","                 * Fired when the server returned a redirect HTTP status for the request","                 * @event Crawler#fetchredirect","                 * @param {QueueItem} queueItem           The queue item for which the request was redirected","                 * @param {QueueItem} redirectQueueItem   The queue item for the redirect target resource","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 */","                crawler.emit(\"fetchredirect\", queueItem, redirectQueueItem, response);","","                if (crawler._isFirstRequest) {","                    redirectQueueItem.depth = 1;","                }","","                if (crawler.allowInitialDomainChange && crawler._isFirstRequest) {","                    crawler.host = redirectQueueItem.host;","                }","","                crawler.queueURL(redirectQueueItem, queueItem);","                response.destroy();","","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(response.req), 1);","            });","","        // Ignore this request, but record that we had a 404","        } else if (response.statusCode === 404 || response.statusCode === 410) {","","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"notfound\"","            }, function(error, queueItem) {","                /**","                 * Fired when the server returned a 404 Not Found status for the request","                 * @event Crawler#fetch404","                 * @param {QueueItem} queueItem           The queue item for which the request returned a 404 status","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 */","                /**","                 * Fired when the server returned a 410 Gone status for the request","                 * @event Crawler#fetch410","                 * @param {QueueItem} queueItem           The queue item for which the request returned a 410 status","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 */","                crawler.emit(\"fetch\" + response.statusCode, queueItem, response);","                response.destroy();","","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(response.req), 1);","","                crawler._isFirstRequest = false;","            });","","        // And oh dear. Handle this one as well. (other 400s, 500s, etc)","        } else {","","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"failed\"","            }, function(error, queueItem) {","                /**","                 * Fired when the server returned a status code above 400 that isn't 404 or 410","                 * @event Crawler#fetcherror","                 * @param {QueueItem} queueItem           The queue item for which the request failed","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 */","                crawler.emit(\"fetcherror\", queueItem, response);","                response.destroy();","","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(response.req), 1);","","                crawler._isFirstRequest = false;","            });","","        }","","","        function emitFetchComplete(responseBody, decompressedBuffer) {","            crawler.queue.update(queueItem.id, {","                fetched: true,","                status: \"downloaded\"","            }, function(error, queueItem) {","                // Remove this request from the open request map","                crawler._openRequests.splice(","                    crawler._openRequests.indexOf(response.req), 1);","","                if (error) {","                    return crawler.emit(\"queueerror\", error, queueItem);","                }","","                if (crawler.decodeResponses) {","                    responseBody = crawler.decodeBuffer(responseBody, queueItem.stateData.contentType);","                }","","                /**","                 * Fired when the request has completed","                 * @event Crawler#fetchcomplete","                 * @param {QueueItem} queueItem           The queue item for which the request has completed","                 * @param {String|Buffer} responseBody    If Crawler.decodeResponses is true, this will be the decoded HTTP response. Otherwise it will be the raw response buffer.","                 * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                 */","                crawler.emit(\"fetchcomplete\", queueItem, responseBody, response);","","                // We only process the item if it's of a valid mimetype","                // and only if the crawler is set to discover its own resources","                if (crawler.mimeTypeSupported(contentType) && crawler.discoverResources) {","                    crawler.queueLinkedItems(decompressedBuffer || responseBody, queueItem);","                }","            });","        }","","        // Function for dealing with 200 responses","        function processReceivedData() {","            if (dataReceived || queueItem.fetched) {","                return;","            }","","            responseBuffer = responseBuffer.slice(0, responseLengthReceived);","            dataReceived = true;","            timeDataReceived = Date.now();","","            crawler.queue.update(queueItem.id, {","                stateData: {","                    downloadTime: timeDataReceived - timeHeadersReceived,","                    requestTime: timeDataReceived - timeCommenced,","                    actualDataSize: responseBuffer.length,","                    sentIncorrectSize: responseBuffer.length !== responseLength","                }","            }, function (error, queueItem) {","                if (error) {","                    // Remove this request from the open request map","                    crawler._openRequests.splice(","                        crawler._openRequests.indexOf(response.req), 1);","","                    return crawler.emit(\"queueerror\", error, queueItem);","                }","","                // First, save item to cache (if we're using a cache!)","                if (crawler.cache && crawler.cache.setCacheData instanceof Function) {","                    crawler.cache.setCacheData(queueItem, responseBuffer);","                }","","                // No matter the value of `crawler.decompressResponses`, we still","                // decompress the response if it's gzipped or deflated. This is","                // because we always provide the discoverResources method with a","                // decompressed buffer","                if (/(gzip|deflate)/.test(queueItem.stateData.headers[\"content-encoding\"])) {","                    zlib.unzip(responseBuffer, function(error, decompressedBuffer) {","                        if (error) {","                            /**","                             * Fired when an error was encountered while unzipping the response data","                             * @event Crawler#gziperror","                             * @param {QueueItem} queueItem           The queue item for which the unzipping failed","                             * @param {String|Buffer} responseBody    If Crawler.decodeResponses is true, this will be the decoded HTTP response. Otherwise it will be the raw response buffer.","                             * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                             */","                            crawler.emit(\"gziperror\", queueItem, error, responseBuffer);","                            emitFetchComplete(responseBuffer);","                        } else {","                            var responseBody = crawler.decompressResponses ? decompressedBuffer : responseBuffer;","                            emitFetchComplete(responseBody, decompressedBuffer);","                        }","                    });","                } else {","                    emitFetchComplete(responseBuffer);","                }","            });","        }","","        function receiveData(chunk) {","            if (!chunk.length || dataReceived) {","                return;","            }","","            if (responseLengthReceived + chunk.length > responseBuffer.length) {","","                // Oh dear. We've been sent more data than we were initially told.","                // This could be a mis-calculation, or a streaming resource.","                // Let's increase the size of our buffer to match, as long as it isn't","                // larger than our maximum resource size.","                if (responseLengthReceived + chunk.length <= crawler.maxResourceSize) {","","                    // Create a temporary buffer with the new response length, copy","                    // the old data into it and replace the old buffer with it","                    var tmpNewBuffer = new Buffer(responseLengthReceived + chunk.length);","                    responseBuffer.copy(tmpNewBuffer, 0, 0, responseBuffer.length);","                    chunk.copy(tmpNewBuffer, responseBuffer.length, 0, chunk.length);","                    responseBuffer = tmpNewBuffer;","                } else {","","                    // The response size exceeds maxResourceSize. Throw event and","                    // ignore. We'll then deal with the data that we have.","                    response.destroy();","","                    /**","                     * Fired when a resource couldn't be downloaded because it exceeded the maximum allowed size","                     * @event Crawler#fetchdataerror","                     * @param {QueueItem} queueItem           The queue item for which the request failed","                     * @param {http.IncomingMessage} response The [http.IncomingMessage]{@link https://nodejs.org/api/http.html#http_class_http_incomingmessage} for the request's response","                     */","                    crawler.emit(\"fetchdataerror\", queueItem, response);","                }","            } else {","                chunk.copy(responseBuffer, responseLengthReceived, 0, chunk.length);","            }","","            responseLengthReceived += chunk.length;","        }","    });","","","    return crawler;","};","","/**"," * The main crawler runloop. Fires at the interval specified in the crawler"," * configuration, when the crawl is running. May be manually fired. This"," * function initiates fetching of a queue item if there are enough workers to do"," * so and there are unfetched items in the queue."," * @fires Crawler#robotstxterror"," * @fires Crawler#fetchdisallowed"," * @fires Crawler#complete"," * @return {Crawler} Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.crawl = function() {","    var crawler = this;","","    if (crawler._openRequests.length >= crawler.maxConcurrency ||","        crawler.fetchingRobotsTxt) {","        return crawler;","    }","","    crawler.queue.oldestUnfetchedItem(function(error, queueItem) {","        if (error) {","            // Do nothing","        } else if (queueItem) {","","            var url = uri(queueItem.url).normalize();","            var host = uri({","                protocol: url.protocol(),","                hostname: url.hostname(),","                port: url.port()","            }).href();","","            if (crawler.respectRobotsTxt && crawler._touchedHosts.indexOf(host) === -1) {","                crawler._touchedHosts.push(host);","                crawler.fetchingRobotsTxt = true;","","                var robotsTxtUrl = uri(host).pathname(\"/robots.txt\").href();","","                crawler.getRobotsTxt(robotsTxtUrl, function(error, robotsTxtUrl, robotsTxtBody) {","                    if (error) {","                        /**","                         * Fired when an error was encountered while retrieving a robots.txt file","                         * @event Crawler#robotstxterror","                         * @param {Error} error The error returned from {@link Crawler#getRobotsTxt}","                         */","                        crawler.emit(\"robotstxterror\", error);","                    } else {","                        crawler._robotsTxts.push(robotsTxtParser(robotsTxtUrl, robotsTxtBody));","                    }","","                    crawler.fetchingRobotsTxt = false;","","                    // It could be that the first URL we queued for any particular","                    // host is in fact disallowed, so we double check once we've","                    // fetched the robots.txt","                    if (crawler.urlIsAllowed(queueItem.url)) {","                        crawler.fetchQueueItem(queueItem);","                    } else {","                        crawler.queue.update(queueItem.id, {","                            fetched: true,","                            status: \"disallowed\"","                        }, function(error, queueItem) {","                            crawler.emit(\"fetchdisallowed\", queueItem);","                        });","                    }","                });","            } else {","","                crawler.fetchQueueItem(queueItem);","            }","        } else if (!crawler._openRequests.length && !crawler._openListeners) {","","            crawler.queue.countItems({ fetched: true }, function(err, completeCount) {","                if (err) {","                    throw err;","                }","","                crawler.queue.getLength(function(err, length) {","                    if (err) {","                        throw err;","                    }","","                    if (completeCount === length) {","                        /**","                         * Fired when the crawl has completed - all resources in the queue have been dealt with","                         * @event Crawler#complete","                         */","                        crawler.emit(\"complete\");","                        crawler.stop();","                    }","                });","            });","        }","    });","","    return crawler;","};","","/**"," * Stops the crawler by terminating the crawl runloop"," * @param  {Boolean} [abortRequestsInFlight=false] If true, will terminate all in-flight requests immediately"," * @return {Crawler}                               Returns the crawler instance to enable chained API calls"," */","Crawler.prototype.stop = function(abortRequestsInFlight) {","    var crawler = this;","    clearInterval(crawler.crawlIntervalID);","    crawler.running = false;","","    // If we've been asked to terminate the existing requests, do that now.","    if (abortRequestsInFlight) {","        crawler._openRequests.forEach(function(request) {","            request.abort();","        });","    }","","    return crawler;","};","","/**"," * Holds the crawler in a 'running' state, preventing the `complete` event from"," * firing until the returned callback has been executed, or a predetermined"," * timeout (as specified by `crawler.listenerTTL`) has elapsed."," * @return {Function} A callback function that will allow the crawler to continue once called"," */","Crawler.prototype.wait = function() {","    var crawler = this,","        cleared = false,","        timeout =","            setTimeout(function() {","                if (cleared) {","                    return;","                }","                cleared = true;","                crawler._openListeners--;","            }, crawler.listenerTTL);","","    crawler._openListeners++;","","    return function() {","        if (cleared) {","            return;","        }","        cleared = true;","        crawler._openListeners--;","        clearTimeout(timeout);","    };","};","","/**"," * Adds a function to an array of functions, where each one is evaluated against"," * every request after the headers of the resource represented by the queue item"," * have been fetched. If any of the functions return false, the resource data"," * will not be downloaded."," * @param  {Function} callback Function to be called when the headers of the resource represented by the queue item have been downloaded"," * @return {Number}            The index of the download condition in the download conditions array. This can later be used to remove the download condition."," */","Crawler.prototype.addDownloadCondition = function(callback) {","    if (!(callback instanceof Function)) {","        throw new Error(\"Download condition must be a function\");","    }","","    this._downloadConditions.push(callback);","    return this._downloadConditions.length - 1;","};","","/**"," * Removes a download condition from the download conditions array."," * @param  {Number} index The index of the download condition in the download conditions array. This was returned from {@link Crawler#addDownloadCondition}"," * @return {Boolean}      If the removal was successful, the method will return true. Otherwise, it will throw an error."," */","Crawler.prototype.removeDownloadCondition = function(index) {","    var crawler = this;","","    if (index instanceof Function) {","        var itemIndex = crawler._downloadConditions.indexOf(index);","        return Boolean(crawler._downloadConditions.splice(itemIndex, 1));","    } else if (typeof index === \"number\") {","        return Boolean(crawler._downloadConditions.splice(index, 1));","    }","","    throw new Error(\"Unable to find indexed download condition\");","};","","/**"," * Adds a function to an array of functions, where each one is evaluated against"," * every queue item that the crawler attempts to queue. If any of these"," * functions returns false, the queue item will not be queued."," * @param  {Function} callback Function to be called after resource discovery that's able to prevent queueing of resource"," * @return {Number}            The index of the fetch condition in the fetch conditions array. This can later be used to remove the fetch condition."," */","Crawler.prototype.addFetchCondition = function(callback) {","    if (!(callback instanceof Function)) {","        throw new Error(\"Fetch condition must be a function\");","    }","","    this._fetchConditions.push(callback);","    return this._fetchConditions.length - 1;","};","","/**"," * Removes a fetch condition from the fetch conditions array."," * @param  {Number} index The index of the fetch condition in the fetch conditions array. This was returned from {@link Crawler#addFetchCondition}"," * @return {Boolean}      If the removal was successful, the method will return true. Otherwise, it will throw an error."," */","Crawler.prototype.removeFetchCondition = function(index) {","    var crawler = this;","","    if (index instanceof Function) {","        var itemIndex = crawler._downloadConditions.indexOf(index);","        return Boolean(crawler._fetchConditions.splice(itemIndex, 1));","    } else if (typeof index === \"number\") {","        return Boolean(crawler._fetchConditions.splice(index, 1));","    }","","    throw new Error(\"Unable to find indexed fetch condition\");","};","","module.exports = Crawler;",""],"l":{"7":1,"11":1,"21":1,"29":1,"32":0,"33":0,"36":0,"37":0,"40":0,"41":0,"44":0,"46":0,"53":0,"60":0,"68":0,"75":0,"81":0,"87":0,"94":0,"103":0,"112":0,"120":0,"128":0,"138":0,"146":0,"153":0,"162":0,"169":0,"180":0,"186":0,"193":0,"200":0,"207":0,"214":0,"220":0,"227":0,"234":0,"240":0,"246":0,"253":0,"260":0,"266":0,"276":0,"284":0,"296":0,"302":0,"309":0,"316":0,"334":0,"335":0,"336":0,"345":0,"346":0,"349":0,"350":0,"359":0,"366":0,"375":0,"382":0,"389":0,"396":0,"399":0,"410":0,"411":0,"419":1,"428":1,"429":0,"431":0,"432":0,"435":0,"437":0,"438":0,"439":0,"441":0,"442":0,"443":0,"446":0,"447":0,"450":0,"459":0,"462":0,"471":1,"472":0,"474":0,"479":0,"480":0,"481":0,"482":0,"488":0,"496":1,"497":0,"499":0,"502":0,"507":0,"508":0,"509":0,"510":0,"513":0,"518":0,"531":0,"532":0,"535":0,"536":0,"540":0,"541":0,"546":0,"547":0,"552":0,"553":0,"556":0,"557":0,"561":0,"562":0,"565":0,"566":0,"570":0,"571":0,"572":0,"573":0,"578":0,"587":1,"588":0,"591":0,"592":0,"595":0,"596":0,"597":0,"600":0,"603":0,"604":0,"605":0,"611":0,"612":0,"613":0,"614":0,"616":0,"617":0,"621":0,"622":0,"623":0,"626":0,"629":0,"632":0,"633":0,"635":0,"636":0,"638":0,"641":0,"644":0,"646":0,"650":0,"651":0,"653":0,"654":0,"657":0,"659":0,"660":0,"664":0,"666":0,"667":0,"668":0,"671":0,"672":0,"673":0,"677":0,"685":1,"686":0,"689":0,"690":0,"693":0,"694":0,"699":0,"702":0,"703":0,"712":1,"713":0,"715":0,"716":0,"717":0,"720":0,"730":1,"731":0,"734":0,"735":0,"742":0,"743":0,"747":0,"748":0,"751":0,"752":0,"755":0,"756":0,"758":0,"759":0,"763":0,"767":0,"791":1,"792":0,"817":1,"818":0,"820":0,"821":0,"824":0,"827":0,"832":0,"833":0,"839":0,"843":0,"844":0,"848":0,"849":0,"853":0,"854":0,"857":0,"858":0,"861":0,"870":1,"871":0,"873":0,"874":0,"877":0,"878":0,"881":0,"882":0,"884":0,"885":0,"890":0,"891":0,"893":0,"894":0,"896":0,"899":0,"909":1,"910":0,"913":0,"914":0,"917":1,"921":0,"922":0,"926":0,"928":0,"929":0,"933":0,"934":0,"936":0,"941":1,"944":0,"945":0,"949":0,"950":0,"951":0,"955":0,"960":0,"987":1,"988":0,"990":0,"991":0,"999":0,"1001":0,"1002":0,"1003":0,"1007":0,"1026":1,"1027":0,"1031":0,"1032":0,"1036":0,"1042":0,"1043":0,"1046":0,"1053":0,"1054":0,"1057":0,"1058":0,"1059":0,"1060":0,"1062":0,"1065":0,"1068":0,"1075":0,"1076":0,"1079":0,"1086":0,"1087":0,"1090":0,"1091":0,"1092":0,"1099":0,"1108":0,"1117":0,"1121":0,"1134":1,"1135":0,"1137":0,"1140":0,"1141":0,"1144":0,"1147":0,"1148":0,"1151":0,"1152":0,"1153":0,"1156":0,"1159":0,"1160":0,"1163":0,"1166":0,"1170":0,"1171":0,"1172":0,"1177":0,"1178":0,"1179":0,"1182":0,"1184":0,"1188":0,"1192":0,"1193":0,"1202":0,"1203":0,"1207":0,"1211":0,"1212":0,"1215":0,"1217":0,"1221":0,"1228":0,"1229":0,"1238":0,"1248":0,"1251":0,"1263":1,"1264":0,"1266":0,"1269":0,"1271":0,"1289":1,"1290":0,"1300":0,"1301":0,"1302":0,"1304":0,"1314":0,"1315":0,"1319":0,"1320":0,"1321":0,"1331":0,"1341":0,"1344":0,"1346":0,"1349":0,"1350":0,"1354":0,"1357":0,"1358":0,"1362":0,"1364":0,"1365":0,"1366":0,"1367":0,"1369":0,"1372":0,"1376":0,"1383":0,"1384":0,"1387":0,"1388":0,"1392":0,"1395":0,"1403":0,"1407":0,"1410":0,"1411":0,"1415":0,"1418":0,"1419":0,"1420":0,"1422":0,"1426":0,"1429":0,"1433":0,"1439":0,"1441":0,"1443":0,"1444":0,"1454":0,"1457":0,"1459":0,"1462":0,"1465":0,"1467":0,"1473":0,"1482":0,"1484":0,"1485":0,"1488":0,"1489":0,"1492":0,"1493":0,"1496":0,"1501":0,"1503":0,"1519":0,"1520":0,"1523":0,"1526":0,"1532":0,"1542":0,"1543":0,"1546":0,"1549":0,"1555":1,"1556":0,"1561":0,"1564":0,"1565":0,"1568":0,"1569":0,"1579":0,"1583":0,"1584":0,"1590":1,"1591":0,"1592":0,"1595":0,"1596":0,"1597":0,"1599":0,"1607":0,"1609":0,"1612":0,"1616":0,"1617":0,"1624":0,"1625":0,"1626":0,"1634":0,"1635":0,"1637":0,"1638":0,"1642":0,"1647":1,"1648":0,"1649":0,"1652":0,"1658":0,"1662":0,"1663":0,"1664":0,"1665":0,"1670":0,"1678":0,"1681":0,"1684":0,"1689":0,"1702":1,"1703":0,"1705":0,"1707":0,"1710":0,"1711":0,"1713":0,"1715":0,"1716":0,"1722":0,"1723":0,"1724":0,"1726":0,"1728":0,"1729":0,"1735":0,"1737":0,"1740":0,"1745":0,"1746":0,"1748":0,"1752":0,"1758":0,"1760":0,"1762":0,"1763":0,"1764":0,"1767":0,"1768":0,"1769":0,"1772":0,"1777":0,"1778":0,"1785":0,"1793":1,"1794":0,"1795":0,"1796":0,"1799":0,"1800":0,"1801":0,"1805":0,"1814":1,"1815":0,"1819":0,"1820":0,"1822":0,"1823":0,"1826":0,"1828":0,"1829":0,"1830":0,"1832":0,"1833":0,"1834":0,"1846":1,"1847":0,"1848":0,"1851":0,"1852":0,"1860":1,"1861":0,"1863":0,"1864":0,"1865":0,"1866":0,"1867":0,"1870":0,"1880":1,"1881":0,"1882":0,"1885":0,"1886":0,"1894":1,"1895":0,"1897":0,"1898":0,"1899":0,"1900":0,"1901":0,"1904":0,"1907":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/queue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"compare","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}}},"2":{"name":"deepAssign","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":17},"end":{"line":60,"column":28}}},"4":{"name":"(anonymous_4)","line":124,"loc":{"start":{"line":124,"column":27},"end":{"line":124,"column":64}}},"5":{"name":"addToQueue","line":127,"loc":{"start":{"line":127,"column":4},"end":{"line":127,"column":26}}},"6":{"name":"(anonymous_6)","line":135,"loc":{"start":{"line":135,"column":32},"end":{"line":135,"column":54}}},"7":{"name":"(anonymous_7)","line":167,"loc":{"start":{"line":167,"column":30},"end":{"line":167,"column":54}}},"8":{"name":"(anonymous_8)","line":187,"loc":{"start":{"line":187,"column":27},"end":{"line":187,"column":53}}},"9":{"name":"(anonymous_9)","line":190,"loc":{"start":{"line":190,"column":20},"end":{"line":190,"column":44}}},"10":{"name":"(anonymous_10)","line":214,"loc":{"start":{"line":214,"column":30},"end":{"line":214,"column":63}}},"11":{"name":"(anonymous_11)","line":244,"loc":{"start":{"line":244,"column":43},"end":{"line":244,"column":62}}},"12":{"name":"(anonymous_12)","line":275,"loc":{"start":{"line":275,"column":27},"end":{"line":275,"column":61}}},"13":{"name":"(anonymous_13)","line":283,"loc":{"start":{"line":283,"column":18},"end":{"line":283,"column":33}}},"14":{"name":"(anonymous_14)","line":306,"loc":{"start":{"line":306,"column":27},"end":{"line":306,"column":61}}},"15":{"name":"(anonymous_15)","line":314,"loc":{"start":{"line":314,"column":18},"end":{"line":314,"column":33}}},"16":{"name":"(anonymous_16)","line":337,"loc":{"start":{"line":337,"column":27},"end":{"line":337,"column":61}}},"17":{"name":"(anonymous_17)","line":346,"loc":{"start":{"line":346,"column":18},"end":{"line":346,"column":33}}},"18":{"name":"(anonymous_18)","line":368,"loc":{"start":{"line":368,"column":34},"end":{"line":368,"column":65}}},"19":{"name":"(anonymous_19)","line":369,"loc":{"start":{"line":369,"column":33},"end":{"line":369,"column":56}}},"20":{"name":"(anonymous_20)","line":390,"loc":{"start":{"line":390,"column":35},"end":{"line":390,"column":66}}},"21":{"name":"(anonymous_21)","line":391,"loc":{"start":{"line":391,"column":28},"end":{"line":391,"column":48}}},"22":{"name":"(anonymous_22)","line":409,"loc":{"start":{"line":409,"column":33},"end":{"line":409,"column":52}}},"23":{"name":"(anonymous_23)","line":425,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":59}}},"24":{"name":"(anonymous_24)","line":429,"loc":{"start":{"line":429,"column":18},"end":{"line":429,"column":33}}},"25":{"name":"(anonymous_25)","line":435,"loc":{"start":{"line":435,"column":59},"end":{"line":435,"column":73}}},"26":{"name":"(anonymous_26)","line":451,"loc":{"start":{"line":451,"column":31},"end":{"line":451,"column":60}}},"27":{"name":"(anonymous_27)","line":455,"loc":{"start":{"line":455,"column":26},"end":{"line":455,"column":50}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":16,"column":0},"end":{"line":35,"column":1}},"3":{"start":{"line":17,"column":4},"end":{"line":32,"column":5}},"4":{"start":{"line":18,"column":8},"end":{"line":31,"column":9}},"5":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"6":{"start":{"line":21,"column":16},"end":{"line":21,"column":29}},"7":{"start":{"line":24,"column":12},"end":{"line":30,"column":13}},"8":{"start":{"line":25,"column":16},"end":{"line":27,"column":17}},"9":{"start":{"line":26,"column":20},"end":{"line":26,"column":33}},"10":{"start":{"line":28,"column":19},"end":{"line":30,"column":13}},"11":{"start":{"line":29,"column":16},"end":{"line":29,"column":29}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"13":{"start":{"line":42,"column":0},"end":{"line":54,"column":1}},"14":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"15":{"start":{"line":44,"column":8},"end":{"line":50,"column":9}},"16":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"17":{"start":{"line":46,"column":16},"end":{"line":46,"column":53}},"18":{"start":{"line":48,"column":16},"end":{"line":48,"column":42}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"20":{"start":{"line":60,"column":0},"end":{"line":107,"column":2}},"21":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"22":{"start":{"line":70,"column":4},"end":{"line":74,"column":7}},"23":{"start":{"line":83,"column":4},"end":{"line":87,"column":7}},"24":{"start":{"line":96,"column":4},"end":{"line":106,"column":7}},"25":{"start":{"line":109,"column":0},"end":{"line":109,"column":33}},"26":{"start":{"line":124,"column":0},"end":{"line":152,"column":2}},"27":{"start":{"line":125,"column":4},"end":{"line":125,"column":21}},"28":{"start":{"line":127,"column":4},"end":{"line":133,"column":5}},"29":{"start":{"line":128,"column":8},"end":{"line":128,"column":47}},"30":{"start":{"line":129,"column":8},"end":{"line":129,"column":36}},"31":{"start":{"line":130,"column":8},"end":{"line":130,"column":36}},"32":{"start":{"line":131,"column":8},"end":{"line":131,"column":30}},"33":{"start":{"line":132,"column":8},"end":{"line":132,"column":34}},"34":{"start":{"line":135,"column":4},"end":{"line":151,"column":7}},"35":{"start":{"line":136,"column":8},"end":{"line":150,"column":9}},"36":{"start":{"line":137,"column":12},"end":{"line":137,"column":26}},"37":{"start":{"line":138,"column":15},"end":{"line":150,"column":9}},"38":{"start":{"line":139,"column":12},"end":{"line":139,"column":25}},"39":{"start":{"line":140,"column":15},"end":{"line":150,"column":9}},"40":{"start":{"line":141,"column":12},"end":{"line":145,"column":13}},"41":{"start":{"line":142,"column":16},"end":{"line":142,"column":129}},"42":{"start":{"line":144,"column":16},"end":{"line":144,"column":29}},"43":{"start":{"line":147,"column":12},"end":{"line":147,"column":71}},"44":{"start":{"line":148,"column":12},"end":{"line":148,"column":37}},"45":{"start":{"line":149,"column":12},"end":{"line":149,"column":28}},"46":{"start":{"line":167,"column":0},"end":{"line":173,"column":2}},"47":{"start":{"line":168,"column":4},"end":{"line":172,"column":5}},"48":{"start":{"line":169,"column":8},"end":{"line":169,"column":26}},"49":{"start":{"line":171,"column":8},"end":{"line":171,"column":26}},"50":{"start":{"line":187,"column":0},"end":{"line":199,"column":2}},"51":{"start":{"line":188,"column":4},"end":{"line":188,"column":21}},"52":{"start":{"line":190,"column":4},"end":{"line":198,"column":7}},"53":{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},"54":{"start":{"line":192,"column":12},"end":{"line":192,"column":28}},"55":{"start":{"line":193,"column":15},"end":{"line":197,"column":9}},"56":{"start":{"line":194,"column":12},"end":{"line":194,"column":82}},"57":{"start":{"line":196,"column":12},"end":{"line":196,"column":41}},"58":{"start":{"line":214,"column":0},"end":{"line":231,"column":2}},"59":{"start":{"line":215,"column":4},"end":{"line":216,"column":18}},"60":{"start":{"line":218,"column":4},"end":{"line":223,"column":5}},"61":{"start":{"line":219,"column":8},"end":{"line":222,"column":9}},"62":{"start":{"line":220,"column":12},"end":{"line":220,"column":33}},"63":{"start":{"line":221,"column":12},"end":{"line":221,"column":18}},"64":{"start":{"line":225,"column":4},"end":{"line":230,"column":5}},"65":{"start":{"line":226,"column":8},"end":{"line":226,"column":64}},"66":{"start":{"line":228,"column":8},"end":{"line":228,"column":39}},"67":{"start":{"line":229,"column":8},"end":{"line":229,"column":34}},"68":{"start":{"line":244,"column":0},"end":{"line":259,"column":2}},"69":{"start":{"line":245,"column":4},"end":{"line":245,"column":21}},"70":{"start":{"line":247,"column":4},"end":{"line":253,"column":5}},"71":{"start":{"line":248,"column":8},"end":{"line":252,"column":9}},"72":{"start":{"line":249,"column":12},"end":{"line":249,"column":44}},"73":{"start":{"line":250,"column":12},"end":{"line":250,"column":37}},"74":{"start":{"line":251,"column":12},"end":{"line":251,"column":19}},"75":{"start":{"line":258,"column":4},"end":{"line":258,"column":25}},"76":{"start":{"line":275,"column":0},"end":{"line":290,"column":2}},"77":{"start":{"line":276,"column":4},"end":{"line":277,"column":21}},"78":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"79":{"start":{"line":280,"column":8},"end":{"line":280,"column":56}},"80":{"start":{"line":283,"column":4},"end":{"line":287,"column":7}},"81":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"82":{"start":{"line":285,"column":12},"end":{"line":285,"column":52}},"83":{"start":{"line":289,"column":4},"end":{"line":289,"column":28}},"84":{"start":{"line":306,"column":0},"end":{"line":321,"column":2}},"85":{"start":{"line":307,"column":4},"end":{"line":308,"column":21}},"86":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"87":{"start":{"line":311,"column":8},"end":{"line":311,"column":56}},"88":{"start":{"line":314,"column":4},"end":{"line":318,"column":7}},"89":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"90":{"start":{"line":316,"column":12},"end":{"line":316,"column":52}},"91":{"start":{"line":320,"column":4},"end":{"line":320,"column":55}},"92":{"start":{"line":337,"column":0},"end":{"line":354,"column":2}},"93":{"start":{"line":338,"column":4},"end":{"line":340,"column":21}},"94":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"95":{"start":{"line":343,"column":8},"end":{"line":343,"column":56}},"96":{"start":{"line":346,"column":4},"end":{"line":351,"column":7}},"97":{"start":{"line":347,"column":8},"end":{"line":350,"column":9}},"98":{"start":{"line":348,"column":12},"end":{"line":348,"column":49}},"99":{"start":{"line":349,"column":12},"end":{"line":349,"column":20}},"100":{"start":{"line":353,"column":4},"end":{"line":353,"column":32}},"101":{"start":{"line":368,"column":0},"end":{"line":376,"column":2}},"102":{"start":{"line":369,"column":4},"end":{"line":375,"column":7}},"103":{"start":{"line":370,"column":8},"end":{"line":374,"column":9}},"104":{"start":{"line":371,"column":12},"end":{"line":371,"column":28}},"105":{"start":{"line":373,"column":12},"end":{"line":373,"column":41}},"106":{"start":{"line":390,"column":0},"end":{"line":396,"column":2}},"107":{"start":{"line":391,"column":4},"end":{"line":393,"column":7}},"108":{"start":{"line":392,"column":8},"end":{"line":392,"column":46}},"109":{"start":{"line":395,"column":4},"end":{"line":395,"column":26}},"110":{"start":{"line":409,"column":0},"end":{"line":411,"column":2}},"111":{"start":{"line":410,"column":4},"end":{"line":410,"column":32}},"112":{"start":{"line":425,"column":0},"end":{"line":438,"column":2}},"113":{"start":{"line":426,"column":4},"end":{"line":426,"column":21}},"114":{"start":{"line":429,"column":4},"end":{"line":433,"column":7}},"115":{"start":{"line":430,"column":8},"end":{"line":432,"column":9}},"116":{"start":{"line":431,"column":12},"end":{"line":431,"column":35}},"117":{"start":{"line":435,"column":4},"end":{"line":437,"column":7}},"118":{"start":{"line":436,"column":8},"end":{"line":436,"column":22}},"119":{"start":{"line":451,"column":0},"end":{"line":486,"column":2}},"120":{"start":{"line":452,"column":4},"end":{"line":453,"column":28}},"121":{"start":{"line":455,"column":4},"end":{"line":485,"column":7}},"122":{"start":{"line":456,"column":8},"end":{"line":458,"column":9}},"123":{"start":{"line":457,"column":12},"end":{"line":457,"column":33}},"124":{"start":{"line":460,"column":8},"end":{"line":462,"column":9}},"125":{"start":{"line":461,"column":12},"end":{"line":461,"column":89}},"126":{"start":{"line":464,"column":8},"end":{"line":468,"column":9}},"127":{"start":{"line":465,"column":12},"end":{"line":465,"column":67}},"128":{"start":{"line":467,"column":12},"end":{"line":467,"column":35}},"129":{"start":{"line":470,"column":8},"end":{"line":470,"column":64}},"130":{"start":{"line":471,"column":8},"end":{"line":471,"column":30}},"131":{"start":{"line":473,"column":8},"end":{"line":482,"column":9}},"132":{"start":{"line":474,"column":12},"end":{"line":474,"column":46}},"133":{"start":{"line":475,"column":12},"end":{"line":475,"column":34}},"134":{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},"135":{"start":{"line":478,"column":16},"end":{"line":478,"column":87}},"136":{"start":{"line":481,"column":12},"end":{"line":481,"column":51}},"137":{"start":{"line":484,"column":8},"end":{"line":484,"column":30}},"138":{"start":{"line":488,"column":0},"end":{"line":488,"column":28}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":19}},{"start":{"line":28,"column":19},"end":{"line":28,"column":19}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"8":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":47}},{"start":{"line":45,"column":51},"end":{"line":45,"column":82}}]},"9":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":15},"end":{"line":138,"column":15}},{"start":{"line":138,"column":15},"end":{"line":138,"column":15}}]},"11":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":15},"end":{"line":140,"column":15}},{"start":{"line":140,"column":15},"end":{"line":140,"column":15}}]},"12":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"13":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"14":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"15":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":15},"end":{"line":193,"column":15}},{"start":{"line":193,"column":15},"end":{"line":193,"column":15}}]},"16":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"17":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"18":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"19":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"20":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":8}},{"start":{"line":284,"column":8},"end":{"line":284,"column":8}}]},"21":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":24}},{"start":{"line":284,"column":28},"end":{"line":284,"column":67}}]},"22":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"23":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":8},"end":{"line":315,"column":8}},{"start":{"line":315,"column":8},"end":{"line":315,"column":8}}]},"24":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":12},"end":{"line":315,"column":24}},{"start":{"line":315,"column":28},"end":{"line":315,"column":67}}]},"25":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":42},"end":{"line":320,"column":43}},{"start":{"line":320,"column":46},"end":{"line":320,"column":53}}]},"26":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":4},"end":{"line":342,"column":4}},{"start":{"line":342,"column":4},"end":{"line":342,"column":4}}]},"27":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":8}},{"start":{"line":347,"column":8},"end":{"line":347,"column":8}}]},"28":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":12},"end":{"line":347,"column":24}},{"start":{"line":347,"column":28},"end":{"line":347,"column":74}}]},"29":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":8},"end":{"line":370,"column":8}},{"start":{"line":370,"column":8},"end":{"line":370,"column":8}}]},"30":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":8},"end":{"line":430,"column":8}},{"start":{"line":430,"column":8},"end":{"line":430,"column":8}}]},"31":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":8},"end":{"line":456,"column":8}},{"start":{"line":456,"column":8},"end":{"line":456,"column":8}}]},"32":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":8},"end":{"line":460,"column":8}},{"start":{"line":460,"column":8},"end":{"line":460,"column":8}}]},"33":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":12},"end":{"line":477,"column":12}},{"start":{"line":477,"column":12},"end":{"line":477,"column":12}}]}},"code":["/**"," * @file simplecrawler's queue implementation. This also serves as a reference"," * for the queue interface, that can be implemented by third parties as well"," */","","var fs   = require(\"fs\"),","    util = require(\"util\");","","/**"," * Recursive function that compares immutable properties on two objects."," * @private"," * @param {Object} a Source object that will be compared against"," * @param {Object} b Comparison object. The functions determines if all of this object's properties are the same on the first object."," * @return {Boolean} Returns true if all of the properties on `b` matched a property on `a`. If not, it returns false."," */","function compare(a, b) {","    for (var key in a) {","        if (a.hasOwnProperty(key)) {","","            if (typeof a[key] !== typeof b[key]) {","                return false;","            }","","            if (typeof a[key] === \"object\") {","                if (!compare(a[key], b[key])) {","                    return false;","                }","            } else if (a[key] !== b[key]) {","                return false;","            }","        }","    }","","    return true;","}","","/**"," * Recursive function that takes two objects and updates the properties on the"," * first object based on the ones in the second. Basically, it's a recursive"," * version of Object.assign."," */","function deepAssign(object, source) {","    for (var key in source) {","        if (source.hasOwnProperty(key)) {","            if (typeof object[key] === \"object\" && typeof source[key] === \"object\") {","                deepAssign(object[key], source[key]);","            } else {","                object[key] = source[key];","            }","        }","    }","","    return object;","}","","/**"," * Creates a new queue"," * @class"," */","var FetchQueue = function() {","    Array.call(this);","","    /**","     * Speeds up {@link FetchQueue.oldestUnfetchedItem} by storing the index at","     * which the latest oldest unfetched queue item was found.","     * @name FetchQueue._oldestUnfetchedIndex","     * @private","     * @type {Number}","     */","    Object.defineProperty(this, \"_oldestUnfetchedIndex\", {","        enumerable: false,","        writable: true,","        value: 0","    });","","    /**","     * Serves as a cache for what URL's have been fetched. Keys are URL's,","     * values are booleans.","     * @name FetchQueue._scanIndex","     * @private","     * @type {Object}","     */","    Object.defineProperty(this, \"_scanIndex\", {","        enumerable: false,","        writable: true,","        value: {}","    });","","    /**","     * Controls what properties can be operated on with the","     * {@link FetchQueue#min}, {@link FetchQueue#avg} and {@link FetchQueue#max}","     * methods.","     * @name FetchQueue._allowedStatistics","     * @type {Array}","     */","    Object.defineProperty(this, \"_allowedStatistics\", {","        enumerable: false,","        writable: true,","        value: [","            \"actualDataSize\",","            \"contentLength\",","            \"downloadTime\",","            \"requestLatency\",","            \"requestTime\"","        ]","    });","};","","util.inherits(FetchQueue, Array);","","/**"," * Called when {@link FetchQueue#add} returns a result"," * @callback FetchQueue~addCallback"," * @param {Error} [error]         If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {QueueItem} [queueItem] The queue item that was added to the queue. It's status property will have changed to `\"queued\"`."," */","","/**"," * Adds an item to the queue"," * @param {QueueItem} queueItem             Queue item that is to be added to the queue"," * @param {Boolean} [force=false]           If true, the queue item will be added regardless of whether it already exists in the queue"," * @param {FetchQueue~addCallback} callback"," */","FetchQueue.prototype.add = function(queueItem, force, callback) {","    var queue = this;","","    function addToQueue() {","        queue._scanIndex[queueItem.url] = true;","        queueItem.id = queue.length;","        queueItem.status = \"queued\";","        queue.push(queueItem);","        callback(null, queueItem);","    }","","    queue.exists(queueItem.url, function(err, exists) {","        if (err) {","            callback(err);","        } else if (!exists) {","            addToQueue();","        } else if (force) {","            if (queue.indexOf(queueItem) > -1) {","                callback(new Error(\"Can't add a queueItem instance twice. You may create a new one from the same URL however.\"));","            } else {","                addToQueue();","            }","        } else {","            var error = new Error(\"Resource already exists in queue!\");","            error.code = \"DUPLICATE\";","            callback(error);","        }","    });","};","","/**"," * Called when {@link FetchQueue#exists} returns a result"," * @callback FetchQueue~existsCallback"," * @param {Error} [error]  If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [count] The number of occurences in the queue of the provided URL."," */","","/**"," * Checks if a URL already exists in the queue. Returns the number of occurences"," * of that URL."," * @param {String} url                         URL to check the existence of in the queue"," * @param {FetchQueue~existsCallback} callback"," */","FetchQueue.prototype.exists = function(url, callback) {","    if (this._scanIndex[url]) {","        callback(null, 1);","    } else {","        callback(null, 0);","    }","};","","/**"," * Called when {@link FetchQueue#get} returns a result"," * @callback FetchQueue~getCallback"," * @param {Error} [error]         If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {QueueItem} [queueItem] The queue item found at that index in the queue."," */","","/**"," * Get a queue item by index"," * @param {Number} index                    The index of the queue item in the queue"," * @param {FetchQueue~getCallback} callback"," */","FetchQueue.prototype.get = function(index, callback) {","    var queue = this;","","    queue.getLength(function(error, length) {","        if (error) {","            callback(error);","        } else if (index >= length) {","            callback(new RangeError(\"Index was greater than the queue's length\"));","        } else {","            callback(null, queue[index]);","        }","    });","};","","/**"," * Called when {@link FetchQueue#update} returns a result"," * @callback FetchQueue~updateCallback"," * @param {Error} [error]         If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {QueueItem} [queueItem] The updated queue item"," */","","/**"," * Updates a queue item in the queue."," * @param {Number} id                          ID of the queue item that is to be updated"," * @param {Object} updates                     Object that will be deeply assigned (as in `Object.assign`) to the queue item. That means that nested objects will also be resursively assigned."," * @param {FetchQueue~updateCallback} callback"," */","FetchQueue.prototype.update = function (id, updates, callback) {","    var queue = this,","        queueItem;","","    for (var i = 0; i < queue.length; i++) {","        if (queue[i].id === id) {","            queueItem = queue[i];","            break;","        }","    }","","    if (!queueItem) {","        callback(new Error(\"No queueItem found with that URL\"));","    } else {","        deepAssign(queueItem, updates);","        callback(null, queueItem);","    }","};","","/**"," * Called when {@link FetchQueue#oldestUnfetchedItem} returns a result"," * @callback FetchQueue~oldestUnfetchedItemCallback"," * @param {Error} [error]         If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {QueueItem} [queueItem] If there are unfetched queue items left, this will be the oldest one found. If not, this will be `null`."," */","","/**"," * Gets the first unfetched item in the queue"," * @param {FetchQueue~oldestUnfetchedItemCallback} callback"," */","FetchQueue.prototype.oldestUnfetchedItem = function(callback) {","    var queue = this;","","    for (var i = queue._oldestUnfetchedIndex; i < queue.length; i++) {","        if (queue[i].status === \"queued\") {","            queue._oldestUnfetchedIndex = i;","            callback(null, queue[i]);","            return;","        }","    }","","    // When no unfetched queue items remain, we previously called back with an","    // error, but since it's not really an error condition, we opted to just","    // call back with (null, null) instead","    callback(null, null);","};","","/**"," * Called when {@link FetchQueue#max} returns a result"," * @callback FetchQueue~maxCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [max]  The maximum value of the property that was initially provided"," */","","/**"," * Gets the maximum value of a stateData property from all the items in the"," * queue. This means you can eg. get the maximum request time, download size"," * etc."," * @param {String} statisticName            Can be any of the strings in {@link FetchQueue._allowedStatistics}"," * @param {FetchQueue~maxCallback} callback"," */","FetchQueue.prototype.max = function(statisticName, callback) {","    var maximum = 0,","        queue = this;","","    if (queue._allowedStatistics.indexOf(statisticName) === -1) {","        return callback(new Error(\"Invalid statistic\"));","    }","","    queue.forEach(function(item) {","        if (item.fetched && item.stateData[statisticName] > maximum) {","            maximum = item.stateData[statisticName];","        }","    });","","    callback(null, maximum);","};","","/**"," * Called when {@link FetchQueue#min} returns a result"," * @callback FetchQueue~minCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [min]  The minimum value of the property that was initially provided"," */","","/**"," * Gets the minimum value of a stateData property from all the items in the"," * queue. This means you can eg. get the minimum request time, download size"," * etc."," * @param {String} statisticName            Can be any of the strings in {@link FetchQueue._allowedStatistics}"," * @param {FetchQueue~minCallback} callback"," */","FetchQueue.prototype.min = function(statisticName, callback) {","    var minimum = Infinity,","        queue = this;","","    if (queue._allowedStatistics.indexOf(statisticName) === -1) {","        return callback(new Error(\"Invalid statistic\"));","    }","","    queue.forEach(function(item) {","        if (item.fetched && item.stateData[statisticName] < minimum) {","            minimum = item.stateData[statisticName];","        }","    });","","    callback(null, minimum === Infinity ? 0 : minimum);","};","","/**"," * Called when {@link FetchQueue#avg} returns a result"," * @callback FetchQueue~avgCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [avg]  The average value of the property that was initially provided"," */","","/**"," * Gets the average value of a stateData property from all the items in the"," * queue. This means you can eg. get the average request time, download size"," * etc."," * @param {String} statisticName            Can be any of the strings in {@link FetchQueue._allowedStatistics}"," * @param {FetchQueue~avgCallback} callback"," */","FetchQueue.prototype.avg = function(statisticName, callback) {","    var sum = 0,","        count = 0,","        queue = this;","","    if (queue._allowedStatistics.indexOf(statisticName) === -1) {","        return callback(new Error(\"Invalid statistic\"));","    }","","    queue.forEach(function(item) {","        if (item.fetched && Number.isFinite(item.stateData[statisticName])) {","            sum += item.stateData[statisticName];","            count++;","        }","    });","","    callback(null, sum / count);","};","","/**"," * Called when {@link FetchQueue#countItems} returns a result"," * @callback FetchQueue~countItemsCallback"," * @param {Error} [error]  If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [count] The number of items that matched the provided selector"," */","","/**"," * Counts the items in the queue that match a selector"," * @param {Object} comparator                      Comparator object used to filter items. Queue items that are counted need to match all the properties of this object."," * @param {FetchQueue~countItemsCallback} callback"," */","FetchQueue.prototype.countItems = function(comparator, callback) {","    this.filterItems(comparator, function(error, items) {","        if (error) {","            callback(error);","        } else {","            callback(null, items.length);","        }","    });","};","","/**"," * Called when {@link FetchQueue#filterItems} returns a result"," * @callback FetchQueue~filterItemsCallback"," * @param {Error} [error]       If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {QueueItem[]} [items] The items that matched the provided selector"," */","","/**"," * Filters and returns the items in the queue that match a selector"," * @param {Object} comparator                       Comparator object used to filter items. Queue items that are returned need to match all the properties of this object."," * @param {FetchQueue~filterItemsCallback} callback"," */","FetchQueue.prototype.filterItems = function(comparator, callback) {","    var items = this.filter(function(queueItem) {","        return compare(comparator, queueItem);","    });","","    callback(null, items);","};","","/**"," * Called when {@link FetchQueue#getLength} returns a result"," * @callback FetchQueue~getLengthCallback"," * @param {Error} [error]  If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Number} [items] The total number of items in the queue"," */","","/**"," * Gets the total number of queue items in the queue"," * @param {FetchQueue~getLengthCallback} callback"," */","FetchQueue.prototype.getLength = function(callback) {","    callback(null, this.length);","};","","/**"," * Called when {@link FetchQueue#freeze} returns a result"," * @callback FetchQueue~freezeCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," */","","/**"," * Writes the queue to disk in a JSON file. This file can later be imported"," * using {@link FetchQueue#defrost}"," * @param {String} filename                    Filename passed directly to [fs.writeFile]{@link https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback}"," * @param {FetchQueue~freezeCallback} callback"," */","FetchQueue.prototype.freeze = function(filename, callback) {","    var queue = this;","","    // Re-queue in-progress items before freezing...","    queue.forEach(function(item) {","        if (item.fetched !== true) {","            item.status = \"queued\";","        }","    });","","    fs.writeFile(filename, JSON.stringify(queue, null, 2), function(err) {","        callback(err);","    });","};","","/**"," * Called when {@link FetchQueue#defrost} returns a result"," * @callback FetchQueue~defrostCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," */","","/**"," * Import the queue from a frozen JSON file on disk."," * @param {String} filename                     Filename passed directly to [fs.readFile]{@link https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback}"," * @param {FetchQueue~defrostCallback} callback"," */","FetchQueue.prototype.defrost = function(filename, callback) {","    var queue = this,","        defrostedQueue = [];","","    fs.readFile(filename, function(err, fileData) {","        if (err) {","            return callback(err);","        }","","        if (!fileData.toString(\"utf8\").length) {","            return callback(new Error(\"Failed to defrost queue from zero-length JSON.\"));","        }","","        try {","            defrostedQueue = JSON.parse(fileData.toString(\"utf8\"));","        } catch (error) {","            return callback(error);","        }","","        queue._oldestUnfetchedIndex = defrostedQueue.length - 1;","        queue._scanIndex = {};","","        for (var i = 0; i < defrostedQueue.length; i++) {","            var queueItem = defrostedQueue[i];","            queue.push(queueItem);","","            if (queueItem.status === \"queued\") {","                queue._oldestUnfetchedIndex = Math.min(queue._oldestUnfetchedIndex, i);","            }","","            queue._scanIndex[queueItem.url] = true;","        }","","        callback(null, queue);","    });","};","","module.exports = FetchQueue;",""],"l":{"6":1,"16":1,"17":0,"18":0,"20":0,"21":0,"24":0,"25":0,"26":0,"28":0,"29":0,"34":0,"42":1,"43":0,"44":0,"45":0,"46":0,"48":0,"53":0,"60":1,"61":0,"70":0,"83":0,"96":0,"109":1,"124":1,"125":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"147":0,"148":0,"149":0,"167":1,"168":0,"169":0,"171":0,"187":1,"188":0,"190":0,"191":0,"192":0,"193":0,"194":0,"196":0,"214":1,"215":0,"218":0,"219":0,"220":0,"221":0,"225":0,"226":0,"228":0,"229":0,"244":1,"245":0,"247":0,"248":0,"249":0,"250":0,"251":0,"258":0,"275":1,"276":0,"279":0,"280":0,"283":0,"284":0,"285":0,"289":0,"306":1,"307":0,"310":0,"311":0,"314":0,"315":0,"316":0,"320":0,"337":1,"338":0,"342":0,"343":0,"346":0,"347":0,"348":0,"349":0,"353":0,"368":1,"369":0,"370":0,"371":0,"373":0,"390":1,"391":0,"392":0,"395":0,"409":1,"410":0,"425":1,"426":0,"429":0,"430":0,"431":0,"435":0,"436":0,"451":1,"452":0,"455":0,"456":0,"457":0,"460":0,"461":0,"464":0,"465":0,"467":0,"470":0,"471":0,"473":0,"474":0,"475":0,"477":0,"478":0,"481":0,"484":0,"488":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cookies.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cookies.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":1,"126":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":27}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":26},"end":{"line":46,"column":90}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":49}}},"4":{"name":"(anonymous_4)","line":100,"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":62}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":24},"end":{"line":104,"column":48}}},"6":{"name":"(anonymous_6)","line":147,"loc":{"start":{"line":147,"column":26},"end":{"line":147,"column":59}}},"7":{"name":"(anonymous_7)","line":148,"loc":{"start":{"line":148,"column":38},"end":{"line":148,"column":55}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":183,"column":34},"end":{"line":183,"column":67}}},"9":{"name":"(anonymous_9)","line":184,"loc":{"start":{"line":184,"column":38},"end":{"line":184,"column":55}}},"10":{"name":"(anonymous_10)","line":198,"loc":{"start":{"line":198,"column":9},"end":{"line":198,"column":26}}},"11":{"name":"(anonymous_11)","line":223,"loc":{"start":{"line":223,"column":37},"end":{"line":223,"column":65}}},"12":{"name":"(anonymous_12)","line":230,"loc":{"start":{"line":230,"column":20},"end":{"line":230,"column":37}}},"13":{"name":"(anonymous_13)","line":245,"loc":{"start":{"line":245,"column":31},"end":{"line":245,"column":42}}},"14":{"name":"(anonymous_14)","line":260,"loc":{"start":{"line":260,"column":13},"end":{"line":260,"column":68}}},"15":{"name":"(anonymous_15)","line":290,"loc":{"start":{"line":290,"column":20},"end":{"line":290,"column":37}}},"16":{"name":"parseKeyVal","line":296,"loc":{"start":{"line":296,"column":4},"end":{"line":296,"column":32}}},"17":{"name":"(anonymous_17)","line":313,"loc":{"start":{"line":313,"column":16},"end":{"line":313,"column":32}}},"18":{"name":"(anonymous_18)","line":317,"loc":{"start":{"line":317,"column":17},"end":{"line":317,"column":34}}},"19":{"name":"(anonymous_19)","line":337,"loc":{"start":{"line":337,"column":28},"end":{"line":337,"column":52}}},"20":{"name":"(anonymous_20)","line":369,"loc":{"start":{"line":369,"column":29},"end":{"line":369,"column":40}}},"21":{"name":"(anonymous_21)","line":381,"loc":{"start":{"line":381,"column":31},"end":{"line":381,"column":48}}},"22":{"name":"(anonymous_22)","line":397,"loc":{"start":{"line":397,"column":29},"end":{"line":397,"column":44}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":12,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"6":{"start":{"line":46,"column":0},"end":{"line":82,"column":2}},"7":{"start":{"line":47,"column":4},"end":{"line":47,"column":38}},"8":{"start":{"line":49,"column":4},"end":{"line":55,"column":5}},"9":{"start":{"line":50,"column":8},"end":{"line":50,"column":76}},"10":{"start":{"line":51,"column":11},"end":{"line":55,"column":5}},"11":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"12":{"start":{"line":54,"column":8},"end":{"line":54,"column":44}},"13":{"start":{"line":58,"column":4},"end":{"line":62,"column":7}},"14":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"15":{"start":{"line":60,"column":12},"end":{"line":60,"column":34}},"16":{"start":{"line":64,"column":4},"end":{"line":68,"column":5}},"17":{"start":{"line":65,"column":8},"end":{"line":65,"column":37}},"18":{"start":{"line":67,"column":8},"end":{"line":67,"column":48}},"19":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"20":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"21":{"start":{"line":78,"column":8},"end":{"line":78,"column":34}},"22":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"23":{"start":{"line":100,"column":0},"end":{"line":131,"column":2}},"24":{"start":{"line":101,"column":4},"end":{"line":102,"column":19}},"25":{"start":{"line":104,"column":4},"end":{"line":117,"column":7}},"26":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"27":{"start":{"line":107,"column":12},"end":{"line":107,"column":25}},"28":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"29":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"30":{"start":{"line":116,"column":8},"end":{"line":116,"column":58}},"31":{"start":{"line":124,"column":4},"end":{"line":124,"column":45}},"32":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"33":{"start":{"line":127,"column":8},"end":{"line":127,"column":39}},"34":{"start":{"line":130,"column":4},"end":{"line":130,"column":26}},"35":{"start":{"line":147,"column":0},"end":{"line":167,"column":2}},"36":{"start":{"line":148,"column":4},"end":{"line":160,"column":7}},"37":{"start":{"line":150,"column":8},"end":{"line":152,"column":9}},"38":{"start":{"line":151,"column":12},"end":{"line":151,"column":25}},"39":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"40":{"start":{"line":156,"column":12},"end":{"line":156,"column":25}},"41":{"start":{"line":159,"column":8},"end":{"line":159,"column":20}},"42":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"43":{"start":{"line":163,"column":8},"end":{"line":163,"column":32}},"44":{"start":{"line":166,"column":4},"end":{"line":166,"column":19}},"45":{"start":{"line":183,"column":0},"end":{"line":207,"column":2}},"46":{"start":{"line":184,"column":4},"end":{"line":200,"column":7}},"47":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"48":{"start":{"line":186,"column":12},"end":{"line":186,"column":25}},"49":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"50":{"start":{"line":189,"column":12},"end":{"line":189,"column":24}},"51":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"52":{"start":{"line":192,"column":12},"end":{"line":192,"column":46}},"53":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"54":{"start":{"line":195,"column":12},"end":{"line":195,"column":42}},"55":{"start":{"line":199,"column":8},"end":{"line":199,"column":33}},"56":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"57":{"start":{"line":203,"column":8},"end":{"line":203,"column":32}},"58":{"start":{"line":206,"column":4},"end":{"line":206,"column":19}},"59":{"start":{"line":223,"column":0},"end":{"line":239,"column":2}},"60":{"start":{"line":224,"column":4},"end":{"line":224,"column":19}},"61":{"start":{"line":226,"column":4},"end":{"line":228,"column":5}},"62":{"start":{"line":227,"column":8},"end":{"line":227,"column":28}},"63":{"start":{"line":230,"column":4},"end":{"line":232,"column":7}},"64":{"start":{"line":231,"column":8},"end":{"line":231,"column":24}},"65":{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},"66":{"start":{"line":235,"column":8},"end":{"line":235,"column":23}},"67":{"start":{"line":238,"column":4},"end":{"line":238,"column":15}},"68":{"start":{"line":245,"column":0},"end":{"line":247,"column":2}},"69":{"start":{"line":246,"column":4},"end":{"line":246,"column":41}},"70":{"start":{"line":260,"column":0},"end":{"line":283,"column":2}},"71":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"72":{"start":{"line":262,"column":8},"end":{"line":262,"column":66}},"73":{"start":{"line":267,"column":4},"end":{"line":275,"column":5}},"74":{"start":{"line":269,"column":8},"end":{"line":271,"column":9}},"75":{"start":{"line":270,"column":12},"end":{"line":270,"column":52}},"76":{"start":{"line":274,"column":8},"end":{"line":274,"column":21}},"77":{"start":{"line":277,"column":4},"end":{"line":277,"column":21}},"78":{"start":{"line":278,"column":4},"end":{"line":278,"column":29}},"79":{"start":{"line":279,"column":4},"end":{"line":279,"column":27}},"80":{"start":{"line":280,"column":4},"end":{"line":280,"column":28}},"81":{"start":{"line":281,"column":4},"end":{"line":281,"column":32}},"82":{"start":{"line":282,"column":4},"end":{"line":282,"column":38}},"83":{"start":{"line":290,"column":0},"end":{"line":330,"column":2}},"84":{"start":{"line":292,"column":4},"end":{"line":294,"column":5}},"85":{"start":{"line":293,"column":8},"end":{"line":293,"column":73}},"86":{"start":{"line":296,"column":4},"end":{"line":301,"column":5}},"87":{"start":{"line":297,"column":8},"end":{"line":298,"column":54}},"88":{"start":{"line":300,"column":8},"end":{"line":300,"column":26}},"89":{"start":{"line":303,"column":4},"end":{"line":303,"column":59}},"90":{"start":{"line":305,"column":4},"end":{"line":307,"column":25}},"91":{"start":{"line":309,"column":4},"end":{"line":309,"column":31}},"92":{"start":{"line":310,"column":4},"end":{"line":310,"column":32}},"93":{"start":{"line":312,"column":4},"end":{"line":320,"column":11}},"94":{"start":{"line":314,"column":12},"end":{"line":314,"column":62}},"95":{"start":{"line":318,"column":12},"end":{"line":318,"column":81}},"96":{"start":{"line":319,"column":12},"end":{"line":319,"column":41}},"97":{"start":{"line":322,"column":4},"end":{"line":329,"column":6}},"98":{"start":{"line":337,"column":0},"end":{"line":363,"column":2}},"99":{"start":{"line":338,"column":4},"end":{"line":338,"column":20}},"100":{"start":{"line":340,"column":4},"end":{"line":342,"column":5}},"101":{"start":{"line":341,"column":8},"end":{"line":341,"column":32}},"102":{"start":{"line":344,"column":4},"end":{"line":344,"column":50}},"103":{"start":{"line":346,"column":4},"end":{"line":348,"column":5}},"104":{"start":{"line":347,"column":8},"end":{"line":347,"column":77}},"105":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"106":{"start":{"line":351,"column":8},"end":{"line":351,"column":45}},"107":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"108":{"start":{"line":355,"column":8},"end":{"line":355,"column":49}},"109":{"start":{"line":358,"column":4},"end":{"line":360,"column":5}},"110":{"start":{"line":359,"column":8},"end":{"line":359,"column":31}},"111":{"start":{"line":362,"column":4},"end":{"line":362,"column":18}},"112":{"start":{"line":369,"column":0},"end":{"line":374,"column":2}},"113":{"start":{"line":370,"column":4},"end":{"line":372,"column":5}},"114":{"start":{"line":371,"column":8},"end":{"line":371,"column":21}},"115":{"start":{"line":373,"column":4},"end":{"line":373,"column":37}},"116":{"start":{"line":381,"column":0},"end":{"line":390,"column":2}},"117":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"118":{"start":{"line":383,"column":8},"end":{"line":383,"column":20}},"119":{"start":{"line":386,"column":4},"end":{"line":387,"column":64}},"120":{"start":{"line":389,"column":4},"end":{"line":389,"column":58}},"121":{"start":{"line":397,"column":0},"end":{"line":403,"column":2}},"122":{"start":{"line":398,"column":4},"end":{"line":400,"column":5}},"123":{"start":{"line":399,"column":8},"end":{"line":399,"column":20}},"124":{"start":{"line":402,"column":4},"end":{"line":402,"column":41}},"125":{"start":{"line":405,"column":0},"end":{"line":405,"column":27}},"126":{"start":{"line":406,"column":0},"end":{"line":406,"column":31}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":42}},{"start":{"line":59,"column":46},"end":{"line":59,"column":82}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"6":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"7":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"8":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":25}},{"start":{"line":106,"column":29},"end":{"line":106,"column":49}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":27}},{"start":{"line":111,"column":31},"end":{"line":111,"column":58}}]},"11":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"12":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"13":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},{"start":{"line":150,"column":29},"end":{"line":150,"column":49}}]},"14":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"15":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":27}},{"start":{"line":155,"column":31},"end":{"line":155,"column":58}}]},"16":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"17":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]},"18":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":8}},{"start":{"line":188,"column":8},"end":{"line":188,"column":8}}]},"19":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":12},"end":{"line":188,"column":19}},{"start":{"line":188,"column":23},"end":{"line":188,"column":28}}]},"20":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"21":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"22":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"23":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"24":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"25":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"26":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"27":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":269,"column":8}},{"start":{"line":269,"column":8},"end":{"line":269,"column":8}}]},"28":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":17},"end":{"line":278,"column":22}},{"start":{"line":278,"column":26},"end":{"line":278,"column":28}}]},"29":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":16},"end":{"line":280,"column":20}},{"start":{"line":280,"column":24},"end":{"line":280,"column":27}}]},"30":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":18},"end":{"line":281,"column":24}},{"start":{"line":281,"column":28},"end":{"line":281,"column":31}}]},"31":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"32":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":15}},{"start":{"line":292,"column":19},"end":{"line":292,"column":45}}]},"33":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":8},"end":{"line":325,"column":27}},{"start":{"line":325,"column":31},"end":{"line":325,"column":49}}]},"34":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"35":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":4},"end":{"line":346,"column":4}},{"start":{"line":346,"column":4},"end":{"line":346,"column":4}}]},"36":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":4},"end":{"line":350,"column":4}},{"start":{"line":350,"column":4},"end":{"line":350,"column":4}}]},"37":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"38":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"39":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"40":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"41":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":4}},{"start":{"line":398,"column":4},"end":{"line":398,"column":4}}]}},"code":["/**"," * @file simplecrawler's cookie jar module"," */","","var EventEmitter = require(\"events\").EventEmitter,","    util = require(\"util\");","","/**"," * Creates a new cookie jar"," * @class"," */","var CookieJar = function() {","    EventEmitter.call(this);","","    /**","     * The actual jar that holds the cookies","     * @private","     * @type {Array}","     */","    this.cookies = [];","};","","util.inherits(CookieJar, EventEmitter);","","/**"," * Called when {@link CookieJar#add} returns a result"," * @callback CookieJar~addCallback"," * @param {Error|null} error   If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Cookie|null} cookie The cookie that was added to the jar"," */","","/**"," * Adds a new cookie to the jar, either by creating a new {@link Cookie} object"," * from specific details such as name, value, etc., accepting a string from a"," * Set-Cookie header, or by passing in an existing {@link Cookie} object."," * @fires CookieJar#addcookie"," * @param {String} name                       Name of the new cookie"," * @param {String} value                      Value of the new cookie"," * @param {String|Number} expiry              Expiry timestamp of the new cookie in milliseconds"," * @param {String} [path=\"/\"]                 Limits cookie to a path"," * @param {String} [domain=\"*\"]               Limits cookie to a domain"," * @param {Boolean} [httponly=false]          Specifies whether to include the HttpOnly flag"," * @param {CookieJar~addCallback} [callback]"," * @return {CookieJar}                        Returns the cookie jar instance to enable chained API calls"," */","CookieJar.prototype.add = function(name, value, expiry, path, domain, httponly, callback) {","    var existingIndex = -1, newCookie;","","    if (arguments.length > 1) {","        newCookie = new Cookie(name, value, expiry, path, domain, httponly);","    } else if (name instanceof Cookie) {","        newCookie = name;","    } else {","        newCookie = Cookie.fromString(name);","    }","","    // Are we updating an existing cookie or adding a new one?","    this.cookies.forEach(function(cookie, index) {","        if (cookie.name === newCookie.name && cookie.matchDomain(newCookie.domain)) {","            existingIndex = index;","        }","    });","","    if (existingIndex === -1) {","        this.cookies.push(newCookie);","    } else {","        this.cookies[existingIndex] = newCookie;","    }","","    /**","     * Fired when a cookie has been added to the jar","     * @event CookieJar#addcookie","     * @param {Cookie} cookie The cookie that has been added","     */","    this.emit(\"addcookie\", newCookie);","","    if (callback instanceof Function) {","        callback(null, newCookie);","    }","","    return this;","};","","/**"," * Called when {@link CookieJar#remove} returns a result"," * @callback CookieJar~removeCallback"," * @param {Error|null} error             If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Cookie[]|null} cookiesRemoved An array of the cookies that were removed from the cookie jar"," */","","/**"," * Removes cookies from the cookie jar. If no domain and name are specified, all"," * cookies in the jar are removed."," * @fires CookieJar#removecookie"," * @param {String} [name]                       Name of the cookie to be removed"," * @param {String} [domain]                     The domain that the cookie applies to"," * @param {CookieJar~removeCallback} [callback]"," * @return {Cookie[]}                           Returns an array of the cookies that were removed from the cookie jar"," */","CookieJar.prototype.remove = function(name, domain, callback) {","    var cookiesRemoved = [],","        jar = this;","","    jar.cookies.forEach(function(cookie, index) {","        // If the names don't match, we're not removing this cookie","        if (Boolean(name) && cookie.name !== name) {","            return false;","        }","","        // If the domains don't match, we're not removing this cookie","        if (Boolean(domain) && !cookie.matchDomain(domain)) {","            return false;","        }","","        // Matched. Remove!","        cookiesRemoved.push(jar.cookies.splice(index, 1));","    });","","    /**","     * Fired when one or multiple cookie have been removed from the jar","     * @event CookieJar#removecookie","     * @param {Cookie[]} cookie The cookies that have been removed","     */","    jar.emit(\"removecookie\", cookiesRemoved);","","    if (callback instanceof Function) {","        callback(null, cookiesRemoved);","    }","","    return cookiesRemoved;","};","","/**"," * Called when {@link CookieJar#get} returns a result"," * @callback CookieJar~getCallback"," * @param {Error} [error]      If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {Cookie[]} [cookies] An array of cookies that matched the name and/or domain."," */","","/**"," * Gets an array of cookies based on name and domain"," * @param  {String} [name]                    Name of the cookie to retrieve"," * @param  {String} [domain]                  Domain to retrieve the cookies from"," * @param  {CookieJar~getCallback} [callback]"," * @return {Cookie[]}                         Returns an array of cookies that matched the name and/or domain"," */","CookieJar.prototype.get = function(name, domain, callback) {","    var cookies = this.cookies.filter(function(cookie) {","        // If the names don't match, we're not returning this cookie","        if (Boolean(name) && cookie.name !== name) {","            return false;","        }","","        // If the domains don't match, we're not returning this cookie","        if (Boolean(domain) && !cookie.matchDomain(domain)) {","            return false;","        }","","        return true;","    });","","    if (callback instanceof Function) {","        callback(null, cookies);","    }","","    return cookies;","};","","/**"," * Called when {@link CookieJar#getAsHeader} returns a result"," * @callback CookieJar~getAsHeaderCallback"," * @param {Error} [error]      If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," * @param {String[]} [cookies] An array of HTTP header formatted cookies."," */","","/**"," * Generates an array of headers based on the value of the cookie jar"," * @param {String} [domain]                          The domain from which to generate cookies"," * @param {String} [path]                            Filter headers to cookies applicable to this path"," * @param {CookieJar~getAsHeaderCallback} [callback]"," * @return {String[]}                                Returns an array of HTTP header formatted cookies"," */","CookieJar.prototype.getAsHeader = function(domain, path, callback) {","    var headers = this.cookies.filter(function(cookie) {","        if (cookie.isExpired()) {","            return false;","        }","        if (!domain && !path) {","            return true;","        }","        if (domain) {","            return cookie.matchDomain(domain);","        }","        if (path) {","            return cookie.matchPath(path);","        }","    })","    .map(function(cookie) {","        return cookie.toString();","    });","","    if (callback instanceof Function) {","        callback(null, headers);","    }","","    return headers;","};","","/**"," * Called when {@link CookieJar#addFromHeaders} returns a result"," * @callback CookieJar~addFromHeadersCallback"," * @param {Error} [error] If the operation was successful, this will be `null`. Otherwise it will be the error that was encountered."," */","","/**"," * Adds cookies to the cookie jar based on an array of 'Set-Cookie' headers"," * provided by a web server. Duplicate cookies are overwritten."," * @fires CookieJar#addcookie"," * @param {String|String[]} headers                     One or multiple Set-Cookie headers to be added to the cookie jar"," * @param {CookieJar~addFromHeadersCallback} [callback]"," * @return {CookieJar}                                  Returns the cookie jar instance to enable chained API calls"," */","CookieJar.prototype.addFromHeaders = function(headers, callback) {","    var jar = this;","","    if (!Array.isArray(headers)) {","        headers = [headers];","    }","","    headers.forEach(function(header) {","        jar.add(header);","    });","","    if (callback instanceof Function) {","        callback(null);","    }","","    return jar;","};","","/**"," * Generates a newline-separated list of all cookies in the jar"," * @return {String} Returns stringified versions of all cookies in the jar in a newline separated string"," */","CookieJar.prototype.toString = function() {","    return this.getAsHeader().join(\"\\n\");","};","","","/**"," * Creates a new cookies"," * @class"," * @param {String} name                       Name of the new cookie"," * @param {String} value                      Value of the new cookie"," * @param {String|Number} expires             Expiry timestamp of the new cookie in milliseconds"," * @param {String} [path=\"/\"]                 Limits cookie to a path"," * @param {String} [domain=\"*\"]               Limits cookie to a domain"," * @param {Boolean} [httponly=false]          Specifies whether to include the HttpOnly flag"," */","var Cookie = function(name, value, expires, path, domain, httponly) {","    if (!name) {","        throw new Error(\"A name is required to create a cookie.\");","    }","","    // Parse date to timestamp - consider it never expiring if timestamp is not","    // passed to the function","    if (expires) {","","        if (typeof expires !== \"number\") {","            expires = (new Date(expires)).getTime();","        }","","    } else {","        expires = -1;","    }","","    this.name = name;","    this.value = value || \"\";","    this.expires = expires;","    this.path = path || \"/\";","    this.domain = domain || \"*\";","    this.httponly = Boolean(httponly);","};","","/**"," * Creates a new {@link Cookie} based on a header string"," * @param  {String} string A Set-Cookie header string"," * @return {Cookie}        Returns a newly created Cookie object"," */","Cookie.fromString = function(string) {","","    if (!string || typeof string !== \"string\") {","        throw new Error(\"String must be supplied to generate a cookie.\");","    }","","    function parseKeyVal(input) {","        var key = input.split(/=/).shift(),","            val = input.split(/=/).slice(1).join(\"=\");","","        return [key, val];","    }","","    string = string.replace(/^\\s*set\\-cookie\\s*:\\s*/i, \"\");","","    var parts = string.split(/\\s*;\\s*/i),","        name = parseKeyVal(parts.shift()),","        keyValParts = {};","","    keyValParts.name = name[0];","    keyValParts.value = name[1];","","    parts","        .filter(function(input) {","            return Boolean(input.replace(/\\s+/ig, \"\").length);","        })","        .map(parseKeyVal)","        .forEach(function(keyval) {","            var key = String(keyval[0]).toLowerCase().replace(/[^a-z0-9]/ig, \"\");","            keyValParts[key] = keyval[1];","        });","","    return new Cookie(","        keyValParts.name,","        keyValParts.value,","        keyValParts.expires || keyValParts.expiry,","        keyValParts.path,","        keyValParts.domain,","        keyValParts.hasOwnProperty(\"httponly\")","    );","};","","/**"," * Outputs the cookie as a string, in the form of a Set-Cookie header"," * @param  {Boolean} [includeHeader] Controls whether to include the 'Set-Cookie: ' header name at the beginning of the string."," * @return {String}                  Stringified version of the cookie"," */","Cookie.prototype.toString = function(includeHeader) {","    var string = \"\";","","    if (includeHeader) {","        string = \"Set-Cookie: \";","    }","","    string += this.name + \"=\" + this.value + \"; \";","","    if (this.expires > 0) {","        string += \"Expires=\" + (new Date(this.expires)).toGMTString() + \"; \";","    }","","    if (this.path) {","        string += \"Path=\" + this.path + \"; \";","    }","","    if (this.domain) {","        string += \"Domain=\" + this.domain + \"; \";","    }","","    if (this.httponly) {","        string += \"Httponly; \";","    }","","    return string;","};","","/**"," * Determines whether a cookie has expired or not"," * @return {Boolean} Returns true if the cookie has expired. Otherwise, it returns false."," */","Cookie.prototype.isExpired = function() {","    if (this.expires < 0) {","        return false;","    }","    return this.expires < Date.now();","};","","/**"," * Determines whether a cookie matches a given domain"," * @param  {String} domain The domain to match against"," * @return {Boolean}       Returns true if the provided domain matches the cookie's domain. Otherwise, it returns false."," */","Cookie.prototype.matchDomain = function(domain) {","    if (this.domain === \"*\") {","        return true;","    }","","    var reverseDomain = this.domain.split(\"\").reverse().join(\"\"),","        reverseDomainComp = domain.split(\"\").reverse().join(\"\");","","    return reverseDomain.indexOf(reverseDomainComp) === 0;","};","","/**"," * Determines whether a cookie matches a given path"," * @param  {String} path The path to match against"," * @return {Boolean}     Returns true if the provided path matches the cookie's path. Otherwise, it returns false."," */","Cookie.prototype.matchPath = function(path) {","    if (!this.path) {","        return true;","    }","","    return path.indexOf(this.path) === 0;","};","","module.exports = CookieJar;","module.exports.Cookie = Cookie;",""],"l":{"5":1,"12":1,"13":0,"20":0,"23":1,"46":1,"47":0,"49":0,"50":0,"51":0,"52":0,"54":0,"58":0,"59":0,"60":0,"64":0,"65":0,"67":0,"75":0,"77":0,"78":0,"81":0,"100":1,"101":0,"104":0,"106":0,"107":0,"111":0,"112":0,"116":0,"124":0,"126":0,"127":0,"130":0,"147":1,"148":0,"150":0,"151":0,"155":0,"156":0,"159":0,"162":0,"163":0,"166":0,"183":1,"184":0,"185":0,"186":0,"188":0,"189":0,"191":0,"192":0,"194":0,"195":0,"199":0,"202":0,"203":0,"206":0,"223":1,"224":0,"226":0,"227":0,"230":0,"231":0,"234":0,"235":0,"238":0,"245":1,"246":0,"260":1,"261":0,"262":0,"267":0,"269":0,"270":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"290":1,"292":0,"293":0,"296":1,"297":0,"300":0,"303":0,"305":0,"309":0,"310":0,"312":0,"314":0,"318":0,"319":0,"322":0,"337":1,"338":0,"340":0,"341":0,"344":0,"346":0,"347":0,"350":0,"351":0,"354":0,"355":0,"358":0,"359":0,"362":0,"369":1,"370":0,"371":0,"373":0,"381":1,"382":0,"383":0,"386":0,"389":0,"397":1,"398":0,"399":0,"402":0,"405":1,"406":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cache.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":1,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Cache","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":61}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":31},"end":{"line":29,"column":69}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":31},"end":{"line":34,"column":63}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":28},"end":{"line":38,"column":39}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"3":{"start":{"line":13,"column":0},"end":{"line":24,"column":2}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":87}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":105}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":74}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}},"9":{"start":{"line":29,"column":0},"end":{"line":32,"column":2}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":56}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":45}},"12":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":50}},"14":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":23}},"17":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}},"18":{"start":{"line":44,"column":0},"end":{"line":44,"column":53}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":54},"end":{"line":16,"column":66}},{"start":{"line":16,"column":69},"end":{"line":16,"column":86}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":63},"end":{"line":17,"column":81}},{"start":{"line":17,"column":84},"end":{"line":17,"column":104}}]}},"code":["/*"," * Simplecrawler - cache module"," * https://github.com/cgiffard/node-simplecrawler"," *"," * Copyright (c) 2011-2015, Christopher Giffard"," *"," */","","var EventEmitter = require(\"events\").EventEmitter;","var FilesystemBackend = require(\"./cache-backend-fs.js\");","","// Init cache wrapper for backend...","var Cache = function Cache(cacheLoadParameter, cacheBackend) {","","    // Ensure parameters are how we want them...","    cacheBackend = typeof cacheBackend === \"object\" ? cacheBackend : FilesystemBackend;","    cacheLoadParameter = cacheLoadParameter instanceof Array ? cacheLoadParameter : [cacheLoadParameter];","","    // Now we can just run the factory.","    this.datastore = cacheBackend.apply(cacheBackend, cacheLoadParameter);","","    // Instruct the backend to load up.","    this.datastore.load();","};","","Cache.prototype = new EventEmitter();","","// Set up data import and export functions","Cache.prototype.setCacheData = function(queueObject, data, callback) {","    this.datastore.setItem(queueObject, data, callback);","    this.emit(\"setcache\", queueObject, data);","};","","Cache.prototype.getCacheData = function(queueObject, callback) {","    this.datastore.getItem(queueObject, callback);","};","","Cache.prototype.saveCache = function() {","    this.datastore.saveCache();","};","","module.exports = Cache;","module.exports.Cache = Cache;","module.exports.FilesystemBackend = FilesystemBackend;",""],"l":{"9":1,"10":1,"13":1,"16":0,"17":0,"20":0,"23":0,"26":1,"29":1,"30":0,"31":0,"34":1,"35":0,"38":1,"39":0,"42":1,"43":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cache-backend-fs.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cache-backend-fs.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"backend","line":16,"loc":{"start":{"line":16,"column":14},"end":{"line":16,"column":46}}},"2":{"name":"FSBackend","line":23,"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":50}}},"3":{"name":"sanitisePath","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":41}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":50}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":33},"end":{"line":88,"column":52}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":34},"end":{"line":97,"column":53}}},"7":{"name":"(anonymous_7)","line":109,"loc":{"start":{"line":109,"column":27},"end":{"line":109,"column":38}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":23},"end":{"line":133,"column":34}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":32},"end":{"line":138,"column":51}}},"10":{"name":"(anonymous_10)","line":142,"loc":{"start":{"line":142,"column":30},"end":{"line":142,"column":68}}},"11":{"name":"(anonymous_11)","line":143,"loc":{"start":{"line":143,"column":57},"end":{"line":143,"column":68}}},"12":{"name":"(anonymous_12)","line":151,"loc":{"start":{"line":151,"column":29},"end":{"line":151,"column":60}}},"13":{"name":"(anonymous_13)","line":158,"loc":{"start":{"line":158,"column":24},"end":{"line":158,"column":52}}},"14":{"name":"(anonymous_14)","line":159,"loc":{"start":{"line":159,"column":40},"end":{"line":159,"column":56}}},"15":{"name":"(anonymous_15)","line":163,"loc":{"start":{"line":163,"column":87},"end":{"line":163,"column":103}}},"16":{"name":"(anonymous_16)","line":187,"loc":{"start":{"line":187,"column":22},"end":{"line":187,"column":49}}},"17":{"name":"(anonymous_17)","line":207,"loc":{"start":{"line":207,"column":30},"end":{"line":207,"column":62}}},"18":{"name":"(anonymous_18)","line":208,"loc":{"start":{"line":208,"column":44},"end":{"line":208,"column":59}}},"19":{"name":"(anonymous_19)","line":219,"loc":{"start":{"line":219,"column":21},"end":{"line":219,"column":40}}},"20":{"name":"(anonymous_20)","line":220,"loc":{"start":{"line":220,"column":48},"end":{"line":220,"column":70}}},"21":{"name":"(anonymous_21)","line":229,"loc":{"start":{"line":229,"column":25},"end":{"line":229,"column":44}}},"22":{"name":"(anonymous_22)","line":230,"loc":{"start":{"line":230,"column":48},"end":{"line":230,"column":70}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":13,"column":31}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"5":{"start":{"line":23,"column":0},"end":{"line":28,"column":2}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":126}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":113}},"10":{"start":{"line":35,"column":0},"end":{"line":86,"column":1}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":35}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":23}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":80}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":68}},"15":{"start":{"line":45,"column":4},"end":{"line":50,"column":5}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":56}},"17":{"start":{"line":47,"column":8},"end":{"line":47,"column":50}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":100}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":50}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"21":{"start":{"line":53,"column":4},"end":{"line":59,"column":7}},"22":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"23":{"start":{"line":55,"column":12},"end":{"line":55,"column":77}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":40}},"26":{"start":{"line":68,"column":4},"end":{"line":83,"column":5}},"27":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"28":{"start":{"line":70,"column":8},"end":{"line":70,"column":27}},"29":{"start":{"line":72,"column":8},"end":{"line":82,"column":9}},"30":{"start":{"line":73,"column":12},"end":{"line":77,"column":13}},"31":{"start":{"line":74,"column":16},"end":{"line":74,"column":46}},"32":{"start":{"line":76,"column":16},"end":{"line":76,"column":41}},"33":{"start":{"line":79,"column":15},"end":{"line":82,"column":9}},"34":{"start":{"line":80,"column":12},"end":{"line":80,"column":39}},"35":{"start":{"line":81,"column":12},"end":{"line":81,"column":47}},"36":{"start":{"line":85,"column":4},"end":{"line":85,"column":25}},"37":{"start":{"line":88,"column":0},"end":{"line":95,"column":2}},"38":{"start":{"line":89,"column":4},"end":{"line":94,"column":5}},"39":{"start":{"line":90,"column":8},"end":{"line":90,"column":30}},"40":{"start":{"line":91,"column":8},"end":{"line":91,"column":20}},"41":{"start":{"line":93,"column":8},"end":{"line":93,"column":21}},"42":{"start":{"line":97,"column":0},"end":{"line":107,"column":2}},"43":{"start":{"line":98,"column":4},"end":{"line":106,"column":5}},"44":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"45":{"start":{"line":100,"column":12},"end":{"line":100,"column":24}},"46":{"start":{"line":103,"column":8},"end":{"line":103,"column":21}},"47":{"start":{"line":105,"column":8},"end":{"line":105,"column":21}},"48":{"start":{"line":109,"column":0},"end":{"line":136,"column":2}},"49":{"start":{"line":110,"column":4},"end":{"line":110,"column":23}},"50":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"51":{"start":{"line":113,"column":8},"end":{"line":113,"column":67}},"52":{"start":{"line":116,"column":4},"end":{"line":130,"column":5}},"53":{"start":{"line":117,"column":8},"end":{"line":117,"column":21}},"54":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"55":{"start":{"line":119,"column":12},"end":{"line":119,"column":66}},"56":{"start":{"line":120,"column":12},"end":{"line":120,"column":34}},"57":{"start":{"line":123,"column":8},"end":{"line":129,"column":9}},"58":{"start":{"line":126,"column":12},"end":{"line":126,"column":34}},"59":{"start":{"line":128,"column":12},"end":{"line":128,"column":24}},"60":{"start":{"line":133,"column":4},"end":{"line":135,"column":7}},"61":{"start":{"line":134,"column":8},"end":{"line":134,"column":41}},"62":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"63":{"start":{"line":139,"column":4},"end":{"line":139,"column":90}},"64":{"start":{"line":142,"column":0},"end":{"line":205,"column":2}},"65":{"start":{"line":143,"column":4},"end":{"line":143,"column":71}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":23}},"67":{"start":{"line":146,"column":4},"end":{"line":146,"column":79}},"68":{"start":{"line":147,"column":4},"end":{"line":147,"column":92}},"69":{"start":{"line":149,"column":4},"end":{"line":149,"column":32}},"70":{"start":{"line":150,"column":4},"end":{"line":150,"column":33}},"71":{"start":{"line":151,"column":4},"end":{"line":156,"column":5}},"72":{"start":{"line":152,"column":8},"end":{"line":152,"column":85}},"73":{"start":{"line":153,"column":8},"end":{"line":153,"column":55}},"74":{"start":{"line":155,"column":8},"end":{"line":155,"column":31}},"75":{"start":{"line":158,"column":4},"end":{"line":185,"column":6}},"76":{"start":{"line":159,"column":8},"end":{"line":184,"column":11}},"77":{"start":{"line":160,"column":12},"end":{"line":162,"column":13}},"78":{"start":{"line":161,"column":16},"end":{"line":161,"column":28}},"79":{"start":{"line":163,"column":12},"end":{"line":183,"column":15}},"80":{"start":{"line":164,"column":16},"end":{"line":166,"column":17}},"81":{"start":{"line":165,"column":20},"end":{"line":165,"column":32}},"82":{"start":{"line":168,"column":16},"end":{"line":174,"column":18}},"83":{"start":{"line":176,"column":16},"end":{"line":180,"column":17}},"84":{"start":{"line":177,"column":20},"end":{"line":177,"column":68}},"85":{"start":{"line":179,"column":20},"end":{"line":179,"column":52}},"86":{"start":{"line":182,"column":16},"end":{"line":182,"column":38}},"87":{"start":{"line":187,"column":4},"end":{"line":204,"column":7}},"88":{"start":{"line":188,"column":8},"end":{"line":188,"column":85}},"89":{"start":{"line":189,"column":8},"end":{"line":203,"column":9}},"90":{"start":{"line":190,"column":12},"end":{"line":197,"column":13}},"91":{"start":{"line":191,"column":16},"end":{"line":196,"column":17}},"92":{"start":{"line":193,"column":20},"end":{"line":193,"column":53}},"93":{"start":{"line":195,"column":20},"end":{"line":195,"column":120}},"94":{"start":{"line":198,"column":15},"end":{"line":203,"column":9}},"95":{"start":{"line":200,"column":12},"end":{"line":200,"column":45}},"96":{"start":{"line":202,"column":12},"end":{"line":202,"column":38}},"97":{"start":{"line":207,"column":0},"end":{"line":246,"column":2}},"98":{"start":{"line":208,"column":4},"end":{"line":210,"column":7}},"99":{"start":{"line":209,"column":8},"end":{"line":209,"column":44}},"100":{"start":{"line":212,"column":4},"end":{"line":243,"column":5}},"101":{"start":{"line":213,"column":8},"end":{"line":213,"column":48}},"102":{"start":{"line":215,"column":8},"end":{"line":239,"column":11}},"103":{"start":{"line":220,"column":16},"end":{"line":227,"column":19}},"104":{"start":{"line":221,"column":20},"end":{"line":224,"column":21}},"105":{"start":{"line":222,"column":24},"end":{"line":222,"column":40}},"106":{"start":{"line":223,"column":24},"end":{"line":223,"column":37}},"107":{"start":{"line":226,"column":20},"end":{"line":226,"column":41}},"108":{"start":{"line":230,"column":16},"end":{"line":237,"column":19}},"109":{"start":{"line":231,"column":20},"end":{"line":234,"column":21}},"110":{"start":{"line":232,"column":24},"end":{"line":232,"column":40}},"111":{"start":{"line":233,"column":24},"end":{"line":233,"column":37}},"112":{"start":{"line":236,"column":20},"end":{"line":236,"column":70}},"113":{"start":{"line":242,"column":8},"end":{"line":242,"column":23}},"114":{"start":{"line":245,"column":4},"end":{"line":245,"column":17}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":84},"end":{"line":26,"column":97}},{"start":{"line":26,"column":100},"end":{"line":26,"column":125}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":20},"end":{"line":26,"column":53}},{"start":{"line":26,"column":57},"end":{"line":26,"column":81}}]},"3":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":77},"end":{"line":27,"column":90}},{"start":{"line":27,"column":93},"end":{"line":27,"column":112}}]},"4":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":38},"end":{"line":42,"column":64}},{"start":{"line":42,"column":67},"end":{"line":42,"column":79}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":49}},{"start":{"line":68,"column":53},"end":{"line":68,"column":76}},{"start":{"line":68,"column":80},"end":{"line":68,"column":124}},{"start":{"line":68,"column":128},"end":{"line":68,"column":163}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"10":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":35}},{"start":{"line":72,"column":39},"end":{"line":72,"column":83}}]},"11":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":12}},{"start":{"line":73,"column":12},"end":{"line":73,"column":12}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":15},"end":{"line":79,"column":15}},{"start":{"line":79,"column":15},"end":{"line":79,"column":15}}]},"13":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":19},"end":{"line":79,"column":42}},{"start":{"line":79,"column":47},"end":{"line":79,"column":137}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"15":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"16":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":45}},{"start":{"line":112,"column":49},"end":{"line":112,"column":86}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"18":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":13},"end":{"line":118,"column":77}},{"start":{"line":118,"column":82},"end":{"line":118,"column":97}}]},"19":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"20":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":46},"end":{"line":143,"column":54}},{"start":{"line":143,"column":57},"end":{"line":143,"column":70}}]},"21":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"22":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":58},"end":{"line":152,"column":76}},{"start":{"line":152,"column":79},"end":{"line":152,"column":84}}]},"23":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":15},"end":{"line":153,"column":19}},{"start":{"line":153,"column":23},"end":{"line":153,"column":54}}]},"24":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":12}},{"start":{"line":160,"column":12},"end":{"line":160,"column":12}}]},"25":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":16},"end":{"line":164,"column":16}},{"start":{"line":164,"column":16},"end":{"line":164,"column":16}}]},"26":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":16},"end":{"line":176,"column":16}},{"start":{"line":176,"column":16},"end":{"line":176,"column":16}}]},"27":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"28":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":12}},{"start":{"line":190,"column":12},"end":{"line":190,"column":12}}]},"29":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":16},"end":{"line":191,"column":16}},{"start":{"line":191,"column":16},"end":{"line":191,"column":16}}]},"30":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":15},"end":{"line":198,"column":15}},{"start":{"line":198,"column":15},"end":{"line":198,"column":15}}]},"31":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"32":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":20},"end":{"line":221,"column":20}},{"start":{"line":221,"column":20},"end":{"line":221,"column":20}}]},"33":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":20},"end":{"line":231,"column":20}},{"start":{"line":231,"column":20},"end":{"line":231,"column":20}}]}},"code":["/*"," * Simplecrawler - FS cache backend"," * https://github.com/cgiffard/node-simplecrawler"," *"," * Copyright (c) 2011-2015, Christopher Giffard"," *"," */","","// Tries to ensure a local 'cache' of a website is as close as possible to a mirror of the website itself.","// The idea is that it is then possible to re-serve the website just using the cache.","","var fs = require(\"fs\"),","    crypto = require(\"crypto\");","","// Factory for FSBackend","var backend = function backend(loadParameter) {","    return new FSBackend(loadParameter);","};","","module.exports = backend;","","// Constructor for filesystem cache backend","var FSBackend = function FSBackend(loadParameter) {","    this.loaded = false;","    this.index = [];","    this.location = typeof loadParameter === \"string\" && loadParameter.length > 0 ? loadParameter : process.cwd() + \"/cache/\";","    this.location = this.location.substr(this.location.length - 1) === \"/\" ? this.location : this.location + \"/\";","};","","// Function for sanitising paths","// We try to get the most understandable, file-system friendly paths we can.","// An extension is added if not present or inappropriate - if a better one can be determined.","// Querystrings are hashed to truncate without (hopefully) collision.","","function sanitisePath(path, queueObject) {","    // Remove first slash (as we set one later.)","    path = path.replace(/^\\//, \"\");","","    var pathStack = [];","","    // Trim whitespace. If no path is present - assume index.html.","    var sanitisedPath = path.length ? path.replace(/\\s*$/ig, \"\") : \"index.html\";","    var headers = queueObject.stateData.headers, sanitisedPathParts;","","    if (sanitisedPath.match(/\\?/)) {","        sanitisedPathParts = sanitisedPath.split(/\\?/g);","        var resource = sanitisedPathParts.shift();","        var hashedQS = crypto.createHash(\"sha1\").update(sanitisedPathParts.join(\"?\")).digest(\"hex\");","        sanitisedPath = resource + \"?\" + hashedQS;","    }","","    pathStack = sanitisedPath.split(/\\//g);","    pathStack = pathStack.map(function(pathChunk) {","        if (pathChunk.length >= 250) {","            return crypto.createHash(\"sha1\").update(pathChunk).digest(\"hex\");","        }","","        return pathChunk;","    });","","    sanitisedPath = pathStack.join(\"/\");","","    // Try to get a file extension for the file - for ease of identification","    // We run through this if we either:","    //  1) haven't got a file extension at all, or:","    //  2) have an HTML file without an HTML file extension (might be .php, .aspx, .do, or some other server-processed type)","","    if (!sanitisedPath.match(/\\.[a-z0-9]{1,6}$/i) || headers[\"content-type\"] && headers[\"content-type\"].match(/text\\/html/i) && !sanitisedPath.match(/\\.htm[l]?$/i)) {","        var subMimeType = \"\";","        var mimeParts = [];","","        if (headers[\"content-type\"] && headers[\"content-type\"].match(/text\\/html/i)) {","            if (sanitisedPath.match(/\\/$/)) {","                sanitisedPath += \"index.html\";","            } else {","                sanitisedPath += \".html\";","            }","","        } else if (headers[\"content-type\"] && (mimeParts = headers[\"content-type\"].match(/(image|video|audio|application)\\/([a-z0-9]+)/i))) {","            subMimeType = mimeParts[2];","            sanitisedPath += \".\" + subMimeType;","        }","    }","","    return sanitisedPath;","}","","FSBackend.prototype.fileExists = function(location) {","    try {","        fs.statSync(location);","        return true;","    } catch (er) {","        return false;","    }","};","","FSBackend.prototype.isDirectory = function(location) {","    try {","        if (fs.statSync(location).isDirectory()) {","            return true;","        }","","        return false;","    } catch (er) {","        return false;","    }","};","","FSBackend.prototype.load = function() {","    var backend = this;","","    if (!backend.fileExists(backend.location) && backend.isDirectory(backend.location)) {","        throw new Error(\"Unable to verify cache location exists.\");","    }","","    try {","        var fileData;","        if ((fileData = fs.readFileSync(backend.location + \"cacheindex.json\")) && fileData.length) {","            backend.index = JSON.parse(fileData.toString(\"utf8\"));","            backend.loaded = true;","        }","    } catch (error) {","        if (error.code === \"ENOENT\") {","            // Cache index doesn't exist. Assume this is a new cache.","            // Just leave the memory index empty for now.","            backend.loaded = true;","        } else {","            throw error;","        }","    }","","    // Flush store to disk when closing.","    process.on(\"exit\", function() {","        backend.saveCache.apply(backend);","    });","};","","FSBackend.prototype.saveCache = function(callback) {","    fs.writeFile(this.location + \"cacheindex.json\", JSON.stringify(this.index), callback);","};","","FSBackend.prototype.setItem = function(queueObject, data, callback) {","    callback = callback instanceof Function ? callback : function() {};","","    var backend = this;","    var pathStack = [queueObject.protocol, queueObject.host, queueObject.port];","    pathStack = pathStack.concat(sanitisePath(queueObject.path, queueObject).split(/\\/+/g));","","    var cacheItemExists = false;","    var firstInstanceIndex = NaN;","    if (backend.index.reduce(function(prev, current, index) {","        firstInstanceIndex = !isNaN(firstInstanceIndex) ? firstInstanceIndex : index;","        return prev || current.url === queueObject.url;","    }, false)) {","        cacheItemExists = true;","    }","","    var writeFileData = function(currentPath, data) {","        fs.writeFile(currentPath, data, function(error) {","            if (error) {","                throw error;","            }","            fs.writeFile(currentPath + \".cacheData.json\", JSON.stringify(queueObject), function(error) {","                if (error) {","                    throw error;","                }","","                var cacheObject = {","                    url: queueObject.url,","                    etag: queueObject.stateData.headers.etag,","                    lastModified: queueObject.stateData.headers[\"last-modified\"],","                    dataFile: currentPath,","                    metaFile: currentPath + \".cacheData.json\"","                };","","                if (cacheItemExists) {","                    backend.index[firstInstanceIndex] = cacheObject;","                } else {","                    backend.index.push(cacheObject);","                }","","                callback(cacheObject);","            });","        });","    };","","    pathStack.forEach(function(pathChunk, count) {","        var currentPath = backend.location + pathStack.slice(0, count + 1).join(\"/\");","        if (backend.fileExists(backend.location + pathStack.slice(0, count + 1).join(\"/\"))) {","            if (!backend.isDirectory(currentPath)) {","                if (count === pathStack.length - 1) {","                    // Just overwrite the file...","                    writeFileData(currentPath, data);","                } else {","                    throw new Error(\"Cache storage of resource (%s) blocked by file: %s\", queueObject.url, currentPath);","                }","            }","        } else if (count === pathStack.length - 1) {","            // Write the file data in","            writeFileData(currentPath, data);","        } else {","            fs.mkdirSync(currentPath);","        }","    });","};","","FSBackend.prototype.getItem = function(queueObject, callback) {","    var cacheItemResult = this.index.filter(function(item) {","        return item.url === queueObject.url;","    });","","    if (cacheItemResult.length) {","        var cacheItem = cacheItemResult.shift();","","        callback({","            url: cacheItem.url,","            etag: cacheItem.etag,","            lastModified: cacheItem.lastModified,","            getData: function(callback) {","                fs.readFile(cacheItem.dataFile, function(error, data) {","                    if (error) {","                        callback(error);","                        return false;","                    }","","                    callback(null, data);","                });","            },","            getMetadata: function(callback) {","                fs.readFile(cacheItem.metaFile, function(error, data) {","                    if (error) {","                        callback(error);","                        return false;","                    }","","                    callback(null, JSON.parse(data.toString(\"utf8\")));","                });","            }","        });","","    } else {","        callback(null);","    }","","    return false;","};",""],"l":{"12":1,"16":1,"17":0,"20":1,"23":1,"24":0,"25":0,"26":0,"27":0,"35":1,"37":0,"39":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"58":0,"61":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"76":0,"79":0,"80":0,"81":0,"85":0,"88":1,"89":0,"90":0,"91":0,"93":0,"97":1,"98":0,"99":0,"100":0,"103":0,"105":0,"109":1,"110":0,"112":0,"113":0,"116":0,"117":0,"118":0,"119":0,"120":0,"123":0,"126":0,"128":0,"133":0,"134":0,"138":1,"139":0,"142":1,"143":0,"145":0,"146":0,"147":0,"149":0,"150":0,"151":0,"152":0,"153":0,"155":0,"158":0,"159":0,"160":0,"161":0,"163":0,"164":0,"165":0,"168":0,"176":0,"177":0,"179":0,"182":0,"187":0,"188":0,"189":0,"190":0,"191":0,"193":0,"195":0,"198":0,"200":0,"202":0,"207":1,"208":0,"209":0,"212":0,"213":0,"215":0,"220":0,"221":0,"222":0,"223":0,"226":0,"230":0,"231":0,"232":0,"233":0,"236":0,"242":0,"245":0}},"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-simplecrawler/node_modules/simplecrawler/lib/cli.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["// CLI module for crawling.","// Not yet built.",""],"l":{}}}